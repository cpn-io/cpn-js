group 'cpnide-ide-back'
version '1.0-SNAPSHOT'


println "java.home = " + System.getProperty("java.home")

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    configurations {
        classpath {
            // exclude group: 'ch.qos.logback', module: 'logback'
            // OR
            // exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        }
    }
    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

//apply plugin: 'application'
//mainClassName = 'com.indevstudio.cpnide.server.App'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile fileTree(include: ['*.jar'], dir: 'lib/eclips-common')
//    compile fileTree(include: ['*.jar'], dir: 'lib/accescpnlibs')

    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'org.json', name: 'json', version: '20090211'
    // compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

    compile files('lib/accescpnlibs/cosimulation.jar')
    compile files('lib/accescpnlibs/engineprotocol.jar')
    compile files('lib/accescpnlibs/engine-proxy.jar')
    compile files('lib/accescpnlibs/highlevel.jar')
    compile files('lib/accescpnlibs/model.jar')
    compile files('lib/accescpnlibs/model-importer.jar')
    compile files('lib/accescpnlibs/model-exporter.jar')
    compile files('lib/accescpnlibs/engine.jar')
    compile "net.javacrumbs:json-xml:4.1"
    // compile files('lib/bin/org')
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'org.slf4j'
    all*.exclude module: 'slf4j-log4j12'
    all*.exclude module: 'ch.qos.logback'
}


//bootRun {
//    dependsOn 'archiveClasspath'
//    doFirst {
//        classpath = files(sourceSets.main.output.files, archiveClasspath.archivePath)
//    }
//}

jar {
    baseName = 'cpn-ide-server'
    version =  '0.1.0'
}

//jar {
//    manifest {
//        attributes 'Main-Class': 'com.indevstudio.cpnide.server.App'
//    }
//}

//jar {
//    zip64 true
//
//    baseName = 'cpnide-ide-server'
//
//    manifest {
//        attributes 'Main-Class': 'com.indevstudio.cpnide.server.App'
//    }
//
////    from {
////        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
////    }
//
//    from (configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
//        exclude 'META-INF/MANIFEST.MF'
//        exclude 'META-INF/*.SF'
//        exclude 'META-INF/*.DSA'
//        exclude 'META-INF/*.RSA'
//    }
//
////    from (configurations.compile.collect { entry -> zipTree(entry) }) {
////        exclude 'META-INF/MANIFEST.MF'
////        exclude 'META-INF/*.SF'
////        exclude 'META-INF/*.DSA'
////        exclude 'META-INF/*.RSA'
////    }
//
//}
