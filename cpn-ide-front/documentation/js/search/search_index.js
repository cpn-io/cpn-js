var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/AccessCpnService.html",[0,1.738,1,1.654]],["body/injectables/AccessCpnService.html",[0,1.599,1,1.521,2,1.351,3,0.084,4,0.074,5,0.053,6,5.892,7,1.916,8,0.152,9,0.498,10,3.739,11,4.328,12,4.328,13,4.328,14,4.618,15,6.913,16,4.328,17,4.328,18,4.328,19,4.328,20,0.258,21,4.328,22,4.913,23,5.945,24,4.913,25,4.913,26,4.913,27,1.073,28,4.913,29,4.913,30,5.68,31,4.913,32,4.913,33,5.945,34,5.945,35,4.913,36,5.945,37,5.346,38,5.945,39,4.913,40,3.496,41,3.496,42,0.478,43,1.916,44,3.804,45,2.147,46,0.363,47,3.496,48,1.112,49,0.017,50,0.751,51,0.259,52,1.112,53,2.707,54,3.496,55,2.218,56,0.721,57,0.497,58,1.329,59,3.496,60,2.218,61,0.754,62,2.707,63,2.452,64,2.707,65,5.322,66,2.863,67,3.496,68,4.913,69,2.218,70,2.218,71,3.021,72,1.951,73,2.326,74,5.945,75,3.496,76,2.218,77,3.496,78,2.218,79,2.218,80,0.801,81,2.218,82,2.218,83,2.218,84,2.218,85,2.218,86,4.913,87,6.16,88,5.718,89,2.218,90,3.021,91,2.218,92,3.496,93,2.218,94,3.496,95,4.139,96,2.218,97,4.913,98,3.496,99,2.218,100,2.218,101,3.496,102,2.218,103,2.13,104,3.496,105,2.707,106,3.496,107,2.218,108,2.872,109,3.496,110,2.218,111,0.922,112,0.8,113,2.218,114,2.218,115,2.218,116,1.525,117,2.218,118,2.218,119,2.218,120,2.218,121,2.218,122,2.218,123,0.672,124,0.256,125,1.717,126,1.569,127,3.351,128,2.218,129,1.717,130,0.877,131,1.014,132,1.916,133,1.916,134,1.916,135,1.916,136,1.45,137,1.569,138,1.351,139,4.681,140,1.351,141,1.127,142,0.084,143,0.052,144,0.919,145,0.877,146,2.218,147,1.712,148,6.196,149,1.916,150,2.218,151,2.218,152,1.312,153,4.328,154,5.346,155,6.73,156,1.405,157,6.73,158,2.218,159,2.218,160,2.328,161,4.913,162,4.913,163,3.061,164,3.351,165,2.218,166,4.913,167,7.61,168,2.707,169,2.707,170,5.346,171,2.218,172,2.218,173,1.916,174,0.544,175,2.218,176,1.311,177,2.218,178,3.496,179,2.218,180,6.49,181,2.218,182,4.328,183,1.569,184,2.218,185,5.025,186,4.243,187,4.243,188,5.607,189,2.218,190,2.218,191,2.218,192,2.218,193,0.965,194,6.619,195,2.218,196,4.347,197,6.49,198,2.218,199,2.218,200,2.218,201,2.218,202,2.218,203,5.346,204,3.496,205,2.218,206,2.218,207,2.218,208,2.218,209,4.913,210,2.218,211,2.218,212,4.603,213,2.218,214,1.916,215,2.218,216,4.913,217,5.346,218,4.913,219,5.346,220,2.218,221,2.218,222,2.218,223,2.218,224,2.218,225,1.521,226,2.218,227,3.496,228,4.328,229,6.16,230,2.218,231,3.496,232,3.496,233,2.218,234,2.218,235,2.218,236,2.218,237,2.218,238,3.496,239,2.218,240,2.218,241,2.218,242,2.218,243,2.218,244,2.218,245,0.005,246,0.007,247,0.005]],["title/components/AppComponent.html",[248,0.126,249,0.751]],["body/components/AppComponent.html",[3,0.167,4,0.146,5,0.105,8,0.301,9,0.909,20,0.424,42,1.236,46,0.323,48,0.793,49,0.017,50,0.778,51,0.303,52,0.793,56,0.907,57,0.301,58,0.868,61,0.947,72,1.391,111,0.758,112,0.657,123,0.696,124,0.507,142,0.167,143,0.103,145,2.269,147,2.269,156,0.868,163,4.057,168,4.441,174,1.077,186,2.873,245,0.009,246,0.012,247,0.009,248,0.212,249,1.337,250,1.236,251,1.032,252,1.077,253,0.989,254,1.566,255,3.796,256,0.793,257,1.888,258,1.729,259,4.955,260,1.406,261,6.386,262,1.406,263,5.735,264,4.175,265,6.769,266,5.735,267,5.735,268,4.394,269,7.202,270,4.944,271,3.867,272,5.735,273,4.394,274,4.394,275,4.394,276,4.394,277,0.793,278,4.394,279,3.402,280,3.402,281,3.402,282,5.848,283,1.822,284,4.394,285,1.66,286,4.394,287,4.394,288,5.735,289,4.394,290,4.394,291,4.394,292,4.394,293,4.394,294,4.441,295,3.796,296,4.955,297,0.907,298,1.291,299,0.699,300,1.032,301,1.523,302,1.032,303,1.032,304,0.868,305,0.947,306,1.032,307,0.868,308,1.236,309,1.032,310,0.868,311,1.183,312,1.5,313,0.868,314,1.291,315,1.032,316,0.868,317,1.5,318,0.868,319,0.989,320,1.347,321,0.907,322,1.236,323,0.868,324,0.868,325,1.032,326,1.347,327,0.868,328,1.596,329,1.032,330,0.907,331,1.032,332,0.907,333,1.032,334,0.868,335,1.032,336,0.868,337,1.723,338,0.868,339,1.032,340,0.868,341,0.947,342,0.868,343,0.947,344,0.868,345,0.536,346,0.868,347,0.947,348,0.868,349,0.868,350,0.947,351,0.868,352,0.907,353,0.868,354,1.032,355,0.868,356,0.868,357,1.032,358,0.868,359,1.032,360,0.868,361,0.947,362,0.947,363,1.032,364,0.868,365,0.947,366,1.032,367,1.032]],["title/modules/AppModule.html",[368,2.316,369,2.689]],["body/modules/AppModule.html",[1,2.802,3,0.116,4,0.102,5,0.073,9,0.637,42,0.661,45,2.326,49,0.017,56,0.923,61,0.661,103,1.868,123,0.875,124,0.354,126,2.169,142,0.116,143,0.072,245,0.006,246,0.009,247,0.006,248,0.102,249,1.429,250,0.661,254,1.55,258,0.661,271,3.679,279,3.462,280,2.374,281,2.374,297,0.633,304,1.272,305,0.661,307,1.272,308,0.964,310,1.272,311,1.197,313,1.272,314,1.006,316,1.272,318,1.272,319,0.69,321,1.329,322,0.964,323,1.272,324,1.272,327,1.272,328,1.52,330,1.329,332,1.329,334,1.272,336,1.272,338,1.272,340,1.272,341,0.964,342,1.272,343,0.964,344,1.272,345,0.545,346,1.272,347,0.964,348,1.272,349,1.272,350,0.964,351,1.272,352,1.329,353,1.272,355,1.272,360,1.272,362,0.661,364,1.272,365,0.661,368,1.868,369,5.732,370,1.868,371,2.005,372,4.087,373,3.793,374,3.733,375,2.169,376,2.649,377,2.649,378,2.649,379,2.649,380,2.649,381,4.211,382,4.211,383,4.211,384,4.211,385,4.211,386,4.211,387,4.211,388,4.211,389,2.433,390,3.679,391,3.924,392,3.462,393,2.005,394,3.066,395,3.462,396,3.066,397,4.472,398,2.374,399,2.169,400,3.066,401,4.472,402,3.163,403,2.005,404,4.472,405,3.066,406,4.472,407,2.649,408,3.451,409,2.649,410,3.863,411,2.169,412,3.462,413,4.472,414,4.472,415,4.472,416,2.374,417,3.066,418,4.472,419,3.863,420,3.535,421,4.472,422,2.649,423,2.649,424,3.863,425,2.374,426,4.472,427,1.868,428,2.374,429,4.472,430,3.863,431,2.649,432,4.472,433,3.066,434,4.472,435,2.649,436,3.066,437,3.066,438,2.374,439,3.066,440,1.868,441,1.649,442,2.374,443,5.278,444,3.066,445,2.374,446,4.472,447,3.163,448,2.374,449,3.462,450,2.649,451,3.066,452,2.374,453,3.066,454,2.374,455,5.278,456,2.649,457,3.066,458,2.649,459,3.066,460,2.649,461,2.374,462,2.374,463,1.402,464,1.558,465,3.066,466,3.066,467,3.066,468,2.374,469,3.066,470,2.374,471,2.374,472,2.649,473,3.066,474,3.066,475,3.066,476,3.066,477,3.066,478,2.649,479,2.374,480,3.066,481,2.374,482,2.374,483,3.066,484,3.178,485,3.066,486,3.379,487,6.649,488,2.374,489,3.066,490,2.649,491,2.649,492,2.649,493,1.649,494,3.066,495,3.066,496,3.066]],["title/classes/AppPage.html",[143,0.089,497,2.943]],["body/classes/AppPage.html",[3,0.226,4,0.198,5,0.143,8,0.408,20,0.511,46,0.33,49,0.017,57,0.474,123,0.65,142,0.226,143,0.14,152,1.25,245,0.012,246,0.014,247,0.012,259,5.148,299,0.726,403,3.896,497,5.359,498,2.251,499,5.148,500,7.531,501,7.531,502,5.958,503,5.958,504,5.148,505,5.958,506,5.958,507,5.958]],["title/modules/AppRoutingModule.html",[368,2.316,387,2.485]],["body/modules/AppRoutingModule.html",[3,0.231,4,0.202,5,0.145,49,0.016,123,0.763,124,0.701,142,0.231,143,0.143,156,1.199,245,0.013,246,0.015,247,0.013,370,3.701,375,4.296,387,4.577,395,4.703,412,5.419,508,6.074,509,6.074,510,7,511,5.709,512,5.248,513,6.074]],["title/classes/AppVersion.html",[143,0.089,514,2.689]],["body/classes/AppVersion.html",[3,0.229,4,0.2,5,0.145,8,0.413,9,0.993,27,1.14,46,0.288,49,0.016,51,0.319,111,1.041,112,0.903,142,0.229,143,0.142,245,0.013,246,0.015,247,0.013,277,1.09,498,2.281,514,4.934,515,5.216,516,5.695,517,6.355,518,7.356,519,6.975,520,6.038]],["title/components/ApplicationSettingsComponent.html",[248,0.126,304,0.751]],["body/components/ApplicationSettingsComponent.html",[3,0.142,4,0.124,5,0.089,8,0.256,9,0.838,20,0.38,27,1.111,42,0.805,46,0.352,48,1.145,49,0.017,50,0.838,51,0.311,52,1.145,56,0.771,57,0.47,58,1.313,61,0.805,111,0.645,112,0.77,123,0.561,124,0.431,142,0.142,143,0.088,144,1.549,147,2.967,152,0.929,156,1.313,160,2.768,196,2.135,245,0.008,246,0.011,247,0.008,248,0.195,249,0.738,250,1.109,251,0.878,252,0.916,253,0.841,254,1.52,256,0.675,257,1.869,258,1.711,260,1.261,262,1.261,270,5.451,271,3.622,277,0.929,281,2.893,297,0.771,298,1.324,299,0.717,300,0.878,301,1.427,302,0.878,303,0.878,304,1.252,305,1.603,306,0.878,307,0.738,308,1.109,309,0.878,310,0.738,311,1.062,312,1.382,313,0.738,314,1.158,315,0.878,316,0.738,317,1.382,318,0.738,319,0.841,320,1.209,321,0.771,322,1.109,323,0.738,324,0.738,325,0.878,326,1.209,327,0.738,328,1.559,329,0.878,330,0.771,331,0.878,332,0.771,333,0.878,334,0.738,335,0.878,336,0.738,337,1.654,338,0.738,339,0.878,340,0.738,341,0.805,342,0.738,343,0.805,344,0.738,345,0.456,346,0.738,347,0.805,348,0.738,349,0.738,350,0.805,351,0.738,352,0.771,353,0.738,354,0.878,355,0.738,356,0.738,357,0.878,358,0.738,359,0.878,360,0.738,361,0.805,362,0.805,363,0.878,364,0.738,365,0.805,366,0.878,367,0.878,479,5.76,521,6.427,522,3.228,523,0.77,524,1.71,525,5.885,526,5.145,527,5.084,528,5.885,529,5.885,530,6.34,531,6.34,532,5.885,533,1.923,534,4.445,535,5.145,536,3.737,537,5.145,538,3.737,539,3.737,540,5.145,541,5.084,542,3.737,543,3.737,544,4.445,545,6.083,546,3.737,547,5.145,548,3.737,549,3.737,550,3.737,551,3.228,552,3.737,553,3.737,554,3.737,555,3.737,556,1.626,557,5.321,558,1.291,559,4.445,560,5.145,561,3.228,562,3.737,563,3.228,564,5.477,565,3.737,566,3.984,567,3.737,568,3.228,569,3.737,570,5.145,571,3.737,572,3.737,573,2.643,574,3.737,575,3.737,576,1.016,577,3.737,578,3.228,579,3.737,580,3.737,581,3.737,582,3.737,583,3.737,584,5.145,585,3.737,586,3.737,587,3.737,588,5.145]],["title/components/BlockHeaderComponent.html",[248,0.126,307,0.751]],["body/components/BlockHeaderComponent.html",[3,0.174,4,0.153,5,0.11,8,0.315,9,0.654,46,0.282,49,0.017,50,0.72,51,0.312,56,0.948,61,0.99,80,2.132,111,1.018,112,0.883,116,1.387,123,0.501,124,0.53,142,0.174,143,0.108,245,0.01,246,0.012,247,0.01,248,0.217,249,0.907,250,1.273,251,1.387,253,1.034,254,1.578,256,0.83,257,1.893,258,1.734,264,4.96,277,1.066,297,0.948,298,1.329,299,0.72,300,1.08,301,1.55,302,1.08,303,1.08,304,0.907,305,0.99,306,1.08,307,1.36,308,1.484,309,1.08,310,0.907,311,1.218,312,1.533,313,0.907,314,1.329,315,1.08,316,0.907,317,1.533,318,0.907,319,1.034,320,1.387,321,0.948,322,1.273,323,0.907,324,0.907,325,1.08,326,1.387,327,0.907,328,1.605,329,1.08,330,0.948,331,1.08,332,0.948,333,1.08,334,0.907,335,1.08,336,0.907,337,1.742,338,0.907,339,1.08,340,0.907,341,0.99,342,0.907,343,0.99,344,0.907,345,0.56,346,0.907,347,0.99,348,0.907,349,0.907,350,0.99,351,0.907,352,0.948,353,0.907,354,1.08,355,0.907,356,0.907,357,1.08,358,0.907,359,1.08,360,0.907,361,0.99,362,0.99,363,1.08,364,0.907,365,0.99,366,1.08,367,1.08,470,4.572,589,5.636,590,3.97,591,7.289,592,6.297,593,6.524,594,2.336,595,4.595,596,4.595,597,2.254]],["title/classes/BreakpointMonitorTemplate.html",[143,0.089,598,1.654]],["body/classes/BreakpointMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.756,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,608,2.671,609,2.671,610,2.671,611,2.671,612,2.671,613,2.671,614,2.671,615,2.671,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.162,706,1.162,707,1.162,708,1.162,709,1.286,710,1.162,711,1.162]],["title/pipes/ColorDeclarationsPipe.html",[381,2.485,712,1.576]],["body/pipes/ColorDeclarationsPipe.html",[3,0.204,4,0.178,5,0.129,9,0.765,20,0.397,46,0.311,48,0.969,49,0.017,50,0.854,51,0.343,52,0.969,57,0.368,111,0.926,112,1.089,123,0.586,124,0.62,142,0.204,143,0.126,152,0.969,156,1.06,245,0.011,246,0.014,247,0.011,256,0.969,277,1.346,301,1.465,381,4.255,493,2.888,523,0.803,684,2.832,712,2.698,713,6.049,714,4.639,715,6.508,716,3.272,717,4.603,718,5.37,719,5.622,720,2.586,721,5.039,722,5.622,723,5.039,724,4.255,725,6.508,726,6.508,727,6.508,728,5.059,729,6.508,730,6.508,731,5.622,732,7.836,733,5.37,734,4.255,735,4.578,736,4.953,737,5.37,738,5.37,739,5.37,740,5.37,741,4.639,742,5.37]],["title/classes/Constants.html",[143,0.089,743,2.689]],["body/classes/Constants.html",[3,0.233,4,0.204,5,0.147,8,0.421,9,1.004,46,0.294,49,0.016,142,0.233,143,0.144,174,1.507,245,0.013,246,0.015,247,0.013,498,2.323,743,4.986,744,5.312,745,7.41,746,6.149]],["title/classes/CountTransitionOccurrencesMonitorTemplate.html",[143,0.089,708,1.654]],["body/classes/CountTransitionOccurrencesMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.162,706,1.162,707,1.162,708,1.756,709,1.286,710,1.162,711,1.162,747,2.671,748,2.671,749,2.671,750,2.671,751,2.671,752,2.671,753,2.671,754,2.671]],["title/classes/CpnServerUrl.html",[136,2.485,143,0.089]],["body/classes/CpnServerUrl.html",[3,0.217,4,0.19,5,0.137,8,0.392,9,0.963,20,0.5,46,0.344,48,1.034,49,0.017,50,0.698,51,0.302,52,1.034,57,0.463,58,1.131,111,0.988,112,0.857,136,4.422,137,5.259,138,4.531,139,5.44,142,0.217,143,0.135,152,1.034,245,0.012,246,0.014,247,0.012,277,1.221,498,2.163,516,6.123,755,4.947,756,6.763,757,5.727,758,5.727,759,6.763,760,5.727,761,5.727,762,6.763]],["title/classes/DataCollectionMonitorTemplate.html",[143,0.089,683,1.654]],["body/classes/DataCollectionMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.756,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.162,706,1.162,707,1.162,708,1.162,709,1.286,710,1.162,711,1.162,763,2.671,764,2.671,765,2.671,766,2.671,767,2.671,768,2.671,769,2.671,770,2.671]],["title/components/EditorPanelComponent.html",[248,0.126,310,0.751]],["body/components/EditorPanelComponent.html",[3,0.118,4,0.103,5,0.074,8,0.212,9,0.757,20,0.333,42,0.669,45,2.336,46,0.355,48,1.235,49,0.017,50,0.936,51,0.327,52,1.235,56,0.64,57,0.485,58,1.398,61,0.669,66,3.526,111,0.778,112,0.675,123,0.705,124,0.358,130,1.228,131,1.42,142,0.118,143,0.073,144,1.287,145,1.228,147,2.801,156,1.417,174,0.761,187,2.03,245,0.006,246,0.009,247,0.006,248,0.177,249,0.613,250,0.972,251,0.729,252,0.761,253,0.699,254,1.461,256,0.56,257,1.844,258,1.686,260,1.106,262,1.106,264,2.95,297,0.64,298,1.015,299,0.55,300,0.729,301,1.456,302,0.729,303,0.729,304,0.613,305,0.669,306,0.729,307,0.613,308,0.972,309,0.729,310,1.152,311,1.48,312,1.249,313,0.613,314,1.015,315,0.729,316,0.613,317,1.249,318,0.613,319,1.196,320,1.06,321,0.931,322,1.146,323,0.613,324,0.613,325,0.729,326,1.06,327,0.613,328,1.534,329,0.729,330,0.64,331,0.729,332,0.64,333,0.729,334,0.613,335,0.729,336,0.613,337,1.568,338,0.613,339,0.729,340,0.613,341,0.669,342,0.613,343,0.669,344,0.613,345,0.378,346,0.613,347,0.669,348,0.613,349,0.613,350,0.972,351,0.613,352,0.64,353,0.613,354,0.729,355,0.613,356,0.613,357,0.729,358,1.152,359,0.729,360,0.613,361,0.669,362,0.669,363,0.729,364,0.613,365,0.669,366,0.729,367,0.729,389,2.522,447,2.195,449,2.403,454,5.792,456,2.682,463,1.42,464,1.578,523,0.675,524,1.545,533,1.77,576,1.277,635,1.121,771,6.463,772,2.403,773,3.476,774,4.592,775,4.592,776,3.898,777,5.835,778,5.316,779,5.835,780,5.316,781,4.512,782,3.898,783,4.512,784,3.898,785,4.512,786,3.493,787,4.127,788,5.835,789,4.512,790,1.578,791,4.512,792,4.512,793,3.104,794,4.512,795,4.512,796,3.104,797,4.512,798,3.104,799,4.512,800,3.104,801,4.512,802,3.104,803,3.898,804,3.104,805,3.104,806,3.104,807,2.682,808,4.512,809,5.835,810,3.104,811,4.592,812,5.316,813,4.512,814,4.512,815,3.104,816,3.104,817,4.512,818,3.104,819,3.104,820,3.104,821,3.104,822,2.682,823,2.403,824,2.403,825,1.891,826,2.403,827,2.682,828,2.682,829,3.104,830,4.512,831,3.104,832,3.104,833,3.104,834,3.104,835,3.104,836,3.104,837,3.104,838,3.104,839,3.104,840,3.104,841,3.104,842,3.104,843,3.104,844,2.195,845,5.316,846,3.104,847,3.104,848,3.104,849,5.316,850,4.512,851,3.104,852,3.104,853,5.316,854,3.104,855,4.512,856,3.104,857,3.104,858,5.792,859,5.316,860,2.682,861,4.512,862,3.815,863,5.835,864,3.104,865,5.355,866,3.104,867,6.199,868,3.104,869,3.104,870,3.104,871,4.512,872,3.104,873,4.512,874,3.104,875,3.104,876,3.104,877,2.682,878,3.104,879,3.104,880,4.512]],["title/injectables/EventService.html",[0,1.738,45,1.373]],["body/injectables/EventService.html",[0,2.934,2,3.197,3,0.199,4,0.174,5,0.126,8,0.359,9,0.914,20,0.474,27,1.423,42,1.494,45,2.317,46,0.345,48,1.158,49,0.017,50,0.782,51,0.339,52,1.158,57,0.439,58,1.267,66,3.477,72,1.661,111,0.905,112,0.785,116,1.507,123,0.7,124,0.605,142,0.199,143,0.123,145,2.856,147,2.93,156,1.036,174,1.286,245,0.011,246,0.013,247,0.011,862,3.43,881,4.532,882,7.221,883,6.416,884,6.416,885,6.416,886,7.221,887,5.246,888,6.416,889,5.591,890,7.221,891,5.246,892,5.591,893,5.246,894,5.246,895,5.246,896,5.246,897,5.246,898,5.246,899,5.246,900,6.416,901,5.246,902,6.416,903,6.416]],["title/classes/ListLengthDataCollectionMonitorTemplate.html",[143,0.089,707,1.654]],["body/classes/ListLengthDataCollectionMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.162,706,1.162,707,1.756,708,1.162,709,1.286,710,1.162,711,1.162,904,2.671,905,2.671,906,2.671,907,2.671,908,2.671,909,2.671,910,2.671,911,2.671]],["title/components/MainFrameComponent.html",[248,0.126,313,0.751]],["body/components/MainFrameComponent.html",[3,0.136,4,0.119,5,0.086,8,0.245,9,0.819,20,0.369,27,1.086,42,0.771,45,2.449,46,0.358,48,0.902,49,0.017,50,0.759,51,0.389,52,0.902,56,0.739,57,0.394,58,1.136,61,0.771,111,1.224,112,1.062,123,0.679,124,0.413,130,1.416,131,1.637,142,0.136,143,0.084,144,1.484,147,1.975,187,2.34,245,0.007,246,0.01,247,0.007,248,0.191,249,0.707,250,1.076,251,0.841,252,0.878,253,0.806,254,1.507,256,0.646,257,1.864,258,1.705,260,1.224,262,1.224,277,0.646,297,0.739,298,1.124,299,0.609,300,0.841,301,1.401,302,0.841,303,0.841,304,0.707,305,0.771,306,0.841,307,0.707,308,1.076,309,0.841,310,0.707,311,1.03,312,1.351,313,1.229,314,1.623,315,0.841,316,0.707,317,1.351,318,0.707,319,0.806,320,1.173,321,0.739,322,1.076,323,0.707,324,0.707,325,0.841,326,1.173,327,0.707,328,1.582,329,0.841,330,0.739,331,0.841,332,0.739,333,0.841,334,0.707,335,0.841,336,0.707,337,1.635,338,0.707,339,0.841,340,0.707,341,0.771,342,0.707,343,0.771,344,0.707,345,0.436,346,0.707,347,0.771,348,0.707,349,0.707,350,0.771,351,0.707,352,0.739,353,0.707,354,0.841,355,0.707,356,0.707,357,0.841,358,0.707,359,0.841,360,0.707,361,0.771,362,0.771,363,0.841,364,0.707,365,0.771,366,0.841,367,0.841,389,2.759,408,3.265,416,5.25,427,3.043,438,5.848,463,1.637,464,1.819,523,0.747,524,1.672,533,1.888,558,2.404,576,1.136,640,1.975,724,2.34,773,3.761,786,4.453,787,4.402,790,1.819,803,4.314,824,2.771,825,2.181,826,2.771,827,3.092,912,5.848,913,3.092,914,4.994,915,5.752,916,4.994,917,5.752,918,5.752,919,5.752,920,5.752,921,5.752,922,5.752,923,5.752,924,5.752,925,4.994,926,3.579,927,3.579,928,3.579,929,4.994,930,3.579,931,4.969,932,4.994,933,3.579,934,6.78,935,3.579,936,3.579,937,3.579,938,4.994,939,3.579,940,3.579,941,4.969,942,3.579,943,3.579,944,3.579,945,3.579,946,3.579,947,3.579,948,3.579,949,3.579,950,4.994,951,3.092,952,4.994,953,3.521,954,5.752,955,5.752,956,5.752,957,3.579,958,3.579,959,3.579,960,3.092,961,2.771,962,1.724,963,2.045,964,1.724,965,2.532,966,3.579,967,2.181,968,2.181,969,2.181,970,2.532,971,3.579,972,2.34,973,3.265,974,3.867,975,4.994,976,3.092,977,3.579,978,2.771,979,2.045,980,1.637,981,3.579]],["title/components/MainToolbarComponent.html",[248,0.126,316,0.751]],["body/components/MainToolbarComponent.html",[1,3.166,3,0.133,4,0.117,5,0.084,8,0.241,9,0.811,20,0.364,27,1.273,42,1.063,45,2.5,46,0.36,48,0.634,49,0.017,50,0.694,51,0.301,52,0.634,56,0.725,57,0.491,58,1.418,61,1.227,62,3.817,72,1.561,95,2.721,108,1.269,111,0.606,112,0.526,116,1.158,123,0.771,124,0.406,130,1.39,131,1.607,142,0.133,143,0.083,145,2.253,163,4.028,168,4.78,169,3.817,176,0.938,245,0.007,246,0.01,247,0.007,248,0.189,249,0.694,250,1.063,251,0.825,252,0.861,253,0.791,254,1.501,256,0.634,257,1.861,258,1.703,260,1.209,262,1.209,297,0.725,298,1.109,299,0.601,300,0.825,301,1.389,302,0.825,303,0.825,304,0.694,305,0.757,306,0.825,307,0.694,308,1.063,309,0.825,310,0.694,311,1.017,312,1.338,313,0.694,314,1.616,315,0.825,316,1.219,317,1.338,318,0.694,319,0.791,320,1.158,321,0.725,322,1.063,323,0.694,324,0.694,325,1.527,326,1.158,327,0.694,328,1.585,329,0.825,330,0.725,331,0.825,332,0.725,333,0.825,334,0.694,335,0.825,336,0.694,337,1.626,338,0.694,339,0.825,340,0.694,341,0.757,342,0.694,343,0.757,344,0.694,345,0.428,346,0.694,347,0.757,348,0.694,349,0.694,350,0.757,351,0.694,352,0.725,353,0.694,354,0.825,355,0.694,356,0.694,357,0.825,358,0.694,359,0.825,360,0.694,361,0.757,362,0.757,363,0.825,364,0.694,365,0.757,366,0.825,367,0.825,389,2.749,390,3.85,391,4.218,440,2.141,441,1.89,442,5.866,462,2.721,463,1.607,464,1.786,478,3.036,514,2.485,523,0.738,524,1.655,533,1.873,576,1.331,703,2.255,912,5.866,962,1.692,963,2.007,982,2.485,983,3.817,984,4.409,985,3.817,986,5.695,987,5.98,988,6.174,989,6.174,990,6.174,991,6.174,992,6.174,993,6.174,994,6.174,995,3.036,996,4.259,997,3.514,998,3.514,999,3.514,1000,3.514,1001,3.514,1002,3.514,1003,3.514,1004,3.514,1005,3.514,1006,3.036,1007,3.036,1008,4.93,1009,3.514,1010,3.514,1011,4.93,1012,3.514,1013,5.695,1014,3.036,1015,3.036,1016,3.514,1017,3.514,1018,3.514,1019,4.93,1020,3.036,1021,3.036,1022,3.036,1023,3.514,1024,3.036,1025,3.036,1026,3.514,1027,3.514,1028,3.514,1029,6.174,1030,4.93,1031,5.695,1032,4.93,1033,4.93,1034,4.93,1035,4.259,1036,4.93,1037,4.259,1038,4.259,1039,3.036,1040,3.514,1041,4.93]],["title/classes/MarkingSizeMonitorTemplate.html",[143,0.089,706,1.654]],["body/classes/MarkingSizeMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.162,706,1.756,707,1.162,708,1.162,709,1.286,710,1.162,711,1.162,1042,2.671,1043,2.671,1044,2.671,1045,2.671,1046,2.671,1047,2.671,1048,2.671,1049,2.671]],["title/classes/Message.html",[130,1.504,143,0.089]],["body/classes/Message.html",[3,0.126,4,0.11,5,0.08,8,0.227,9,0.675,46,0.381,49,0.017,51,0.421,66,2.66,108,1.995,111,1.373,112,1.191,130,1.874,142,0.126,143,0.078,149,4.771,245,0.007,246,0.01,247,0.007,277,1.44,498,1.255,516,6.315,720,2.282,951,4.771,1050,2.87,1051,5.523,1052,5.523,1053,5.523,1054,5.523,1055,5.523,1056,5.523,1057,5.523,1058,5.523,1059,5.523,1060,5.523,1061,5.523,1062,5.523,1063,5.523,1064,5.523,1065,5.523,1066,5.523,1067,5.523,1068,5.523,1069,5.523,1070,5.523,1071,5.523,1072,5.523,1073,5.523,1074,5.523,1075,5.523,1076,5.523,1077,5.523,1078,5.523,1079,5.523,1080,5.523,1081,5.523,1082,5.523,1083,5.523,1084,5.523,1085,5.523,1086,5.523,1087,5.523,1088,5.523,1089,3.323,1090,4.738,1091,3.323,1092,3.323,1093,4.738,1094,3.323,1095,4.738,1096,3.323,1097,4.738,1098,3.323,1099,4.738,1100,3.323,1101,4.738,1102,3.323,1103,4.738,1104,3.323,1105,4.738,1106,3.323,1107,4.738,1108,3.323,1109,4.738,1110,3.323,1111,4.738,1112,3.323,1113,4.738,1114,3.323,1115,4.738,1116,3.323,1117,4.738,1118,3.323,1119,4.738,1120,3.323,1121,4.738,1122,3.323,1123,4.738,1124,3.323,1125,4.738,1126,3.323,1127,4.738,1128,3.323,1129,4.738,1130,3.323,1131,4.738,1132,3.323,1133,4.738,1134,3.323,1135,4.738,1136,3.323,1137,4.738,1138,3.323,1139,4.738,1140,3.323,1141,4.738,1142,3.323,1143,4.738,1144,3.323,1145,4.738,1146,3.323,1147,4.738,1148,3.323,1149,4.738,1150,3.323,1151,4.738,1152,3.323,1153,4.738,1154,3.323,1155,4.738,1156,3.323,1157,4.738,1158,3.323,1159,4.738,1160,3.323,1161,4.738,1162,3.323,1163,4.738,1164,3.323,1165,4.738,1166,3.323,1167,4.738,1168,3.323,1169,4.738,1170,3.323]],["title/components/MlEditorComponent.html",[248,0.126,318,0.751]],["body/components/MlEditorComponent.html",[3,0.143,4,0.125,5,0.09,8,0.258,9,0.843,20,0.383,42,1.117,45,2.49,46,0.356,48,1.15,49,0.017,50,0.84,51,0.336,52,1.15,56,0.779,57,0.472,58,1.361,61,0.814,72,1.196,111,0.894,112,0.775,123,0.695,124,0.436,130,1.494,131,1.727,142,0.143,143,0.089,145,2.05,147,2.92,186,2.469,245,0.008,246,0.011,247,0.008,248,0.196,249,0.746,250,1.117,251,0.887,252,0.926,253,0.85,254,1.523,256,0.682,257,1.87,258,1.712,260,1.271,262,1.271,277,0.682,297,0.779,298,1.166,299,0.632,300,0.887,301,1.433,302,0.887,303,0.887,304,0.746,305,0.814,306,0.887,307,0.746,308,1.117,309,0.887,310,0.746,311,1.314,312,1.39,313,0.746,314,1.166,315,0.887,316,0.746,317,1.39,318,1.258,319,1.618,320,1.218,321,0.779,322,1.117,323,0.746,324,0.746,325,0.887,326,1.218,327,0.746,328,1.586,329,0.887,330,0.779,331,0.887,332,0.779,333,0.887,334,0.746,335,0.887,336,0.746,337,1.659,338,0.746,339,0.887,340,0.746,341,0.814,342,0.746,343,0.814,344,0.746,345,0.46,346,0.746,347,0.814,348,0.746,349,0.746,350,0.814,351,0.746,352,0.779,353,0.746,354,0.887,355,0.746,356,0.746,357,0.887,358,0.746,359,0.887,360,0.746,361,0.814,362,0.814,363,0.887,364,0.746,365,0.814,366,0.887,367,0.887,389,2.668,461,5.818,463,1.727,464,1.919,523,0.775,524,1.72,533,1.932,534,4.477,544,4.477,556,1.643,557,4.013,566,2.924,578,5.112,594,2.05,597,1.79,621,1.566,720,2.85,773,3.869,787,4.504,790,1.919,828,3.263,968,2.301,969,2.301,1171,6.492,1172,3.263,1173,5.917,1174,5.183,1175,3.881,1176,5.112,1177,5.917,1178,5.502,1179,5.183,1180,5.917,1181,5.183,1182,3.777,1183,3.777,1184,3.777,1185,3.777,1186,5.183,1187,3.777,1188,3.777,1189,5.183,1190,3.777,1191,3.777,1192,3.777,1193,3.777,1194,4.477,1195,5.183,1196,5.167,1197,5.183,1198,3.777,1199,3.777,1200,3.777,1201,3.777,1202,5.502,1203,3.777,1204,3.777,1205,3.263,1206,3.263,1207,3.263,1208,3.263,1209,2.924,1210,2.157,1211,2.157,1212,2.469,1213,2.469,1214,3.263,1215,3.158,1216,3.777,1217,2.924,1218,4.013,1219,2.924]],["title/components/ModelEditorToolbarComponent.html",[248,0.126,323,0.751]],["body/components/ModelEditorToolbarComponent.html",[3,0.165,4,0.145,5,0.104,8,0.298,9,0.62,20,0.421,42,1.37,46,0.343,49,0.017,50,0.695,51,0.23,56,0.899,57,0.462,58,1.332,61,0.939,123,0.622,124,0.503,142,0.165,143,0.102,245,0.009,246,0.012,247,0.009,248,0.211,249,0.86,250,1.229,251,1.023,252,1.068,253,0.98,254,1.564,256,0.786,257,1.887,258,1.728,260,1.398,262,1.398,297,0.899,298,1.283,299,0.695,300,1.023,301,1.518,302,1.023,303,1.023,304,0.86,305,0.939,306,1.023,307,0.86,308,1.229,309,1.023,310,0.86,311,1.64,312,1.494,313,0.86,314,1.283,315,1.023,316,0.86,317,1.494,318,0.86,319,0.98,320,1.34,321,1.392,322,1.633,323,1.332,324,0.86,325,1.023,326,1.34,327,0.86,328,1.594,329,1.023,330,0.899,331,1.023,332,0.899,333,1.023,334,0.86,335,1.023,336,0.86,337,1.72,338,0.86,339,1.023,340,0.86,341,0.939,342,0.86,343,0.939,344,0.86,345,0.531,346,0.86,347,0.939,348,0.86,349,0.86,350,0.939,351,0.86,352,0.899,353,0.86,354,1.023,355,0.86,356,0.86,357,1.023,358,0.86,359,1.023,360,0.86,361,0.939,362,0.939,363,1.023,364,0.86,365,0.939,366,1.023,367,1.023,447,5.178,448,5.668,449,3.372,523,0.853,524,1.848,533,2.046,594,2.256,597,1.97,982,3.081,983,4.415,984,4.923,985,4.415,996,3.763,1006,3.763,1220,6.324,1221,6.746,1222,6.746,1223,6.746,1224,6.359,1225,5.703,1226,4.355,1227,4.355,1228,5.703,1229,5.703,1230,5.703]],["title/pipes/MonitorNamePipe.html",[382,2.485,712,1.576]],["body/pipes/MonitorNamePipe.html",[3,0.224,4,0.196,5,0.141,20,0.436,46,0.281,48,1.064,49,0.017,50,0.888,51,0.311,52,1.064,57,0.404,123,0.643,124,0.68,142,0.224,143,0.139,152,1.064,245,0.012,246,0.014,247,0.012,256,1.064,277,1.242,345,0.719,382,4.498,493,3.171,523,0.882,712,2.852,716,3.592,734,4.498,1231,5.943,1232,4.564,1233,6.879,1234,6.879,1235,5.093,1236,5.895,1237,5.895]],["title/interfaces/MonitorTemplate.html",[600,1.654,682,1.576]],["body/interfaces/MonitorTemplate.html",[3,0.102,4,0.09,5,0.117,8,0.185,20,0.3,27,1.516,46,0.327,49,0.017,51,0.383,57,0.46,63,2.41,73,1.769,80,2.727,108,1.968,116,1.578,142,0.271,143,0.158,152,1.452,156,0.966,174,1.678,176,1.793,193,2.371,225,1.174,245,0.006,246,0.008,247,0.006,277,1.438,283,2.548,285,1.536,299,0.713,345,0.329,523,1.005,558,2.402,576,0.803,598,1.174,599,1.118,600,3.026,601,3.432,602,3.432,603,3.432,604,3.432,605,3.432,606,3.432,607,3.432,616,1.174,617,1.86,618,2.492,619,1.769,620,1.769,621,1.686,622,1.86,623,1.86,624,1.86,625,1.86,626,1.86,627,1.86,628,2.259,629,2.811,630,1.86,631,1.769,632,1.234,633,1.86,634,1.86,635,1.469,636,1.86,637,1.86,638,1.769,639,1.118,640,1.608,641,1.686,642,1.686,643,1.769,644,1.86,645,1.769,646,1.234,647,1.86,648,1.174,649,1.234,650,1.86,651,1.234,652,2.238,653,1.234,654,1.769,655,1.234,656,1.067,657,2.156,658,1.299,659,1.299,660,2.357,661,2.357,662,2.357,663,2.357,664,1.299,665,1.299,666,1.299,667,1.234,668,1.958,669,1.299,670,1.299,671,2.357,672,2.357,673,2.357,674,2.357,675,1.299,676,1.299,677,1.299,678,1.299,679,1.299,680,1.299,681,1.299,682,1.118,683,1.174,684,3.309,685,2.624,686,3.162,687,3.162,688,3.394,689,3.162,690,3.162,691,2.624,692,3.003,693,2.624,694,3.162,695,2.624,696,3.394,697,2.371,698,2.624,699,2.624,700,2.624,701,3.003,702,2.268,703,2.492,704,1.174,705,1.174,706,1.174,707,1.174,708,1.174,709,1.299,710,1.174,711,1.174,1238,2.697,1239,2.697,1240,2.697,1241,2.697,1242,2.697,1243,2.697,1244,2.697,1245,2.697,1246,2.697]],["title/components/OpenprojectButtonComponent.html",[248,0.126,324,0.751]],["body/components/OpenprojectButtonComponent.html",[3,0.169,4,0.148,5,0.163,8,0.304,9,0.633,20,0.427,42,0.958,46,0.307,48,1.043,49,0.017,50,0.829,51,0.235,52,1.043,56,0.917,57,0.396,58,1.141,61,0.958,123,0.63,124,0.513,142,0.169,143,0.104,144,1.843,147,2.286,152,0.802,156,1.141,245,0.009,246,0.012,247,0.009,248,0.213,249,0.878,250,1.245,251,1.044,252,1.09,253,1,254,1.569,256,0.802,257,1.889,258,1.73,260,1.417,262,1.417,297,0.917,298,1.3,299,0.704,300,1.044,301,1.53,302,1.044,303,1.044,304,0.878,305,0.958,306,1.044,307,0.878,308,1.245,309,1.044,310,0.878,311,1.192,312,1.508,313,0.878,314,1.3,315,1.044,316,0.878,317,1.508,318,0.878,319,1,320,1.357,321,0.917,322,1.245,323,0.878,324,1.343,325,1.752,326,1.357,327,0.878,328,1.612,329,1.044,330,0.917,331,1.044,332,0.917,333,1.044,334,0.878,335,1.044,336,0.878,337,1.728,338,0.878,339,1.044,340,0.878,341,0.958,342,0.878,343,0.958,344,0.878,345,0.542,346,0.878,347,0.958,348,0.878,349,0.878,350,0.958,351,0.878,352,0.917,353,0.878,354,1.044,355,0.878,356,0.878,357,1.044,358,0.878,359,1.044,360,0.878,361,0.958,362,0.958,363,1.044,364,0.878,365,0.958,366,1.044,367,1.044,390,4.127,445,5.264,462,3.441,523,0.865,524,1.866,533,2.062,566,3.441,576,1.141,973,2.906,995,3.839,1247,5.874,1248,3.441,1249,4.992,1250,5.547,1251,4.992,1252,5.779,1253,4.444,1254,4.444,1255,5.779,1256,3.839,1257,5.779,1258,3.839,1259,4.444,1260,4.444,1261,4.444,1262,2.14,1263,4.444,1264,4.444,1265,4.992,1266,4.444,1267,2.539]],["title/pipes/OptionsNamePipePipe.html",[383,2.485,712,1.576]],["body/pipes/OptionsNamePipePipe.html",[3,0.164,4,0.144,5,0.104,20,0.32,46,0.207,48,0.782,49,0.017,50,0.693,51,0.229,52,0.782,57,0.297,112,1.11,123,0.473,124,0.5,142,0.164,143,0.102,152,0.782,245,0.009,246,0.012,247,0.009,256,0.782,277,1.262,299,0.528,383,3.716,493,2.33,523,0.648,558,2.191,631,1.885,635,2.921,656,1.714,657,3.199,697,2.76,712,1.796,716,2.64,717,4.02,734,3.716,735,5.297,1232,3.355,1235,3.743,1268,4.91,1269,4.91,1270,3.743,1271,4.333,1272,4.333,1273,4.333,1274,4.333,1275,4.333,1276,4.333,1277,3.743,1278,5.683,1279,4.333,1280,4.333,1281,4.333,1282,3.355,1283,3.743,1284,4.333,1285,7.174,1286,4.333,1287,6.342,1288,6.342,1289,4.333,1290,6.342,1291,4.333,1292,5.816,1293,7.174,1294,4.333,1295,6.733,1296,4.333,1297,6.342,1298,4.333,1299,6.342,1300,4.333,1301,7.572,1302,7.174,1303,4.333,1304,7.174,1305,4.333,1306,6.342,1307,4.333,1308,4.333,1309,6.733,1310,4.333,1311,4.333,1312,4.333,1313,4.333,1314,3.743,1315,3.743,1316,4.333,1317,4.333,1318,4.333,1319,4.333,1320,5.683,1321,5.683,1322,4.333,1323,4.333,1324,4.333,1325,4.333,1326,4.333,1327,4.333,1328,4.333,1329,4.333,1330,4.333,1331,4.333,1332,4.333,1333,4.333,1334,4.333]],["title/classes/PlaceContentBreakPointMonitorTemplate.html",[143,0.089,710,1.654]],["body/classes/PlaceContentBreakPointMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.162,706,1.162,707,1.162,708,1.162,709,1.286,710,1.756,711,1.162,1335,2.671,1336,2.671,1337,2.671,1338,2.671,1339,2.671,1340,2.671,1341,2.671,1342,2.671]],["title/components/ProjectConsoleComponent.html",[248,0.126,327,0.751]],["body/components/ProjectConsoleComponent.html",[1,2.84,3,0.11,4,0.096,5,0.069,8,0.198,9,0.727,10,3.701,20,0.317,42,0.623,45,2.278,46,0.351,48,1.178,49,0.017,50,0.835,51,0.298,52,1.178,56,0.597,57,0.447,58,1.245,61,0.923,66,1.393,72,1.997,90,3.701,111,1.039,112,0.901,116,1.325,123,0.657,124,0.334,130,1.144,131,1.323,138,2.61,142,0.11,143,0.12,144,1.199,145,1.144,147,2.859,156,1.375,160,1.556,164,4.368,188,5.203,196,3.44,245,0.006,246,0.009,247,0.006,248,0.169,249,0.571,250,0.923,251,0.679,252,0.709,253,0.651,254,1.437,256,0.522,257,1.834,258,1.676,260,1.05,262,1.05,277,0.522,297,0.597,298,0.964,299,0.522,300,0.679,301,1.27,302,0.679,303,0.679,304,0.571,305,0.623,306,0.679,307,0.571,308,0.923,309,0.679,310,0.571,311,0.884,312,1.199,313,0.571,314,0.964,315,0.679,316,0.571,317,1.199,318,0.571,319,0.651,320,1.006,321,0.597,322,1.216,323,0.571,324,0.571,325,0.679,326,1.006,327,1.114,328,1.559,329,0.679,330,0.597,331,0.679,332,0.597,333,0.679,334,0.571,335,0.679,336,0.571,337,1.533,338,0.571,339,0.679,340,0.571,341,0.623,342,0.571,343,0.623,344,0.571,345,0.353,346,0.571,347,0.623,348,0.571,349,0.571,350,0.623,351,0.571,352,0.597,353,0.571,354,0.679,355,0.571,356,0.571,357,0.679,358,0.571,359,0.679,360,0.571,361,1.501,362,0.623,363,0.679,364,0.571,365,0.623,366,0.679,367,0.679,374,3.03,411,2.046,440,1.762,441,1.556,452,5.729,464,1.47,523,0.641,524,1.483,533,1.711,558,0.999,576,0.571,724,1.891,728,1.891,773,1.891,790,1.47,825,1.762,826,2.239,862,2.801,953,2.304,964,1.393,980,2.333,1015,2.499,1210,1.652,1211,1.652,1212,1.891,1343,3.068,1344,2.499,1345,5.102,1346,3.701,1347,5.102,1348,4.284,1349,5.102,1350,5.102,1351,4.408,1352,5.102,1353,5.102,1354,5.102,1355,4.284,1356,4.284,1357,4.284,1358,4.284,1359,4.284,1360,4.284,1361,4.284,1362,4.284,1363,2.892,1364,4.284,1365,2.892,1366,4.284,1367,5.641,1368,2.892,1369,4.284,1370,2.892,1371,4.284,1372,2.892,1373,2.892,1374,4.284,1375,2.892,1376,6.023,1377,2.892,1378,2.892,1379,2.892,1380,2.892,1381,2.892,1382,2.892,1383,5.102,1384,2.892,1385,5.102,1386,2.892,1387,2.892,1388,2.892,1389,2.499,1390,2.892,1391,2.892,1392,2.892,1393,4.284,1394,2.892,1395,5.102,1396,4.284,1397,2.892,1398,2.892,1399,5.102,1400,2.892,1401,2.892,1402,2.892,1403,2.892,1404,2.892,1405,2.892,1406,2.892,1407,2.892,1408,2.892,1409,2.892,1410,2.892,1411,2.892,1412,5.102,1413,5.641,1414,4.284,1415,5.102,1416,5.641,1417,2.892,1418,2.892,1419,6.023,1420,4.284,1421,2.892,1422,2.892,1423,2.892,1424,4.284,1425,5.641,1426,2.892,1427,2.892,1428,2.892,1429,2.892,1430,2.892,1431,2.892,1432,2.892,1433,2.892,1434,2.892,1435,2.892,1436,2.892,1437,6.703,1438,2.892,1439,2.892,1440,2.892,1441,2.892,1442,5.102,1443,5.102,1444,2.892,1445,2.892,1446,2.892,1447,2.892,1448,2.892,1449,4.284,1450,3.688,1451,2.892,1452,5.203,1453,2.892,1454,2.892,1455,2.892,1456,4.873,1457,5.641,1458,5.641,1459,5.641,1460,5.641,1461,5.641,1462,5.641,1463,2.892,1464,1.891,1465,2.892,1466,1.891]],["title/components/ProjectMonitorsComponent.html",[248,0.126,334,0.751]],["body/components/ProjectMonitorsComponent.html",[1,2.867,3,0.089,4,0.078,5,0.056,8,0.16,9,0.638,20,0.269,27,0.846,42,0.504,45,2.098,46,0.363,48,1.248,49,0.017,50,0.898,51,0.306,52,1.248,56,0.752,57,0.496,58,1.395,61,0.504,72,1.154,80,1.827,111,1.112,112,0.986,116,1.548,123,0.684,124,0.27,130,0.925,131,1.07,141,1.189,142,0.089,143,0.055,144,0.97,145,0.925,147,2.656,152,1.133,156,1.408,160,1.961,174,0.894,176,1.35,196,1.336,245,0.011,246,0.008,247,0.005,248,0.149,249,0.462,250,0.786,251,0.549,252,0.573,253,0.526,254,1.36,256,0.422,257,1.798,258,1.641,260,0.894,262,0.894,282,2.021,297,0.483,298,0.82,299,0.708,300,0.549,301,1.138,302,0.549,303,0.549,304,0.462,305,0.504,306,0.549,307,0.462,308,0.786,309,0.549,310,0.462,311,0.752,312,1.052,313,0.462,314,0.82,315,0.549,316,0.462,317,1.052,318,0.462,319,0.82,320,0.856,321,0.483,322,0.786,323,0.462,324,0.462,325,0.549,326,0.856,327,0.462,328,1.513,329,0.549,330,0.483,331,0.549,332,0.483,333,0.549,334,0.999,335,0.549,336,0.462,337,1.425,338,0.462,339,0.549,340,0.462,341,1.523,342,0.462,343,0.504,344,0.462,345,0.546,346,0.462,347,1.352,348,0.462,349,0.462,350,1.09,351,0.462,352,0.483,353,0.462,354,0.549,355,0.462,356,0.462,357,0.549,358,0.462,359,0.549,360,0.462,361,0.504,362,0.504,363,0.549,364,0.462,365,1.352,366,0.549,367,0.549,389,2.291,420,3.341,440,1.425,441,1.258,463,1.07,464,1.189,470,1.811,482,5.896,523,0.545,524,1.302,533,1.534,545,2.021,556,1.018,576,0.885,701,1.07,702,2.095,728,1.529,790,1.189,825,1.425,844,2.578,962,1.126,964,2.64,965,1.654,967,2.221,968,1.425,969,2.221,972,2.384,973,3.798,979,1.336,980,1.07,1175,3.696,1176,2.021,1194,4.37,1196,5.28,1205,2.021,1206,2.021,1207,3.87,1208,2.021,1209,1.811,1210,1.336,1211,1.336,1212,1.529,1213,1.529,1215,1.425,1343,3.157,1351,4.37,1464,1.529,1466,1.529,1467,2.021,1468,3.645,1469,4.479,1470,3.645,1471,4.479,1472,4.479,1473,3.87,1474,2.952,1475,4.479,1476,4.479,1477,4.479,1478,3.645,1479,3.645,1480,5.058,1481,5.058,1482,3.645,1483,3.645,1484,3.645,1485,5.058,1486,3.149,1487,3.645,1488,3.645,1489,4.37,1490,3.645,1491,3.645,1492,3.645,1493,5.058,1494,3.645,1495,3.645,1496,3.645,1497,2.339,1498,3.645,1499,2.339,1500,2.339,1501,2.339,1502,2.339,1503,3.645,1504,2.339,1505,3.645,1506,2.339,1507,3.645,1508,2.339,1509,2.339,1510,3.645,1511,2.339,1512,3.645,1513,2.339,1514,2.339,1515,3.645,1516,2.339,1517,2.339,1518,3.645,1519,2.339,1520,3.645,1521,2.339,1522,3.645,1523,2.339,1524,4.479,1525,2.339,1526,3.645,1527,2.339,1528,2.339,1529,2.339,1530,2.339,1531,2.339,1532,2.339,1533,2.339,1534,2.339,1535,2.339,1536,2.339,1537,1.811,1538,2.339,1539,2.339,1540,3.645,1541,3.645,1542,2.339,1543,2.339,1544,4.479,1545,1.811,1546,2.339,1547,2.339,1548,2.021,1549,3.645,1550,2.339,1551,2.339,1552,2.339,1553,5.483,1554,2.339,1555,2.339,1556,2.021,1557,2.339,1558,2.339,1559,3.645,1560,3.149,1561,2.021,1562,2.021,1563,3.87,1564,2.339,1565,2.339,1566,2.339,1567,2.339,1568,2.339,1569,4.479,1570,2.339,1571,3.645,1572,2.339,1573,3.645,1574,2.339,1575,2.021,1576,4.479,1577,3.645,1578,3.645,1579,3.645,1580,3.645,1581,3.149,1582,2.339,1583,4.479,1584,2.339,1585,3.87,1586,5.483,1587,3.645,1588,2.339,1589,2.339,1590,2.339,1591,2.339,1592,2.339,1593,3.645,1594,3.645,1595,3.645,1596,4.479,1597,5.483,1598,3.645,1599,2.339,1600,3.645,1601,2.339,1602,2.339,1603,3.645,1604,2.339,1605,3.645,1606,3.645,1607,2.339,1608,2.339,1609,2.339,1610,2.339,1611,2.339,1612,2.339,1613,3.645,1614,2.339,1615,5.058,1616,2.339,1617,2.339,1618,2.339,1619,2.339,1620,2.339,1621,3.645,1622,3.645,1623,4.737,1624,2.339,1625,2.339,1626,2.021,1627,2.339,1628,2.339,1629,2.339,1630,2.339,1631,2.339,1632,2.339,1633,2.339,1634,3.645,1635,2.339,1636,2.339,1637,3.645,1638,3.645,1639,3.149,1640,3.149,1641,3.149,1642,3.645,1643,3.149,1644,2.339,1645,2.384,1646,2.339,1647,1.811,1648,2.339,1649,2.339,1650,2.339,1651,2.339,1652,2.339,1653,1.811,1654,1.811,1655,2.339,1656,2.339,1657,1.811,1658,3.645,1659,3.168,1660,3.468,1661,2.339,1662,2.339]],["title/injectables/ProjectService.html",[0,1.738,390,2.171]],["body/injectables/ProjectService.html",[0,2.261,1,3.016,2,2.15,3,0.134,4,0.117,5,0.174,8,0.242,9,0.704,20,0.365,27,1.357,42,0.761,44,4.789,45,2.438,46,0.355,48,1.176,49,0.017,50,0.823,51,0.326,52,1.176,53,4.419,57,0.474,58,1.221,64,2.732,72,2.195,88,3.049,103,3.013,108,2.352,111,0.853,112,0.74,123,0.771,124,0.407,125,3.828,126,2.496,127,4.419,129,2.732,130,1.396,131,1.614,136,2.307,137,2.496,138,2.15,139,4.037,142,0.134,143,0.083,144,1.463,145,2.67,152,1.176,156,1.548,160,2.659,174,0.865,183,5.003,185,4.419,187,2.307,196,2.824,212,2.732,225,2.484,245,0.007,246,0.01,247,0.007,253,1.392,277,1.329,294,3.828,296,4.272,299,0.696,305,1.455,322,0.761,328,1.555,361,1.404,389,2.618,390,3.533,420,4.113,441,1.898,720,2.381,790,1.793,824,4.419,889,3.828,1024,3.049,1292,3.049,1585,4.931,1663,3.049,1664,4.945,1665,5.708,1666,5.344,1667,6.512,1668,5.708,1669,5.708,1670,5.708,1671,6.185,1672,6.185,1673,6.185,1674,4.945,1675,4.945,1676,4.945,1677,4.945,1678,4.945,1679,3.529,1680,3.529,1681,3.529,1682,4.945,1683,3.529,1684,4.945,1685,6.185,1686,3.529,1687,4.272,1688,4.945,1689,5.344,1690,4.945,1691,3.529,1692,4.945,1693,3.529,1694,3.529,1695,3.529,1696,3.529,1697,3.529,1698,3.049,1699,3.529,1700,4.945,1701,3.529,1702,3.529,1703,4.931,1704,3.529,1705,3.529,1706,4.945,1707,3.529,1708,4.945,1709,3.529,1710,3.529,1711,3.529,1712,3.529,1713,3.529,1714,3.049,1715,3.529,1716,4.945,1717,3.049,1718,3.529,1719,3.049,1720,3.529,1721,3.529,1722,3.529,1723,4.945,1724,4.945,1725,3.529,1726,3.529,1727,3.049,1728,3.529,1729,3.529,1730,3.529,1731,3.529,1732,3.049,1733,3.049,1734,3.049,1735,3.049,1736,3.049,1737,3.049,1738,7.619,1739,3.529,1740,3.529,1741,3.529,1742,3.529,1743,3.529,1744,3.529,1745,3.529,1746,4.272,1747,4.945,1748,3.529,1749,3.529,1750,3.529,1751,5.708,1752,3.529,1753,3.529,1754,3.529,1755,3.529,1756,3.529,1757,3.529,1758,3.049,1759,4.931,1760,3.529,1761,3.529,1762,3.529,1763,3.529,1764,3.529]],["title/components/ProjectTreeBlockNodeComponent.html",[248,0.126,336,0.751]],["body/components/ProjectTreeBlockNodeComponent.html",[3,0.154,4,0.135,5,0.097,8,0.278,9,0.874,20,0.402,27,1.381,42,1.323,46,0.354,49,0.017,50,0.663,51,0.361,56,0.837,57,0.372,58,1.074,61,0.874,111,0.699,112,0.607,123,0.669,124,0.468,141,2.061,142,0.154,143,0.095,245,0.008,246,0.011,247,0.008,248,0.204,249,0.801,250,1.172,251,0.953,252,0.994,253,0.913,254,1.657,256,0.732,257,1.879,258,1.72,260,1.334,262,1.334,297,0.837,298,1.224,299,0.663,300,0.953,301,1.476,302,0.953,303,0.953,304,0.801,305,0.874,306,0.953,307,0.801,308,1.726,309,0.953,310,0.801,311,1.122,312,1.442,313,0.801,314,1.224,315,0.953,316,0.801,317,1.442,318,0.801,319,0.913,320,1.278,321,0.837,322,1.172,323,0.801,324,0.801,325,0.953,326,1.278,327,0.801,328,1.624,329,0.953,330,0.837,331,0.953,332,0.837,333,0.953,334,0.801,335,0.953,336,1.295,337,1.69,338,0.801,339,0.953,340,0.801,341,0.874,342,0.801,343,0.874,344,0.801,345,0.494,346,0.801,347,0.874,348,0.801,349,0.801,350,0.874,351,0.801,352,0.837,353,0.801,354,0.953,355,0.801,356,0.801,357,0.953,358,0.801,359,0.953,360,0.801,361,0.874,362,0.874,363,0.953,364,0.801,365,1.323,366,0.953,367,0.953,484,3.422,486,3.803,523,0.814,524,1.784,533,1.989,594,2.152,597,2.433,1262,2.956,1343,3.102,1474,3.579,1765,2.181,1766,3.506,1767,3.107,1768,5.078,1769,3.301,1770,4.752,1771,5.302,1772,4.211,1773,2.868,1774,2.471,1775,2.868,1776,2.471,1777,3.503,1778,4.055,1779,2.651,1780,3.14,1781,3.503,1782,5.439,1783,2.471,1784,4.055,1785,2.471,1786,2.471,1787,2.316]],["title/components/ProjectTreeComponent.html",[248,0.126,338,0.751]],["body/components/ProjectTreeComponent.html",[3,0.106,4,0.093,5,0.067,8,0.191,9,0.712,20,0.309,27,1.483,42,0.602,45,2.45,46,0.366,48,1.072,49,0.017,50,0.787,51,0.35,52,1.072,56,0.577,57,0.48,58,1.385,61,0.602,66,3.196,72,1.972,103,3.38,111,0.957,112,0.83,116,0.657,123,0.679,124,0.323,130,1.106,131,1.278,140,1.703,141,1.421,142,0.106,143,0.066,147,2.684,156,1.402,160,3.472,174,0.685,176,1.585,245,0.012,246,0.009,247,0.006,248,0.166,249,0.552,250,0.9,251,0.657,252,0.685,253,0.629,254,1.495,256,0.505,257,1.828,258,1.671,260,1.024,262,1.024,297,0.577,298,0.94,299,0.509,300,0.657,301,1.402,302,0.657,303,0.657,304,0.552,305,0.602,306,0.657,307,0.552,308,1.343,309,0.657,310,0.552,311,0.862,312,1.175,313,0.552,314,0.94,315,0.657,316,0.552,317,1.175,318,0.552,319,0.94,320,0.981,321,0.577,322,0.9,323,0.552,324,0.552,325,0.657,326,0.981,327,0.552,328,1.57,329,0.657,330,0.577,331,0.657,332,0.577,333,0.657,334,0.552,335,0.657,336,0.552,337,1.516,338,1.095,339,0.657,340,0.552,341,1.078,342,0.552,343,0.602,344,0.552,345,0.509,346,0.552,347,0.602,348,0.552,349,0.552,350,1.196,351,0.552,352,0.577,353,0.552,354,0.657,355,0.552,356,0.552,357,0.657,358,0.552,359,0.657,360,0.552,361,0.602,362,0.602,363,0.657,364,0.552,365,0.602,366,0.657,367,0.657,389,2.61,399,1.977,420,3.618,463,1.278,464,1.421,484,3.512,523,0.625,524,1.453,533,1.683,541,4.32,556,3.051,559,2.415,564,3.608,576,0.552,597,1.443,635,2.25,654,1.216,656,1.652,657,2.464,684,1.216,702,0.966,720,1.346,721,4.823,723,2.164,786,4.295,790,1.421,811,2.415,825,1.703,862,2.731,953,2.246,961,2.164,962,1.346,963,1.597,964,1.346,980,1.278,1025,2.415,1175,2.545,1262,2.408,1267,1.597,1343,3.184,1450,1.828,1452,2.415,1474,3.166,1545,2.164,1581,4.32,1657,2.164,1703,2.415,1769,2.69,1770,3.872,1780,3.234,1783,2.545,1785,3.38,1786,3.047,1787,2.856,1788,2.415,1789,4.32,1790,4.177,1791,5.937,1792,5,1793,5,1794,4.792,1795,5.547,1796,5.547,1797,5.547,1798,5.547,1799,4.792,1800,4.32,1801,5.577,1802,5.937,1803,4.177,1804,4.177,1805,5,1806,2.795,1807,4.177,1808,2.795,1809,2.795,1810,2.795,1811,2.795,1812,2.795,1813,2.795,1814,3.608,1815,2.795,1816,4.177,1817,2.795,1818,2.795,1819,2.795,1820,2.795,1821,2.795,1822,2.795,1823,2.795,1824,2.795,1825,2.795,1826,2.795,1827,2.795,1828,2.795,1829,2.795,1830,2.795,1831,2.795,1832,2.415,1833,2.415,1834,3.234,1835,2.164,1836,2.164,1837,4.177,1838,4.177,1839,2.795,1840,4.177,1841,2.795,1842,2.795,1843,2.795,1844,2.415,1845,4.177,1846,5.129,1847,2.795,1848,2.795,1849,4.177,1850,2.795,1851,2.795,1852,2.795,1853,2.795,1854,2.795,1855,2.795,1856,2.795,1857,2.795,1858,2.795,1859,2.795,1860,4.177,1861,2.795,1862,5,1863,2.795,1864,4.177,1865,2.795,1866,2.795,1867,5.547,1868,4.177,1869,4.177,1870,2.795,1871,2.795,1872,2.795,1873,4.177,1874,2.795,1875,2.795,1876,4.177,1877,4.177,1878,2.795,1879,2.795,1880,6.455,1881,2.415,1882,2.795,1883,2.795,1884,4.177,1885,2.795,1886,2.795,1887,2.795,1888,2.415,1889,2.795,1890,2.795,1891,2.415,1892,2.795,1893,2.795,1894,2.795,1895,2.795,1896,2.795,1897,2.795,1898,4.177,1899,4.177,1900,4.177,1901,4.177,1902,2.415,1903,2.795]],["title/components/ProjectTreeDeclarationNodeComponent.html",[248,0.126,340,0.751]],["body/components/ProjectTreeDeclarationNodeComponent.html",[3,0.1,4,0.087,5,0.063,8,0.18,9,0.686,20,0.295,27,1.23,42,0.567,46,0.335,48,0.87,49,0.017,50,0.705,51,0.352,52,0.87,56,0.543,57,0.396,58,1.062,61,0.567,66,1.921,72,1.526,111,0.831,112,1.156,116,0.937,123,0.526,124,0.303,142,0.1,143,0.062,144,1.09,152,0.87,156,1.414,160,2.893,174,0.645,186,1.719,196,3.476,245,0.013,246,0.008,247,0.005,248,0.16,249,0.519,250,0.86,251,0.618,252,0.645,253,0.592,254,1.623,256,0.475,257,1.818,258,1.661,260,0.978,262,0.978,277,0.72,285,1.821,297,0.543,298,0.898,299,0.486,300,0.618,301,1.301,302,0.618,303,0.618,304,0.519,305,0.567,306,0.618,307,0.519,308,0.86,309,0.618,310,0.519,311,0.823,312,1.132,313,0.519,314,0.898,315,0.618,316,0.519,317,1.132,318,0.519,319,1.084,320,0.937,321,0.543,322,0.86,323,0.519,324,0.519,325,0.618,326,0.937,327,0.519,328,1.546,329,0.618,330,0.543,331,0.618,332,0.543,333,0.618,334,0.519,335,0.618,336,0.519,337,1.486,338,0.519,339,0.618,340,1.062,341,1.682,342,0.519,343,0.567,344,0.519,345,0.321,346,0.519,347,0.567,348,0.519,349,0.519,350,0.567,351,0.519,352,0.543,353,0.519,354,0.618,355,0.519,356,0.519,357,0.618,358,0.519,359,0.618,360,0.519,361,0.567,362,0.567,363,0.618,364,0.519,365,1.039,366,0.618,367,0.618,389,2.299,463,1.202,484,3.242,486,3.603,523,0.597,524,1.4,533,1.631,556,2.097,576,0.519,594,1.578,597,2.103,628,2.23,635,2.353,656,1.906,657,2.407,721,2.036,723,4.165,735,2.608,736,3.805,844,1.86,889,2.036,962,1.266,980,1.202,1175,3.708,1210,1.502,1211,1.502,1212,1.719,1213,1.719,1214,2.271,1215,1.602,1217,2.036,1218,3.088,1219,2.036,1262,2.321,1343,2.94,1643,3.446,1687,4.647,1714,5.258,1717,3.446,1719,6.501,1765,1.414,1766,2.753,1767,2.278,1768,4.165,1770,3.731,1771,4.163,1774,1.602,1775,1.86,1776,1.602,1779,1.719,1780,2.036,1781,2.271,1783,1.602,1785,1.602,1786,1.602,1787,1.502,1891,2.271,1904,4.819,1905,5.379,1906,3.988,1907,5.782,1908,2.036,1909,3.446,1910,1.86,1911,2.629,1912,2.271,1913,3.988,1914,2.629,1915,2.629,1916,3.988,1917,2.629,1918,3.731,1919,2.629,1920,2.629,1921,2.629,1922,2.629,1923,4.819,1924,2.629,1925,6.086,1926,2.629,1927,2.629,1928,4.647,1929,2.271,1930,2.629,1931,2.271,1932,2.271,1933,6.514,1934,6.086,1935,3.988,1936,3.988,1937,3.988,1938,3.988,1939,3.988,1940,5.379,1941,3.988,1942,3.988,1943,5.379,1944,3.988,1945,3.988,1946,6.086,1947,3.988,1948,6.086,1949,3.988,1950,5.379,1951,5.379,1952,5.379,1953,3.988,1954,6.086,1955,3.988,1956,2.629,1957,3.988,1958,2.629,1959,3.988,1960,2.629,1961,2.629,1962,2.629,1963,3.988,1964,2.629,1965,2.629,1966,2.629,1967,2.629,1968,2.629,1969,2.629,1970,2.629,1971,7.226,1972,2.629,1973,2.629,1974,4.819,1975,3.988,1976,2.629,1977,5.379,1978,3.988,1979,2.629,1980,2.629,1981,2.629,1982,2.629,1983,2.629,1984,2.629,1985,2.629,1986,2.629,1987,3.988,1988,2.629,1989,2.629,1990,4.819,1991,5.379,1992,2.629,1993,4.819,1994,2.629,1995,2.629,1996,2.629]],["title/components/ProjectTreeMonitorNodeComponent.html",[248,0.126,344,0.751]],["body/components/ProjectTreeMonitorNodeComponent.html",[3,0.135,4,0.118,5,0.085,8,0.244,9,0.817,20,0.368,27,1.393,42,0.768,46,0.355,48,1.036,49,0.017,50,0.797,51,0.367,52,1.036,56,0.735,57,0.425,58,1.227,61,0.768,111,0.859,112,0.745,116,0.837,123,0.713,124,0.575,141,1.811,142,0.135,143,0.084,145,1.41,156,0.704,176,0.951,245,0.007,246,0.01,247,0.007,248,0.191,249,0.704,250,1.073,251,0.837,252,0.874,253,0.802,254,1.653,256,0.643,257,1.863,258,1.705,260,1.221,262,1.221,297,0.735,298,1.121,299,0.607,300,0.837,301,1.398,302,0.837,303,0.837,304,0.704,305,0.768,306,0.837,307,0.704,308,1.073,309,0.837,310,0.704,311,1.027,312,1.348,313,0.704,314,1.121,315,0.837,316,0.704,317,1.348,318,0.704,319,0.802,320,1.17,321,0.735,322,1.073,323,0.704,324,0.704,325,0.837,326,1.17,327,0.704,328,1.603,329,0.837,330,0.735,331,0.837,332,0.735,333,0.837,334,0.704,335,0.837,336,0.704,337,1.633,338,0.704,339,0.837,340,0.704,341,0.768,342,0.704,343,0.768,344,1.227,345,0.972,346,0.704,347,1.339,348,0.704,349,0.704,350,0.768,351,0.704,352,0.735,353,0.704,354,0.837,355,0.704,356,0.704,357,0.837,358,0.704,359,0.837,360,0.704,361,0.768,362,0.768,363,0.837,364,0.704,365,1.409,366,0.837,367,0.837,389,2.721,463,1.63,484,3.429,486,3.811,523,0.745,524,1.668,533,1.884,556,1.551,594,1.97,597,2.146,724,2.33,728,2.33,980,2.624,1262,2.763,1343,3.109,1466,2.33,1473,4.957,1474,3.441,1560,4.301,1563,4.301,1623,3.079,1626,3.079,1639,4.301,1640,4.301,1641,4.301,1765,1.917,1766,3.278,1767,2.844,1769,3.087,1772,2.759,1774,2.172,1775,2.521,1776,2.172,1777,4.301,1783,3.034,1785,3.034,1786,3.034,1787,2.036,1789,4.957,1799,5.647,1832,3.079,1833,3.079,1836,2.759,1908,2.759,1997,5.738,1998,4.979,1999,4.979,2000,5.738,2001,6.212,2002,3.564,2003,3.564,2004,4.979,2005,3.564,2006,4.979,2007,3.564,2008,3.564,2009,2.759,2010,3.564,2011,3.564,2012,4.979,2013,5.367,2014,3.564,2015,3.564,2016,3.564,2017,4.957,2018,3.564,2019,3.564]],["title/components/ProjectTreeMonitorblockNodeComponent.html",[248,0.126,342,0.751]],["body/components/ProjectTreeMonitorblockNodeComponent.html",[3,0.163,4,0.142,5,0.102,8,0.293,9,0.898,20,0.417,27,1.35,42,1.359,46,0.341,49,0.017,50,0.687,51,0.333,56,0.883,57,0.293,58,0.845,61,0.923,111,0.738,112,0.64,123,0.688,124,0.494,141,2.176,142,0.163,143,0.101,245,0.009,246,0.012,247,0.009,248,0.209,249,0.845,250,1.215,251,1.006,252,1.049,253,0.963,254,1.654,256,0.773,257,1.885,258,1.726,260,1.382,262,1.382,297,0.883,298,1.269,299,0.687,300,1.006,301,1.508,302,1.006,303,1.006,304,0.845,305,0.923,306,1.006,307,0.845,308,1.215,309,1.006,310,0.845,311,1.163,312,1.481,313,0.845,314,1.269,315,1.006,316,0.845,317,1.481,318,0.845,319,0.963,320,1.325,321,0.883,322,1.215,323,0.845,324,0.845,325,1.006,326,1.325,327,0.845,328,1.632,329,1.006,330,0.883,331,1.006,332,0.883,333,1.006,334,0.845,335,1.006,336,0.845,337,1.713,338,0.845,339,1.006,340,0.845,341,0.923,342,1.323,343,1.716,344,0.845,345,0.522,346,0.845,347,0.923,348,0.845,349,0.845,350,0.923,351,0.845,352,0.883,353,0.845,354,1.006,355,0.845,356,0.845,357,1.006,358,0.845,359,1.006,360,0.845,361,0.923,362,0.923,363,1.006,364,0.845,365,1.359,366,1.006,367,1.006,484,3.334,486,3.705,523,0.844,524,1.832,533,2.033,594,2.23,597,2.315,1262,3.036,1343,3.023,1474,3.634,1765,2.302,1766,3.602,1767,3.221,1769,3.391,1773,3.028,1774,3.436,1775,3.028,1779,2.799,1787,2.445,2009,3.314]],["title/components/ProjectTreeOptionNodeComponent.html",[248,0.126,346,0.751]],["body/components/ProjectTreeOptionNodeComponent.html",[3,0.157,4,0.138,5,0.099,8,0.284,9,0.59,20,0.408,27,1.172,42,1.338,46,0.338,49,0.017,50,0.673,51,0.327,56,0.855,57,0.378,58,1.09,61,0.894,111,1.07,112,0.929,123,0.602,124,0.478,142,0.157,143,0.097,245,0.009,246,0.012,247,0.009,248,0.206,249,0.819,250,1.19,251,0.974,252,1.016,253,0.933,254,1.651,256,0.749,257,1.882,258,1.723,260,1.353,262,1.353,297,0.855,298,1.242,299,0.673,300,0.974,301,1.489,302,0.974,303,0.974,304,0.819,305,0.894,306,0.974,307,0.819,308,1.19,309,0.974,310,0.819,311,1.139,312,1.458,313,0.819,314,1.242,315,0.974,316,0.819,317,1.458,318,0.819,319,0.933,320,1.297,321,0.855,322,1.19,323,0.819,324,0.819,325,0.974,326,1.297,327,0.819,328,1.627,329,0.974,330,0.855,331,0.974,332,0.855,333,0.974,334,0.819,335,0.974,336,0.819,337,1.699,338,0.819,339,0.974,340,0.819,341,0.894,342,0.819,343,0.894,344,0.819,345,0.505,346,1.307,347,1.714,348,0.819,349,0.819,350,0.894,351,0.819,352,0.855,353,0.819,354,0.974,355,0.819,356,0.819,357,0.974,358,0.819,359,0.974,360,0.819,361,0.894,362,0.894,363,0.974,364,0.819,365,1.338,366,0.974,367,0.974,484,3.308,486,3.676,523,0.826,524,1.804,533,2.007,594,2.184,597,2.286,1039,3.582,1262,2.989,1269,5.716,1343,2.999,1765,2.23,1766,3.545,1767,3.153,1768,5.123,1769,3.338,1776,2.526,1779,2.711,1783,2.526,1785,2.526,1786,2.526,1787,2.368,1910,3.905,2009,3.21,2017,5.716,2020,4.146,2021,4.146,2022,4.146]],["title/components/ProjectTreeOptionsNodeComponent.html",[248,0.126,348,0.751]],["body/components/ProjectTreeOptionsNodeComponent.html",[3,0.16,4,0.14,5,0.101,8,0.289,9,0.891,20,0.412,27,1.409,42,1.349,46,0.347,49,0.017,50,0.68,51,0.33,56,1.638,57,0.289,58,0.832,61,0.909,111,0.963,112,0.835,123,0.609,124,0.487,141,2.143,142,0.16,143,0.099,245,0.009,246,0.012,247,0.009,248,0.208,249,0.832,250,1.203,251,0.99,252,1.034,253,0.949,254,1.656,256,0.761,257,1.883,258,1.725,260,1.368,262,1.368,297,0.87,298,1.256,299,0.68,300,0.99,301,1.499,302,0.99,303,0.99,304,0.832,305,0.909,306,0.99,307,0.832,308,1.203,309,0.99,310,0.832,311,1.152,312,1.47,313,0.832,314,1.256,315,0.99,316,0.832,317,1.47,318,0.832,319,0.949,320,1.311,321,0.87,322,1.203,323,0.832,324,0.832,325,0.99,326,1.311,327,0.832,328,1.626,329,0.99,330,0.87,331,0.99,332,0.87,333,0.99,334,0.832,335,0.99,336,0.832,337,1.706,338,0.832,339,0.99,340,0.832,341,0.909,342,0.832,343,0.909,344,0.832,345,0.514,346,0.832,347,0.909,348,1.315,349,0.832,350,0.909,351,0.832,352,0.87,353,0.832,354,0.99,355,0.832,356,0.832,357,0.99,358,0.832,359,0.99,360,0.832,361,0.909,362,0.909,363,0.99,364,0.832,365,1.349,366,0.99,367,0.99,484,3.372,486,3.748,523,0.835,524,1.819,533,2.02,594,2.208,597,2.301,1262,3.014,1343,3.057,1346,5.986,1474,3.619,1765,2.268,1766,3.574,1767,3.188,1769,3.366,1773,2.982,1774,2.569,1776,3.401,1779,2.756,1910,2.982,2023,6.258,2024,3.642]],["title/components/ProjectTreePageNodeComponent.html",[248,0.126,349,0.751]],["body/components/ProjectTreePageNodeComponent.html",[3,0.145,4,0.127,5,0.091,8,0.261,9,0.847,20,0.386,27,1.265,42,0.822,46,0.353,48,0.689,49,0.017,50,0.725,51,0.365,52,0.689,56,0.787,57,0.357,58,0.753,61,0.822,80,1.377,111,1.193,112,1.035,116,1.397,123,0.697,124,0.44,141,1.938,142,0.145,143,0.09,152,0.942,156,0.753,176,1.018,245,0.008,246,0.011,247,0.008,248,0.198,249,0.753,250,1.125,251,0.896,252,0.935,253,0.858,254,1.654,256,0.689,257,1.872,258,1.713,260,1.279,262,1.279,297,0.787,298,1.174,299,0.636,300,0.896,301,1.439,302,0.896,303,0.896,304,0.753,305,0.822,306,0.896,307,0.753,308,1.125,309,0.896,310,0.753,311,1.077,312,1.397,313,0.753,314,1.174,315,0.896,316,0.753,317,1.397,318,0.753,319,0.858,320,1.226,321,0.787,322,1.125,323,0.753,324,0.753,325,0.896,326,1.226,327,0.753,328,1.614,329,0.896,330,0.787,331,0.896,332,0.787,333,0.896,334,0.753,335,0.896,336,0.753,337,1.663,338,0.753,339,0.896,340,0.753,341,0.822,342,0.753,343,0.822,344,0.753,345,0.465,346,0.753,347,0.822,348,0.753,349,1.263,350,1.719,351,0.753,352,0.787,353,0.753,354,0.896,355,0.753,356,0.753,357,0.896,358,0.753,359,0.896,360,0.753,361,0.822,362,0.822,363,0.896,364,0.753,365,1.282,366,0.896,367,0.896,389,2.762,463,1.744,484,3.415,486,3.795,523,0.781,524,1.729,533,2.147,556,2.588,594,2.064,597,2.389,1262,2.864,1343,3.096,1474,3.514,1765,2.051,1766,3.397,1767,2.981,1769,3.199,1772,2.953,1773,2.698,1774,2.324,1776,2.324,1787,2.179,1794,5.138,1836,2.953,1844,4.508,1908,2.953,1909,4.508,1910,2.698,1912,3.295,2024,3.295,2025,6.395,2026,5.948,2027,3.814,2028,5.218,2029,5.948,2030,3.814,2031,3.814,2032,3.814,2033,3.814,2034,3.814,2035,3.814]],["title/components/ProjectTreeToolbarComponent.html",[248,0.126,351,0.751]],["body/components/ProjectTreeToolbarComponent.html",[3,0.156,4,0.136,5,0.098,8,0.281,9,0.879,20,0.405,42,1.33,46,0.35,48,0.74,49,0.017,50,0.752,51,0.216,52,0.74,56,0.846,57,0.483,58,1.395,61,0.883,72,1.735,111,0.707,112,0.923,123,0.597,124,0.473,142,0.156,143,0.096,245,0.009,246,0.011,247,0.009,248,0.205,249,0.809,250,1.181,251,0.963,252,1.005,253,0.922,254,1.656,256,0.74,257,1.88,258,1.722,260,1.343,262,1.343,277,0.74,297,0.846,298,1.233,299,0.668,300,0.963,301,1.482,302,0.963,303,0.963,304,0.809,305,0.883,306,0.963,307,0.809,308,1.181,309,0.963,310,0.809,311,1.13,312,1.449,313,0.809,314,1.233,315,0.963,316,0.809,317,1.449,318,0.809,319,0.922,320,1.287,321,0.846,322,1.181,323,0.809,324,0.809,325,0.963,326,1.287,327,0.809,328,1.622,329,0.963,330,0.846,331,0.963,332,0.846,333,0.963,334,0.809,335,0.963,336,0.809,337,1.694,338,0.809,339,0.963,340,0.809,341,0.883,342,0.809,343,0.883,344,0.809,345,0.5,346,0.809,347,0.883,348,0.809,349,0.809,350,0.883,351,1.301,352,0.846,353,0.809,354,0.963,355,0.809,356,0.809,357,0.963,358,0.809,359,0.963,360,0.809,361,0.883,362,0.883,363,0.963,364,0.809,365,0.883,366,0.963,367,0.963,484,3.394,488,5.746,523,0.82,524,1.793,533,1.998,556,1.783,576,0.809,597,1.416,702,1.416,743,2.899,844,3.875,962,1.974,964,1.974,967,2.497,972,2.68,973,2.68,980,1.874,982,2.899,983,4.241,984,4.777,985,4.241,1007,3.541,1267,2.341,1343,3.077,1466,2.68,1486,5.69,1489,5.69,2036,6.17,2037,6.17,2038,6.586,2039,6.586,2040,5.478,2041,5.478,2042,4.098,2043,4.098,2044,4.098,2045,4.098,2046,4.098,2047,4.098,2048,6.17,2049,4.098,2050,4.098,2051,4.098,2052,3.541,2053,3.541,2054,4.098]],["title/pipes/RegexPipe.html",[384,2.485,712,1.576]],["body/pipes/RegexPipe.html",[3,0.22,4,0.192,5,0.139,20,0.428,46,0.277,48,1.046,49,0.017,50,0.882,51,0.306,52,1.046,57,0.397,72,1.834,112,1.117,123,0.632,124,0.669,142,0.22,143,0.136,152,1.046,245,0.012,246,0.014,247,0.012,256,1.046,277,1.374,384,4.452,493,3.116,523,0.867,576,1.144,712,2.823,716,3.53,717,4.816,734,4.452,735,4.728,1928,5.882,1929,5.004,1931,5.004,1932,5.004,2055,5.004,2056,5.793,2057,5.793,2058,5.793,2059,5.793]],["title/pipes/ReplaceSpacesPipe.html",[385,2.485,712,1.576]],["body/pipes/ReplaceSpacesPipe.html",[3,0.218,4,0.191,5,0.137,20,0.424,46,0.274,48,1.036,49,0.017,50,0.878,51,0.303,52,1.036,57,0.393,112,1.113,123,0.626,124,0.662,142,0.218,143,0.135,152,1.036,245,0.012,246,0.014,247,0.012,256,1.036,277,1.371,385,4.428,493,3.087,523,0.859,712,2.808,716,3.497,717,4.79,734,4.428,735,5.031,2060,5.85,2061,4.959,2062,6.772,2063,5.74,2064,5.74,2065,5.74,2066,6.772]],["title/pipes/SafeHtmlPipe.html",[386,2.485,712,1.576]],["body/pipes/SafeHtmlPipe.html",[3,0.224,4,0.196,5,0.141,20,0.435,46,0.281,48,1.063,49,0.017,50,0.838,52,1.063,57,0.403,123,0.75,124,0.68,142,0.224,143,0.138,144,2.441,152,1.315,245,0.012,246,0.014,247,0.012,256,1.063,298,1.325,386,4.495,402,4.165,403,3.85,493,3.167,712,2.441,716,3.588,1270,5.087,2067,5.939,2068,5.087,2069,6.875,2070,6.875,2071,5.888,2072,5.888,2073,5.888,2074,5.888,2075,5.888,2076,5.888,2077,5.888,2078,5.888]],["title/components/SaveprojectButtonComponent.html",[248,0.126,353,0.751]],["body/components/SaveprojectButtonComponent.html",[1,3.063,3,0.142,4,0.124,5,0.164,6,2.891,8,0.256,9,0.838,20,0.38,42,0.805,46,0.336,48,1.062,49,0.017,50,0.887,51,0.351,52,1.062,56,0.771,57,0.403,58,1.162,61,0.805,72,1.628,111,0.644,112,0.559,123,0.782,124,0.431,127,4.555,132,3.226,133,3.226,134,3.226,135,3.226,140,2.275,142,0.142,143,0.088,144,1.548,145,2.718,148,3.226,152,0.674,156,1.016,173,3.226,174,0.916,176,0.997,183,4.161,245,0.008,246,0.011,247,0.008,248,0.195,249,0.737,250,1.108,251,0.877,252,0.916,253,0.84,254,1.52,256,0.674,257,1.869,258,1.711,260,1.261,262,1.261,264,2.442,277,1.314,297,0.771,298,1.157,299,0.627,300,0.877,301,1.426,302,0.877,303,0.877,304,0.737,305,0.805,306,0.877,307,0.737,308,1.108,309,0.877,310,0.737,311,1.061,312,1.382,313,0.737,314,1.157,315,0.877,316,0.737,317,1.382,318,0.737,319,0.84,320,1.208,321,0.771,322,1.108,323,0.737,324,0.737,325,0.877,326,1.208,327,0.737,328,1.577,329,0.877,330,0.771,331,0.877,332,0.771,333,0.877,334,0.737,335,0.877,336,0.737,337,1.654,338,0.737,339,0.877,340,0.737,341,0.805,342,0.737,343,0.805,344,0.737,345,0.455,346,0.737,347,0.805,348,0.737,349,0.737,350,0.805,351,0.737,352,0.771,353,1.252,354,1.71,355,0.737,356,0.737,357,0.877,358,0.737,359,0.877,360,0.737,361,0.805,362,0.805,363,0.877,364,0.737,365,0.805,366,0.877,367,0.877,373,2.442,389,2.659,427,2.275,428,2.891,441,2.009,463,1.708,468,5.553,523,0.769,524,1.71,533,1.922,576,0.737,692,2.352,1248,2.891,1249,5.082,1250,5.082,1251,4.443,1256,3.226,1265,4.443,1689,6.287,1737,3.226,2079,6.196,2080,5.882,2081,5.882,2082,5.882,2083,5.143,2084,3.734,2085,6.338,2086,5.143,2087,5.882,2088,3.734,2089,5.143,2090,3.734,2091,5.143,2092,5.143,2093,3.734,2094,3.734,2095,5.143,2096,3.734,2097,3.734,2098,3.734,2099,3.226,2100,3.734,2101,3.734,2102,3.734,2103,5.882,2104,3.734,2105,5.143,2106,3.734,2107,3.734,2108,3.734,2109,3.734,2110,3.734,2111,3.734,2112,3.734,2113,3.734,2114,3.734,2115,3.734,2116,3.734,2117,3.734,2118,5.143,2119,3.734,2120,5.143,2121,3.734,2122,3.734,2123,3.734,2124,3.734,2125,3.734,2126,3.734,2127,3.734,2128,6.871,2129,3.734,2130,5.143,2131,5.143,2132,5.143]],["title/injectables/SettingsService.html",[0,1.738,271,2.171]],["body/injectables/SettingsService.html",[0,2.897,2,3.131,3,0.195,4,0.171,5,0.123,8,0.352,9,0.902,20,0.468,27,1.461,42,1.48,43,4.439,44,5.551,46,0.352,48,0.928,49,0.017,50,0.626,51,0.271,52,0.928,53,4.905,57,0.47,58,1.251,72,1.627,123,0.749,124,0.593,125,4.905,126,3.634,139,4.858,142,0.195,143,0.121,144,2.13,152,0.928,156,1.356,185,5.317,187,3.36,196,3.923,212,3.978,245,0.011,246,0.013,247,0.011,270,3.978,271,3.618,361,1.107,527,5.933,551,6.683,556,2.988,1732,4.439,1733,4.439,1734,4.439,1735,4.439,1736,4.439,1758,4.439,1759,4.439,2133,4.439,2134,7.169,2135,7.499,2136,7.169,2137,6.335,2138,5.138,2139,5.138,2140,5.138,2141,4.905,2142,5.138,2143,7.364,2144,5.138,2145,5.138,2146,5.138,2147,5.138,2148,5.138,2149,5.138,2150,5.138]],["title/components/SimulationPanelComponent.html",[248,0.126,355,0.751]],["body/components/SimulationPanelComponent.html",[1,3.013,3,0.107,4,0.094,5,0.068,8,0.193,9,0.716,14,3.634,20,0.311,27,1.181,42,0.907,45,2.257,46,0.354,48,0.759,49,0.017,50,0.679,51,0.359,52,0.759,56,0.868,57,0.443,58,1.279,61,1.492,62,5.509,63,2.106,65,2.438,108,1.816,111,1.212,112,0.996,116,0.663,123,0.65,124,0.326,130,1.116,131,1.291,142,0.107,143,0.066,145,1.116,147,2.205,152,0.759,156,1.279,174,1.031,176,0.753,245,0.006,246,0.009,247,0.006,248,0.167,249,0.557,250,0.907,251,0.663,252,0.692,253,0.635,254,1.429,256,0.509,257,1.83,258,1.672,260,1.031,262,1.031,285,1.589,297,0.582,298,0.947,299,0.844,300,0.663,301,1.254,302,0.663,303,0.663,304,0.557,305,0.608,306,0.663,307,0.557,308,0.907,309,0.663,310,0.557,311,0.868,312,1.181,313,0.557,314,0.947,315,0.663,316,0.557,317,1.181,318,0.557,319,0.635,320,0.988,321,0.582,322,0.907,323,0.557,324,0.557,325,0.663,326,0.988,327,0.557,328,1.484,329,0.663,330,0.582,331,0.663,332,0.582,333,0.663,334,0.557,335,0.663,336,0.557,337,1.521,338,0.557,339,0.663,340,0.557,341,0.608,342,0.557,343,0.608,344,0.557,345,0.344,346,0.557,347,0.608,348,0.557,349,0.557,350,0.608,351,0.557,352,0.582,353,0.557,354,0.663,355,1.101,356,0.557,357,0.663,358,0.557,359,0.663,360,0.557,361,1.285,362,0.608,363,0.663,364,0.557,365,0.608,366,0.663,367,0.663,440,1.72,441,1.518,464,1.434,481,5.775,523,0.629,524,1.462,533,1.691,556,2.72,558,2.159,568,2.438,573,1.996,576,1.367,597,0.975,619,1.83,635,2.257,638,2.425,640,1.664,641,1.744,642,1.744,648,1.83,656,2.205,657,2.562,697,2.425,720,1.359,772,2.185,774,5.982,775,4.344,776,3.634,790,1.434,807,2.438,862,1.845,953,2.998,962,2.684,963,1.612,964,2.871,968,1.72,979,2.403,1014,2.438,1210,1.612,1211,1.612,1267,2.403,1277,4.815,1314,4.815,1450,2.75,1464,3.644,1548,2.438,1561,5.15,1562,4.344,1575,3.634,1647,3.257,2053,2.438,2151,6.444,2152,5.961,2153,5.961,2154,5.961,2155,5.029,2156,5.961,2157,5.961,2158,5.029,2159,5.029,2160,5.574,2161,5.574,2162,5.961,2163,6.251,2164,5.961,2165,4.206,2166,4.206,2167,2.822,2168,2.822,2169,2.822,2170,2.822,2171,2.822,2172,4.206,2173,2.822,2174,2.822,2175,5.961,2176,2.822,2177,2.822,2178,2.822,2179,2.822,2180,6.655,2181,4.815,2182,5.961,2183,4.206,2184,4.206,2185,4.206,2186,2.822,2187,2.822,2188,2.822,2189,2.822,2190,2.822,2191,2.822,2192,2.822,2193,2.822,2194,5.029,2195,6.251,2196,5.029,2197,5.961,2198,5.574,2199,2.822,2200,3.634,2201,2.822,2202,2.822,2203,2.822,2204,2.822,2205,2.822,2206,2.822,2207,2.822,2208,2.822,2209,2.822,2210,4.206,2211,6.476,2212,2.822,2213,4.206,2214,2.822,2215,2.822,2216,2.822,2217,2.822,2218,2.822,2219,2.822,2220,2.822,2221,2.822,2222,2.822,2223,2.822,2224,4.206,2225,2.822,2226,2.822,2227,2.822,2228,2.822,2229,2.822,2230,2.822,2231,2.822,2232,2.822,2233,4.206,2234,5.574,2235,5.574,2236,5.574,2237,4.206,2238,3.634,2239,5.574,2240,4.206,2241,5.4,2242,4.206,2243,4.206,2244,4.206,2245,2.822,2246,3.894,2247,2.822,2248,2.822,2249,3.634,2250,2.438,2251,3.894,2252,2.822,2253,2.822,2254,2.822,2255,2.822,2256,3.257]],["title/components/TabComponent.html",[248,0.126,356,0.751]],["body/components/TabComponent.html",[3,0.16,4,0.14,5,0.101,8,0.288,9,0.89,20,0.411,27,1.18,42,0.906,46,0.346,48,0.759,49,0.017,50,0.762,51,0.365,52,0.759,56,0.867,57,0.288,61,0.906,66,3.008,80,2.402,111,0.961,112,0.833,116,1.563,123,0.607,124,0.485,142,0.16,143,0.099,144,1.742,152,1.006,174,1.365,245,0.009,246,0.012,247,0.009,248,0.207,249,0.83,250,1.2,251,0.987,252,1.03,253,0.946,254,1.554,256,0.759,257,1.883,258,1.72,260,1.365,262,1.365,277,1.25,297,0.867,298,1.253,299,0.679,300,0.987,301,1.497,302,0.987,303,0.987,304,0.83,305,0.906,306,0.987,307,0.83,308,1.2,309,0.987,310,0.83,311,1.149,312,1.468,313,0.83,314,1.253,315,0.987,316,0.83,317,1.468,318,0.83,319,0.946,320,1.308,321,0.867,322,1.2,323,0.83,324,0.83,325,0.987,326,1.308,327,0.83,328,1.586,329,0.987,330,0.867,331,0.987,332,0.867,333,0.987,334,0.83,335,0.987,336,0.83,337,1.705,338,0.83,339,0.987,340,0.83,341,0.906,342,0.83,343,0.906,344,0.83,345,0.512,346,0.83,347,0.906,348,0.83,349,0.83,350,1.346,351,0.83,352,0.867,353,0.83,354,0.987,355,0.83,356,1.314,357,0.987,358,1.367,359,0.987,360,0.83,361,0.906,362,0.906,363,0.987,364,0.83,365,0.906,366,0.987,367,0.987,594,2.203,597,2.391,702,1.452,822,5.747,823,3.253,858,4.312,953,2.996,962,2.023,963,2.4,964,2.682,967,2.56,968,4.217,970,2.972,979,2.4,980,1.922,1267,2.4,1645,2.747,1659,2.972,1660,3.253,2257,3.63,2258,5.397,2259,6.247,2260,5.569,2261,6.652,2262,6.652,2263,6.247,2264,6.247,2265,5.569,2266,5.569,2267,4.312,2268,4.202,2269,4.202,2270,4.202,2271,4.202,2272,4.202,2273,4.202,2274,4.202,2275,5.569,2276,4.202,2277,4.202,2278,4.202,2279,4.202,2280,3.939,2281,4.202,2282,3.63,2283,4.202,2284,4.202,2285,3.63,2286,3.63,2287,4.202,2288,4.202,2289,3.63]],["title/modules/TabModule.html",[368,2.316,388,2.485]],["body/modules/TabModule.html",[3,0.214,4,0.188,5,0.135,49,0.017,103,3.442,123,0.824,124,0.652,142,0.214,143,0.133,245,0.012,246,0.014,247,0.012,297,1.166,356,1.57,358,1.57,368,3.442,370,3.442,371,3.694,372,5.541,373,3.694,374,3.996,375,5.061,388,5.161,392,5.194,393,3.694,395,5.194,408,3.694,410,5.796,411,3.996,412,5.194,424,5.796,425,4.374,823,4.374,2267,4.374,2290,4.88,2291,4.88,2292,4.88,2293,4.374,2294,5.649,2295,4.88]],["title/components/TabsContainer.html",[248,0.126,358,0.751]],["body/components/TabsContainer.html",[3,0.124,4,0.108,5,0.078,8,0.374,9,0.777,20,0.345,46,0.353,48,1.077,49,0.017,50,0.801,51,0.372,52,1.077,56,0.671,57,0.474,58,1.247,61,0.701,66,3.165,72,1.03,80,2.154,111,0.805,112,0.698,116,1.282,123,0.509,124,0.375,142,0.124,143,0.076,152,1.077,160,2.511,163,2.301,169,2.519,176,1.246,245,0.012,246,0.01,247,0.007,248,0.181,249,0.642,250,1.006,251,0.764,252,0.798,253,0.732,254,1.477,256,0.587,257,1.851,258,1.687,260,1.144,262,1.144,277,1.187,297,0.671,298,1.05,299,0.569,300,0.764,301,1.421,302,0.764,303,0.764,304,0.642,305,0.701,306,0.764,307,0.642,308,1.361,309,0.764,310,0.642,311,0.963,312,1.282,313,0.642,314,1.05,315,0.764,316,0.642,317,1.282,318,0.642,319,0.732,320,1.097,321,0.671,322,1.006,323,0.642,324,0.642,325,0.764,326,1.097,327,0.642,328,1.524,329,0.764,330,0.671,331,0.764,332,0.671,333,0.764,334,0.642,335,0.764,336,0.642,337,1.59,338,0.642,339,0.764,340,0.642,341,0.701,342,0.642,343,0.701,344,0.642,345,0.397,346,0.642,347,0.701,348,0.642,349,0.642,350,0.701,351,0.642,352,0.671,353,0.642,354,0.764,355,0.642,356,1.445,357,0.764,358,1.178,359,0.764,360,0.642,361,0.701,362,0.701,363,0.764,364,0.642,365,0.701,366,0.764,367,0.764,427,1.982,576,1.393,594,1.846,597,1.613,702,2.182,782,4.032,784,4.716,858,5.089,860,4.032,877,5.152,892,4.226,953,1.75,960,4.032,961,2.519,963,2.666,964,3.041,965,3.861,967,4.361,968,3.634,969,3.848,970,3.861,973,4.995,974,2.519,978,2.519,979,3.956,980,3.096,1178,5.152,1210,3.607,1211,1.858,1213,2.127,1215,1.982,1267,3.407,1282,3.614,1315,2.811,1450,3.052,1456,5.152,1464,3.569,1645,4.297,1653,2.519,1654,2.519,1659,2.301,1660,2.519,2052,4.032,2246,4.226,2249,4.032,2250,2.811,2251,3.614,2256,4.226,2258,2.811,2267,5.089,2280,3.301,2282,2.811,2285,2.811,2286,4.716,2293,5.761,2295,2.811,2296,2.811,2297,5.459,2298,4.668,2299,5.459,2300,5.459,2301,4.668,2302,5.964,2303,4.668,2304,5.964,2305,4.668,2306,5.459,2307,4.032,2308,3.253,2309,3.253,2310,4.668,2311,3.253,2312,3.253,2313,4.668,2314,3.253,2315,3.253,2316,4.668,2317,3.253,2318,3.253,2319,3.253,2320,4.668,2321,3.253,2322,3.253,2323,3.253,2324,3.253,2325,3.253,2326,4.668,2327,5.964,2328,5.459,2329,5.459,2330,5.459,2331,3.253,2332,3.253,2333,3.253,2334,4.668,2335,3.253,2336,3.253,2337,3.253,2338,2.811,2339,3.253,2340,3.253,2341,3.253,2342,3.253,2343,3.253,2344,3.253,2345,3.253,2346,5.964,2347,5.459,2348,4.668,2349,3.253,2350,2.811,2351,4.668,2352,3.253,2353,2.811,2354,2.811,2355,4.668,2356,3.253,2357,3.253,2358,3.253,2359,2.811,2360,3.253,2361,4.668,2362,3.253,2363,3.253,2364,4.716,2365,3.253,2366,2.811,2367,2.519]],["title/components/TextEditRowComponent.html",[248,0.126,360,0.751]],["body/components/TextEditRowComponent.html",[3,0.108,4,0.094,5,0.068,8,0.194,9,0.719,20,0.312,46,0.352,48,1.079,49,0.017,50,0.932,51,0.352,52,1.079,56,1.153,57,0.409,58,0.834,61,0.612,72,1.598,111,1.119,112,0.971,116,1.524,123,0.31,124,0.328,142,0.108,143,0.067,145,1.996,147,1.671,152,1.171,156,1.104,176,1.492,186,1.856,245,0.006,246,0.009,247,0.006,248,0.168,249,0.56,250,0.91,251,0.667,252,0.696,253,0.639,254,1.431,256,0.512,257,1.831,258,1.673,260,1.036,262,1.036,277,1.009,285,1.072,294,5.023,295,3.649,297,0.586,298,0.951,299,0.515,300,0.667,301,1.258,302,0.667,303,0.667,304,0.56,305,0.612,306,0.667,307,0.56,308,0.91,309,0.667,310,0.56,311,0.872,312,1.185,313,0.56,314,0.951,315,0.667,316,0.56,317,1.185,318,0.56,319,0.951,320,0.992,321,0.586,322,0.91,323,0.56,324,0.56,325,0.667,326,0.992,327,0.56,328,1.486,329,0.667,330,0.586,331,0.667,332,0.586,333,0.667,334,0.56,335,0.667,336,0.56,337,1.524,338,0.56,339,0.667,340,0.56,341,0.612,342,0.56,343,0.612,344,0.56,345,0.346,346,0.56,347,1.088,348,0.56,349,0.56,350,0.612,351,0.56,352,0.586,353,0.56,354,0.667,355,0.56,356,0.56,357,0.667,358,0.56,359,0.667,360,1.104,361,1.579,362,1.653,363,0.667,364,0.56,365,0.612,366,0.667,367,0.667,471,5.748,472,3.649,517,4.829,561,2.452,563,2.452,573,3.569,576,0.996,594,1.671,597,2.395,621,1.177,702,1.931,719,4.359,720,3.016,722,3.649,724,2.762,728,2.762,736,2.007,865,3.649,892,4.328,953,2.714,962,2.878,964,2.43,965,2.007,967,3.406,969,3.817,972,1.856,979,2.882,980,2.967,1175,1.729,1202,3.649,1209,2.197,1210,3.413,1211,1.621,1212,3.907,1215,2.574,1217,2.197,1218,3.271,1219,2.197,1282,3.907,1464,2.762,1466,2.762,1645,2.762,1647,3.271,1800,3.649,1801,3.649,1814,3.649,1881,2.452,1888,3.649,1918,4.627,2181,2.452,2238,2.452,2251,3.271,2256,3.271,2280,3.569,2307,3.649,2364,3.649,2366,2.452,2367,4.85,2368,6.413,2369,2.452,2370,5.046,2371,4.224,2372,5.046,2373,4.224,2374,4.224,2375,4.224,2376,5.046,2377,5.046,2378,5.046,2379,2.838,2380,2.838,2381,2.838,2382,2.838,2383,2.838,2384,2.838,2385,2.838,2386,2.838,2387,2.838,2388,2.838,2389,4.224,2390,2.838,2391,4.224,2392,2.838,2393,2.838,2394,4.224,2395,2.838,2396,5.046,2397,5.975,2398,2.838,2399,4.224,2400,4.224,2401,4.224,2402,4.224,2403,4.224,2404,4.224,2405,4.224,2406,4.224,2407,4.224,2408,4.224,2409,4.224,2410,4.224,2411,4.224,2412,4.224,2413,4.224,2414,4.224,2415,4.224,2416,4.224,2417,4.224,2418,4.224,2419,4.224,2420,4.224,2421,4.224,2422,4.224,2423,4.224,2424,4.224,2425,2.838,2426,2.838,2427,2.838,2428,4.224,2429,2.838,2430,2.838,2431,2.838,2432,4.224,2433,4.224,2434,2.838,2435,2.838,2436,2.838,2437,2.838,2438,2.838,2439,2.838,2440,2.838,2441,2.838,2442,2.838,2443,2.838,2444,5.975,2445,2.838,2446,2.838,2447,2.838,2448,2.838,2449,2.838,2450,4.224,2451,2.838,2452,2.838,2453,4.224,2454,3.649,2455,6.264,2456,4.224,2457,4.224,2458,3.649,2459,4.224,2460,5.046,2461,3.649,2462,4.224,2463,4.224,2464,4.224,2465,4.224,2466,2.838,2467,2.838,2468,3.649,2469,4.224,2470,4.224,2471,2.838,2472,2.838,2473,2.838,2474,2.838,2475,2.838,2476,2.838,2477,2.838,2478,2.838,2479,2.838,2480,2.838,2481,2.838,2482,2.838,2483,2.838,2484,2.838,2485,4.224,2486,4.224,2487,4.224,2488,2.838,2489,2.838,2490,4.224,2491,2.838,2492,2.838,2493,2.838]],["title/classes/TransitionEnabledBreakPointMonitorTemplate.html",[143,0.089,711,1.654]],["body/classes/TransitionEnabledBreakPointMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.162,706,1.162,707,1.162,708,1.162,709,1.286,710,1.162,711,1.756,2494,2.671,2495,2.671,2496,2.671,2497,2.671,2498,2.671,2499,2.671,2500,2.671,2501,2.671]],["title/components/TreeNodeComponent.html",[248,0.126,364,0.751]],["body/components/TreeNodeComponent.html",[3,0.149,4,0.13,5,0.094,8,0.269,9,0.559,20,0.393,27,1.005,46,0.355,49,0.017,50,0.649,51,0.357,56,0.81,57,0.269,58,0.775,61,0.846,63,1.483,66,2.907,111,1.251,112,1.086,123,0.428,124,0.453,142,0.149,143,0.092,174,0.962,176,1.727,245,0.008,246,0.011,247,0.008,248,0.2,249,0.775,250,1.147,251,0.922,252,0.962,253,0.883,254,1.6,256,0.709,257,1.875,258,1.717,260,1.304,262,1.304,264,4.56,297,0.81,298,1.197,299,0.649,300,0.922,301,1.456,302,0.922,303,0.922,304,0.775,305,0.846,306,0.922,307,0.775,308,1.301,309,0.922,310,0.775,311,1.098,312,1.418,313,0.775,314,1.197,315,0.922,316,0.775,317,1.418,318,0.775,319,0.883,320,1.25,321,0.81,322,1.147,323,0.775,324,0.775,325,0.922,326,1.25,327,0.775,328,1.571,329,0.922,330,0.81,331,0.922,332,0.81,333,0.922,334,0.775,335,0.922,336,0.775,337,1.676,338,0.775,339,0.922,340,0.775,341,0.846,342,0.775,343,0.846,344,0.775,345,0.478,346,0.775,347,0.846,348,0.775,349,0.775,350,0.846,351,0.775,352,0.81,353,0.775,354,0.922,355,0.775,356,0.775,357,0.922,358,0.775,359,0.922,360,0.775,361,0.846,362,0.846,363,0.922,364,1.278,365,1.395,366,0.922,367,0.922,393,2.566,398,5.81,399,5.308,556,1.708,576,1.051,594,2.105,597,2.569,702,1.838,962,1.89,963,3.039,964,2.562,972,2.566,978,3.039,979,2.242,980,2.96,1175,3.678,1196,3.039,1213,2.566,1215,2.391,1262,2.907,1267,2.242,1343,3.111,1645,2.566,1653,3.039,1654,5.237,1657,3.039,1769,3.247,1783,2.391,1785,2.391,1786,2.391,1846,4.597,1902,5.215,1918,3.039,2246,4.674,2280,3.763,2289,4.597,2350,3.391,2353,3.391,2354,3.391,2359,5.215,2367,4.12,2502,3.391,2503,5.321,2504,6.764,2505,6.036,2506,3.925,2507,3.925,2508,3.925,2509,3.925,2510,3.925,2511,3.925,2512,3.925,2513,3.925,2514,3.925,2515,3.925,2516,3.925,2517,5.321,2518,3.925,2519,3.925,2520,5.321,2521,3.925,2522,3.925,2523,3.925,2524,3.925,2525,3.925,2526,3.925,2527,3.925]],["title/classes/UserDefinedMonitorTemplate.html",[143,0.089,704,1.654]],["body/classes/UserDefinedMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.756,705,1.162,706,1.162,707,1.162,708,1.162,709,1.286,710,1.162,711,1.162,2528,2.671,2529,2.671,2530,2.671,2531,2.671,2532,2.671,2533,2.671,2534,2.671,2535,2.671]],["title/injectables/ValidationService.html",[0,1.738,391,2.316]],["body/injectables/ValidationService.html",[0,2.362,1,3.068,2,2.289,3,0.143,4,0.125,5,0.09,8,0.257,9,0.735,20,0.382,27,1.258,42,1.113,45,2.486,46,0.367,48,0.932,49,0.017,50,0.63,51,0.363,52,0.932,57,0.456,58,1.255,72,1.635,95,2.909,105,3.998,111,1.239,112,1.075,116,1.787,123,0.783,124,0.434,129,2.909,130,1.486,131,1.718,140,2.289,141,1.909,142,0.143,143,0.088,145,2.334,147,1.486,152,1.203,156,1.47,164,3.998,176,1.575,193,2.765,214,4.461,245,0.008,246,0.011,247,0.008,389,2.664,391,3.147,402,2.657,440,2.289,441,2.021,523,0.562,524,1.092,556,2.765,558,1.298,576,1.165,620,2.247,720,1.809,736,2.657,773,3.376,787,4.712,790,1.909,825,2.289,1020,3.245,1021,5.49,1022,3.245,1038,5.49,1389,4.461,1450,3.376,1545,2.909,1659,3.653,1698,3.245,2200,3.245,2454,4.461,2458,4.461,2461,4.461,2468,4.461,2536,2.909,2537,5.901,2538,5.901,2539,5.901,2540,6.354,2541,5.901,2542,5.901,2543,5.901,2544,5.901,2545,5.901,2546,5.901,2547,6.883,2548,5.164,2549,5.164,2550,3.757,2551,5.164,2552,5.901,2553,3.757,2554,7.182,2555,3.757,2556,3.757,2557,3.757,2558,5.164,2559,5.164,2560,3.757,2561,5.164,2562,5.164,2563,6.354,2564,3.757,2565,3.757,2566,3.757,2567,3.757,2568,5.164,2569,5.164,2570,5.164,2571,5.164,2572,5.164,2573,5.164,2574,5.164,2575,3.757,2576,5.901,2577,3.757,2578,3.757,2579,3.757,2580,3.757,2581,3.757,2582,2.909,2583,3.757,2584,3.245,2585,2.909,2586,4.461,2587,2.909,2588,2.657,2589,3.245,2590,3.757,2591,5.164,2592,5.164,2593,3.757,2594,3.757,2595,3.757,2596,3.757,2597,3.757,2598,3.757,2599,3.757,2600,6.354,2601,5.901,2602,3.757,2603,5.164,2604,3.757,2605,3.757,2606,5.901,2607,6.354,2608,3.757,2609,3.757,2610,5.164,2611,3.757,2612,3.757,2613,3.757,2614,5.901,2615,5.164,2616,3.757,2617,5.901,2618,3.757,2619,3.757,2620,3.757,2621,3.757,2622,3.757,2623,3.757,2624,3.757,2625,3.757,2626,3.757,2627,6.354,2628,3.757,2629,3.757]],["title/classes/WriteInFileMonitorTemplate.html",[143,0.089,705,1.654]],["body/classes/WriteInFileMonitorTemplate.html",[3,0.101,4,0.089,5,0.116,8,0.183,20,0.298,27,1.523,46,0.326,49,0.017,51,0.382,57,0.459,63,2.402,73,1.756,80,2.723,108,1.958,116,1.574,142,0.27,143,0.157,152,1.452,156,0.961,174,1.674,176,1.789,193,2.359,225,1.162,245,0.006,246,0.008,247,0.006,277,1.437,283,2.539,285,1.525,299,0.71,345,0.326,498,1.009,523,1.022,558,2.397,576,0.797,598,1.162,599,1.108,600,3.019,601,3.425,602,3.425,603,3.425,604,3.425,605,3.425,606,3.425,607,3.425,616,1.162,617,1.846,618,2.48,619,1.756,620,1.756,621,1.674,622,1.846,623,1.846,624,1.846,625,1.846,626,1.846,627,1.846,628,2.248,629,2.8,630,1.846,631,1.756,632,1.222,633,1.846,634,1.846,635,1.458,636,1.846,637,1.846,638,1.756,639,1.108,640,1.597,641,1.674,642,1.674,643,1.756,644,1.846,645,1.756,646,1.222,647,1.846,648,1.162,649,1.222,650,1.846,651,1.222,652,2.225,653,1.222,654,1.756,655,1.222,656,1.057,657,2.145,658,1.286,659,1.286,660,2.343,661,2.343,662,2.343,663,2.343,664,1.286,665,1.286,666,1.286,667,1.222,668,1.944,669,1.286,670,1.286,671,2.343,672,2.343,673,2.343,674,2.343,675,1.286,676,1.286,677,1.286,678,1.286,679,1.286,680,1.286,681,1.286,682,1.108,683,1.162,684,3.305,685,2.611,686,3.152,687,3.152,688,3.386,689,3.152,690,3.152,691,2.611,692,2.994,693,2.611,694,3.152,695,2.611,696,3.386,697,2.359,698,2.611,699,2.611,700,2.611,701,2.994,702,2.262,703,2.48,704,1.162,705,1.756,706,1.162,707,1.162,708,1.162,709,1.286,710,1.162,711,1.162,2630,2.671,2631,2.671,2632,2.671,2633,2.671,2634,2.671,2635,2.671,2636,2.671,2637,2.671]],["title/coverage.html",[2638,4.497]],["body/coverage.html",[0,3.116,1,1.581,5,0.087,6,2.814,7,3.139,45,1.312,49,0.017,51,0.192,56,1.041,72,1.151,130,1.437,136,2.376,137,2.57,138,2.214,140,2.214,143,0.178,245,0.008,246,0.011,247,0.008,248,0.263,249,0.718,254,1.578,255,3.139,271,2.076,304,0.718,307,0.718,308,1.088,310,0.718,311,1.041,313,0.718,316,0.718,318,0.718,321,0.75,323,0.718,324,0.718,327,0.718,330,0.75,332,0.75,334,0.718,336,0.718,338,0.718,340,0.718,341,1.088,342,0.718,343,1.088,344,0.718,345,0.615,346,0.718,347,1.088,348,0.718,349,0.718,350,1.088,351,0.718,352,0.75,353,0.718,355,0.718,356,0.718,358,0.718,360,0.718,362,0.783,364,0.718,381,2.376,382,2.376,383,2.376,384,2.376,385,2.376,386,2.376,389,1.373,390,2.076,391,2.214,398,2.814,399,2.57,438,2.814,442,2.814,445,2.814,447,3.57,448,2.814,450,3.139,452,2.814,454,2.814,458,3.139,460,3.139,461,2.814,468,2.814,471,2.814,479,2.814,481,2.814,482,2.814,484,3.309,486,3.551,488,2.814,497,2.814,499,3.139,514,2.57,515,3.139,521,3.139,522,3.139,573,2.57,576,1.601,589,3.139,590,3.139,598,1.581,599,3.138,600,1.581,616,1.581,639,1.507,641,1.507,642,1.507,645,1.581,654,3.22,682,1.507,683,1.581,704,1.581,705,1.581,706,1.581,707,1.581,708,1.581,710,1.581,711,1.581,712,2.825,713,3.139,714,3.139,743,2.57,744,3.139,755,3.139,771,3.139,772,4.489,881,3.139,912,3.908,913,3.139,941,3.139,953,2.715,982,4.101,1050,3.139,1171,3.139,1172,4.36,1220,4.36,1231,3.139,1232,3.908,1247,3.139,1248,3.908,1268,3.139,1343,3.138,1344,3.139,1467,3.139,1474,1.847,1537,2.814,1663,3.139,1765,3.758,1788,3.139,1834,2.814,1835,2.814,2055,3.139,2060,3.139,2061,3.139,2067,3.139,2068,3.139,2079,3.139,2133,3.139,2141,2.814,2151,3.139,2257,3.139,2293,2.814,2296,3.139,2368,4.36,2369,3.139,2502,3.139,2536,4.489,2582,2.814,2585,2.814,2588,2.57,2638,3.139,2639,3.634,2640,3.634,2641,3.634,2642,5.047,2643,4.489,2644,3.139,2645,7.858,2646,3.139,2647,7.325,2648,3.139,2649,5.047,2650,6.265,2651,5.047,2652,5.047,2653,5.798,2654,3.139,2655,3.139,2656,3.634,2657,7.401,2658,3.139,2659,5.047,2660,5.41,2661,3.139,2662,3.139,2663,5.047,2664,5.047,2665,3.634,2666,3.634,2667,3.634,2668,3.634,2669,3.634,2670,3.634,2671,5.047,2672,3.634,2673,3.634,2674,3.634,2675,5.047,2676,5.047,2677,3.634,2678,3.634,2679,3.634,2680,3.634,2681,3.634,2682,3.634,2683,3.634,2684,3.634,2685,3.634,2686,3.634,2687,3.634,2688,3.634,2689,3.139,2690,4.36,2691,3.139,2692,4.36,2693,3.139,2694,3.139,2695,3.634]],["title/dependencies.html",[371,2.992,2696,3.166]],["body/dependencies.html",[5,0.121,49,0.017,123,0.551,124,0.583,183,4.433,245,0.011,246,0.013,247,0.011,248,0.168,254,1.042,279,5.276,280,3.91,311,1.042,371,3.302,373,4.098,402,4.433,403,4.098,407,5.414,408,4.791,409,4.363,411,3.572,416,3.91,419,5.414,420,4.342,422,4.363,423,5.414,425,3.91,427,3.819,428,3.91,430,4.363,431,4.363,435,4.363,490,4.363,491,4.363,492,4.363,512,4.363,592,5.414,969,3.077,970,3.572,974,4.852,976,4.363,1037,4.363,2099,5.414,2338,4.363,2584,5.887,2587,3.91,2588,3.572,2697,5.05,2698,5.05,2699,7.65,2700,5.05,2701,5.05,2702,5.05,2703,5.05,2704,5.05,2705,5.05,2706,5.05,2707,5.414,2708,6.267,2709,5.05,2710,5.05,2711,5.05,2712,5.05,2713,6.267,2714,5.05,2715,6.267,2716,5.05,2717,5.05,2718,6.267,2719,5.05,2720,5.05,2721,5.05,2722,5.05,2723,5.05,2724,6.815,2725,5.05,2726,5.05,2727,5.05,2728,6.267,2729,5.05,2730,5.05,2731,5.05,2732,5.05,2733,5.05,2734,5.05,2735,5.05,2736,5.05,2737,5.05,2738,5.05,2739,5.05,2740,6.267,2741,5.05,2742,5.05,2743,5.05,2744,5.05,2745,5.05,2746,5.05,2747,5.05,2748,5.05,2749,5.05,2750,6.267,2751,5.05,2752,5.05,2753,5.05,2754,5.05,2755,5.05,2756,5.05,2757,5.05,2758,5.05,2759,5.05,2760,5.05,2761,5.05,2762,5.05]],["title/miscellaneous/functions.html",[2763,2.239,2764,3.954]],["body/miscellaneous/functions.html",[8,0.371,48,1.387,49,0.017,50,0.937,51,0.385,52,1.387,57,0.371,63,2.472,64,5.065,140,3.986,245,0.011,246,0.014,247,0.011,277,0.978,283,2.914,299,0.911,345,0.66,365,1.611,420,3.986,599,2.246,628,2.712,639,2.246,646,2.477,647,2.477,648,2.357,649,2.477,650,2.477,651,2.477,652,2.992,653,2.477,655,2.477,667,2.477,720,2.608,741,5.652,1474,3.325,1537,5.065,1556,5.652,1727,4.679,1834,5.442,1835,5.065,2141,5.442,2582,5.065,2643,4.194,2644,6.072,2646,6.072,2654,4.679,2655,5.652,2658,5.652,2660,4.194,2661,5.652,2763,3.831,2764,4.679,2765,6.56,2766,5.652,2767,5.416,2768,5.652,2769,5.416,2770,5.416,2771,5.416,2772,5.416,2773,5.416,2774,5.416]],["title/index.html",[8,0.217,1666,2.735,2775,3.166]],["body/index.html",[4,0.188,49,0.014,50,0.689,71,6.182,72,1.789,105,4.374,138,4.088,245,0.012,246,0.014,247,0.012,248,0.238,258,1.218,328,1.384,393,3.694,408,4.679,427,4.72,504,4.88,557,4.374,731,6.395,987,4.88,1035,4.88,1258,4.88,1283,4.88,1746,4.88,2013,4.88,2241,6.531,2776,5.649,2777,5.649,2778,7.156,2779,5.649,2780,5.649,2781,5.649,2782,5.649,2783,5.649,2784,5.649,2785,5.649,2786,5.649,2787,7.156,2788,5.649,2789,7.559,2790,5.649,2791,5.649,2792,5.649,2793,5.649,2794,4.88,2795,6.709,2796,6.709,2797,7.403,2798,6.709,2799,6.709,2800,5.649,2801,5.649,2802,5.649,2803,7.156,2804,5.649,2805,5.649,2806,5.649,2807,5.649]],["title/modules.html",[370,3.172]],["body/modules.html",[49,0.015,245,0.013,246,0.015,247,0.013,369,4.376,370,3.77,387,4.045,388,4.045,403,4.625,2707,6.111,2808,7.074,2809,7.429,2810,6.187,2811,6.187]],["title/overview.html",[2812,4.497]],["body/overview.html",[1,2.812,2,2.745,45,2.334,49,0.017,103,2.745,174,1.104,245,0.009,246,0.012,247,0.009,249,1.457,250,0.971,271,3.691,297,0.929,304,1.276,307,1.276,310,1.276,313,1.276,316,1.276,318,1.276,321,1.334,323,1.276,324,1.276,327,1.276,330,1.334,332,1.334,334,1.276,336,1.276,338,1.276,340,1.276,342,1.276,344,1.276,346,1.276,348,1.276,349,1.276,351,1.276,352,1.334,353,1.276,355,1.276,356,1.457,358,1.457,360,1.276,364,1.276,368,2.745,369,5.785,370,2.745,371,2.945,372,3.488,373,2.945,374,3.186,375,3.186,376,3.891,377,3.891,378,3.891,379,3.891,380,3.891,381,4.226,382,4.226,383,4.226,384,4.226,385,4.226,386,4.226,387,4.226,388,4.942,389,2.442,390,3.691,391,3.938,392,4.513,393,2.945,493,2.423,498,1.702,576,0.889,640,1.782,643,2.536,682,1.868,931,3.891,2290,3.891,2291,3.891,2292,3.891,2812,3.891,2813,4.504]],["title/routes.html",[511,4.031]],["body/routes.html",[49,0.015,245,0.013,246,0.015,247,0.013,511,4.875]],["title/miscellaneous/variables.html",[2763,2.239,2814,3.954]],["body/miscellaneous/variables.html",[5,0.127,8,0.362,46,0.252,49,0.017,51,0.403,63,2.435,73,2.3,108,2.328,111,1.331,112,1.154,116,1.241,174,1.296,176,1.72,245,0.011,246,0.013,247,0.011,283,2.191,285,1.997,558,1.826,576,1.273,599,2.191,616,2.804,617,2.947,618,2.947,619,2.804,620,2.3,621,2.191,622,2.947,623,2.417,624,2.947,625,2.947,626,2.417,627,2.947,628,2.191,629,2.417,630,2.947,631,2.3,632,2.417,633,2.947,634,2.417,635,1.909,636,2.417,637,2.947,638,2.3,639,2.672,640,2.091,641,2.191,642,2.191,643,2.3,644,2.417,645,2.3,720,3.486,2536,4.092,2585,4.99,2586,5.568,2587,4.092,2588,4.559,2589,4.566,2643,4.092,2648,5.568,2660,4.092,2662,5.568,2689,4.566,2690,6.254,2691,4.566,2692,4.566,2693,5.568,2694,5.568,2763,3.738,2765,4.566,2766,4.566,2768,5.568,2794,5.568,2814,4.566,2815,6.445,2816,6.445,2817,5.285,2818,5.285,2819,5.285,2820,5.285,2821,5.285]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":576,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.0.44",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["0.0\\nin\\n",{"_index":700,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["0.1.1",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["0.1.27",{"_index":2760,"title":{},"body":{"dependencies.html":{}}}],["0.25.5",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":2525,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["0.5",{"_index":2360,"title":{},"body":{"components/TabsContainer.html":{}}}],["0.5.9",{"_index":2723,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":2489,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["0/1",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":2415,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["000080",{"_index":2412,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["0000ff",{"_index":2424,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["008000",{"_index":2423,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["008080",{"_index":2410,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["00ff00",{"_index":2419,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["00ffff",{"_index":2414,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["0px",{"_index":968,"title":{},"body":{"components/MainFrameComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{}}}],["1",{"_index":174,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1)\\n",{"_index":691,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["1.0.0",{"_index":2718,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":2728,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2729,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["1.1.20191001",{"_index":519,"title":{},"body":{"classes/AppVersion.html":{}}}],["1.15.0",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["1.2.8",{"_index":2709,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1216,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["1.3.0",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["1.3.8",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["1.5.9",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["1.6.3",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["1.cpn",{"_index":1747,"title":{},"body":{"injectables/ProjectService.html":{}}}],["1/1",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":2687,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2628,"title":{},"body":{"injectables/ValidationService.html":{}}}],["10/32",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":953,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1450,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"injectables/ValidationService.html":{}}}],["10px",{"_index":1464,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["12px",{"_index":2350,"title":{},"body":{"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["13",{"_index":563,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/TextEditRowComponent.html":{}}}],["14",{"_index":2813,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":2289,"title":{},"body":{"components/TabComponent.html":{},"components/TreeNodeComponent.html":{}}}],["1px",{"_index":1645,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["2",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2719,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2716,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2725,"title":{},"body":{"dependencies.html":{}}}],["2.cpn",{"_index":1748,"title":{},"body":{"injectables/ProjectService.html":{}}}],["2/47",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":941,"title":{},"body":{"components/MainFrameComponent.html":{},"coverage.html":{}}}],["20px",{"_index":2345,"title":{},"body":{"components/TabsContainer.html":{}}}],["23",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["234",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["24",{"_index":1455,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["242",{"_index":2522,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["25",{"_index":934,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["250",{"_index":2523,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["2px",{"_index":972,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["3",{"_index":640,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.3",{"_index":2727,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["3/37",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":931,"title":{},"body":{"components/MainFrameComponent.html":{},"overview.html":{}}}],["30px",{"_index":2288,"title":{},"body":{"components/TabComponent.html":{}}}],["31",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["32px",{"_index":1041,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["35/147",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":966,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["4",{"_index":641,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["4.0.2",{"_index":2744,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["41/93",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":2488,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["4px",{"_index":2052,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{},"components/TabsContainer.html":{}}}],["5",{"_index":642,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["5.5.0",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2181,"title":{},"body":{"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{}}}],["55",{"_index":929,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["5pt",{"_index":1903,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["5px",{"_index":1647,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{}}}],["6",{"_index":643,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.3.3",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1452,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["6fbbff",{"_index":2356,"title":{},"body":{"components/TabsContainer.html":{}}}],["6px",{"_index":2287,"title":{},"body":{"components/TabComponent.html":{}}}],["7",{"_index":644,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["7.0.6",{"_index":2779,"title":{},"body":{"index.html":{}}}],["7.2.15",{"_index":2698,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":932,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["7px",{"_index":1652,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["8",{"_index":645,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":2721,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["800000",{"_index":2402,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["800080",{"_index":2422,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["808000",{"_index":2417,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["808080",{"_index":2420,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["80px",{"_index":2051,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["8859",{"_index":173,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["9/44",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":2366,"title":{},"body":{"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["_",{"_index":692,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SaveprojectButtonComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["_bold",{"_index":2469,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_colour",{"_index":2455,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_filled",{"_index":2457,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_id",{"_index":1888,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["_idref",{"_index":1589,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["_name",{"_index":2477,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_pageinstanceidref",{"_index":1591,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["_pattern",{"_index":2456,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_portsock",{"_index":2478,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_subpage",{"_index":2479,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_text",{"_index":2467,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_thick",{"_index":2459,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_type",{"_index":2460,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_x",{"_index":2462,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["_y",{"_index":2464,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["a.tablebutton",{"_index":1656,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["absolute",{"_index":961,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectTreeComponent.html":{},"components/TabsContainer.html":{}}}],["access",{"_index":1667,"title":{},"body":{"injectables/ProjectService.html":{}}}],["access/cpn",{"_index":97,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["accesscpnservice",{"_index":1,"title":{"injectables/AccessCpnService.html":{}},"body":{"injectables/AccessCpnService.html":{},"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["accessors",{"_index":2083,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["actions/openproject",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/saveproject",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["active",{"_index":2262,"title":{},"body":{"components/TabComponent.html":{}}}],["actual_component",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["add",{"_index":880,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["addmltab",{"_index":781,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["addmltab(tabarray",{"_index":792,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["addnode",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addnode(parent",{"_index":2769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addresslist",{"_index":584,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["addresslist.push",{"_index":585,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["addresslist.push('http://95.161.178.222:42020",{"_index":587,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["addresslist.push('http://localhost:8080",{"_index":586,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["addstep",{"_index":2223,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["addtab",{"_index":782,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TabsContainer.html":{}}}],["addtab(tab",{"_index":2310,"title":{},"body":{"components/TabsContainer.html":{}}}],["addtab(tabarray",{"_index":795,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["addtime",{"_index":2229,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["agm",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["agmjsonviewermodule",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["alert",{"_index":1791,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["align",{"_index":2251,"title":{},"body":{"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["allow",{"_index":1734,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["alphanumeric",{"_index":2130,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["amount",{"_index":2231,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["angular",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"components/MainFrameComponent.html":{},"modules/TabModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectConsoleComponent.html":{},"modules/TabModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":126,"title":{},"body":{"injectables/AccessCpnService.html":{},"modules/AppModule.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["angular/compiler",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":124,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":2702,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angularsplitmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["animated",{"_index":2240,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["api",{"_index":98,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/init",{"_index":181,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/bindings",{"_index":235,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/init",{"_index":211,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/marks",{"_index":223,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/state",{"_index":237,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/step",{"_index":226,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/step_fast_forward",{"_index":234,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/step_with_binding",{"_index":233,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/step_with_binding/{transid",{"_index":232,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/sim/transitions/enabled",{"_index":224,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["api/v2/cpn/xml/export",{"_index":242,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["app",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"index.html":{}}}],["app.component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["app.version",{"_index":1010,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["appcomponent",{"_index":249,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["application/json",{"_index":2147,"title":{},"body":{"injectables/SettingsService.html":{}}}],["application/xml",{"_index":1737,"title":{},"body":{"injectables/ProjectService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["applicationsettingscomponent",{"_index":304,"title":{"components/ApplicationSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":369,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":497,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":387,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":527,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/SettingsService.html":{}}}],["appsettings[item",{"_index":588,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["appsettingskeys",{"_index":528,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["appversion",{"_index":514,"title":{"classes/AppVersion.html":{}},"body":{"classes/AppVersion.html":{},"components/MainToolbarComponent.html":{},"coverage.html":{}}}],["appversion.buildversion",{"_index":1008,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["aqua",{"_index":2413,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["arguments",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["arialabelledby",{"_index":2109,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["array",{"_index":1556,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"miscellaneous/functions.html":{}}}],["arraytonode",{"_index":1835,"title":{},"body":{"components/ProjectTreeComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["arraytonode(array",{"_index":2771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arraytonode(decllist",{"_index":1896,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["artifacts",{"_index":2790,"title":{},"body":{"index.html":{}}}],["assets/app/default_settings.json",{"_index":2148,"title":{},"body":{"injectables/SettingsService.html":{}}}],["assets/cpn",{"_index":1757,"title":{},"body":{"injectables/ProjectService.html":{}}}],["auto",{"_index":1657,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["automatically",{"_index":2785,"title":{},"body":{"index.html":{}}}],["aux",{"_index":2561,"title":{},"body":{"injectables/ValidationService.html":{}}}],["available",{"_index":2811,"title":{},"body":{"modules.html":{}}}],["availablenodeids",{"_index":1615,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["availablenodeids.push(p._id",{"_index":1617,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["availablenodeids.push(t._id",{"_index":1620,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["average",{"_index":1285,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["avg",{"_index":1310,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["avoid",{"_index":1981,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["b",{"_index":741,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"miscellaneous/functions.html":{}}}],["background",{"_index":979,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["backupchangelist",{"_index":2617,"title":{},"body":{"injectables/ValidationService.html":{}}}],["backupchangelist.length",{"_index":2620,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bar",{"_index":2347,"title":{},"body":{"components/TabsContainer.html":{}}}],["base",{"_index":2397,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["basemodel_id1008016.cpn",{"_index":1739,"title":{},"body":{"injectables/ProjectService.html":{}}}],["basic",{"_index":2110,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["basis",{"_index":971,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["beautifier.js",{"_index":135,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["beautifier/xml",{"_index":134,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["bendpoint",{"_index":2563,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bendpoint.0._id",{"_index":2568,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bendpoint.1._id",{"_index":2569,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bendpoint.2._id",{"_index":2570,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bendpoint.3._id",{"_index":2571,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bendpoint.4._id",{"_index":2572,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bendpoint.5._id",{"_index":2573,"title":{},"body":{"injectables/ValidationService.html":{}}}],["bendpoint.6._id",{"_index":2574,"title":{},"body":{"injectables/ValidationService.html":{}}}],["beta.8",{"_index":2720,"title":{},"body":{"dependencies.html":{}}}],["bind_id",{"_index":230,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["bindelem",{"_index":686,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["bindelem\\nend",{"_index":694,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["bindid",{"_index":68,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["binding",{"_index":1277,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"components/SimulationPanelComponent.html":{}}}],["bindings",{"_index":77,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["black",{"_index":2367,"title":{},"body":{"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["blob",{"_index":2124,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["blob([chararray",{"_index":2125,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["block",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["blockcpnelement",{"_index":1883,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["blockheadercomponent",{"_index":307,"title":{"components/BlockHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blocks",{"_index":1860,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["blockstoexpand",{"_index":1859,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["blue",{"_index":722,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"components/TextEditRowComponent.html":{}}}],["bold",{"_index":1654,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["boolean",{"_index":80,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["boolvalues",{"_index":1471,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["bootstrap",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"components/SaveprojectButtonComponent.html":{},"modules/TabModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"components/SaveprojectButtonComponent.html":{},"dependencies.html":{}}}],["border",{"_index":967,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["bordered",{"_index":2376,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["bottom",{"_index":965,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["box",{"_index":1659,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"injectables/ValidationService.html":{}}}],["bp",{"_index":622,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":635,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["breakpoint",{"_index":623,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["breakpointmonitortemplate",{"_index":598,"title":{"classes/BreakpointMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["brown",{"_index":732,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["browse",{"_index":2809,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"pipes/SafeHtmlPipe.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":505,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["browser/src/browser",{"_index":2581,"title":{},"body":{"injectables/ValidationService.html":{}}}],["browseranimationsmodule",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwindow",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":2053,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["build",{"_index":2789,"title":{},"body":{"index.html":{}}}],["buildversion",{"_index":518,"title":{},"body":{"classes/AppVersion.html":{}}}],["button",{"_index":1249,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/SaveprojectButtonComponent.html":{}}}],["button'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["button.component",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":1251,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/SaveprojectButtonComponent.html":{}}}],["button.component.scss",{"_index":1250,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/SaveprojectButtonComponent.html":{}}}],["button.component.ts",{"_index":1248,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/SaveprojectButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:14",{"_index":1254,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["button.component.ts:17",{"_index":1256,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/SaveprojectButtonComponent.html":{}}}],["button.component.ts:19",{"_index":2086,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["button.component.ts:26",{"_index":2088,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["button.component.ts:29",{"_index":2090,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["button.component.ts:60",{"_index":2097,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["button.component.ts:64",{"_index":2093,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["button.component.ts:9",{"_index":1253,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["button.enabled",{"_index":2247,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["button/openproject",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"components/OpenprojectButtonComponent.html":{},"coverage.html":{}}}],["button/saveproject",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"components/SaveprojectButtonComponent.html":{},"coverage.html":{}}}],["bye",{"_index":1899,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["c0c0c0",{"_index":2408,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["c1",{"_index":745,"title":{},"body":{"classes/Constants.html":{}}}],["c9c9c9",{"_index":2285,"title":{},"body":{"components/TabComponent.html":{},"components/TabsContainer.html":{}}}],["calc(100vh",{"_index":2344,"title":{},"body":{"components/TabsContainer.html":{}}}],["cancel",{"_index":2132,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["caret",{"_index":2519,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["case",{"_index":657,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["catch",{"_index":1717,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["cell",{"_index":2485,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["center",{"_index":2349,"title":{},"body":{"components/TabsContainer.html":{}}}],["centered",{"_index":2111,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["centersplitpanesize",{"_index":917,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["change",{"_index":2013,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{},"index.html":{}}}],["changed",{"_index":2378,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["changedetection",{"_index":943,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":944,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["changefilter",{"_index":2037,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["changefilter(value",{"_index":2041,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["changename",{"_index":783,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["changename(id",{"_index":797,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["changes",{"_index":1432,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["changeshtml",{"_index":1349,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["changespath",{"_index":2624,"title":{},"body":{"injectables/ValidationService.html":{}}}],["changesscrollpane",{"_index":1445,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["changesscrollpane.scrollheight",{"_index":1448,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["changesscrollpane.scrolltop",{"_index":1447,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["characters",{"_index":2131,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["chararray",{"_index":2094,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["charset=iso",{"_index":2126,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["check",{"_index":2806,"title":{},"body":{"index.html":{}}}],["checkvalidation",{"_index":2547,"title":{},"body":{"injectables/ValidationService.html":{}}}],["checkvalidationbusy",{"_index":2537,"title":{},"body":{"injectables/ValidationService.html":{}}}],["checkvalidationscheduled",{"_index":2538,"title":{},"body":{"injectables/ValidationService.html":{}}}],["choose",{"_index":2237,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["ciavg",{"_index":1311,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["circular",{"_index":2722,"title":{},"body":{"dependencies.html":{}}}],["class",{"_index":143,"title":{"classes/AppPage.html":{},"classes/AppVersion.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["class.hidden",{"_index":2273,"title":{},"body":{"components/TabComponent.html":{}}}],["classes",{"_index":498,"title":{},"body":{"classes/AppPage.html":{},"classes/AppVersion.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"overview.html":{}}}],["classname",{"_index":1367,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["clear",{"_index":1456,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/TabsContainer.html":{}}}],["cli",{"_index":2778,"title":{},"body":{"index.html":{}}}],["click",{"_index":2235,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["cloneobject",{"_index":140,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ProjectTreeComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cloneobject(object",{"_index":2772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cloneobject(projectdata",{"_index":2626,"title":{},"body":{"injectables/ValidationService.html":{}}}],["cloneobject(this.modelservice.getprojectdata",{"_index":2609,"title":{},"body":{"injectables/ValidationService.html":{}}}],["cloneobject(this.selected",{"_index":1841,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["close",{"_index":2054,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["cluster_appmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tabmodule",{"_index":2290,"title":{},"body":{"modules/TabModule.html":{},"overview.html":{}}}],["cluster_tabmodule_declarations",{"_index":2291,"title":{},"body":{"modules/TabModule.html":{},"overview.html":{}}}],["cluster_tabmodule_exports",{"_index":2292,"title":{},"body":{"modules/TabModule.html":{},"overview.html":{}}}],["code",{"_index":557,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/MlEditorComponent.html":{},"index.html":{}}}],["collection",{"_index":618,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":980,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["color.cpn",{"_index":1743,"title":{},"body":{"injectables/ProjectService.html":{}}}],["color.tolowercase",{"_index":2430,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["color2name",{"_index":2373,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["color2name(color",{"_index":2389,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["colordeclarations",{"_index":715,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["colordeclarationspipe",{"_index":381,"title":{"pipes/ColorDeclarationsPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ColorDeclarationsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["colornames",{"_index":2372,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["colors",{"_index":719,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"components/TextEditRowComponent.html":{}}}],["colorselector",{"_index":2493,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["colorset",{"_index":651,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["colset",{"_index":723,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["colset.cpn",{"_index":1753,"title":{},"body":{"injectables/ProjectService.html":{}}}],["colset\\s+(?\\w+)\\s*=\\s*(?\\w+)/g",{"_index":1965,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["colset\\s+(?\\w+)\\s*=\\s*(?string)\\s*(?with)*\\s*(?\\s+\\.\\.\\s+)*\\s*(?and)*\\s*(?timed)*/g",{"_index":1969,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["colset\\s+(?\\w+)\\s*=\\s*(?unit)\\s*(?with)*\\s*(?\\w+)*\\s*(?timed)*/g",{"_index":1967,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["colsettype",{"_index":1954,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["column",{"_index":2342,"title":{},"body":{"components/TabsContainer.html":{}}}],["comments",{"_index":1940,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["common",{"_index":1664,"title":{},"body":{"injectables/ProjectService.html":{}}}],["common/block",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["common/constants",{"_index":2047,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["common/default",{"_index":2142,"title":{},"body":{"injectables/SettingsService.html":{}}}],["common/message",{"_index":131,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{}}}],["common/monitors",{"_index":1538,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["common/utils",{"_index":141,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"injectables/ValidationService.html":{}}}],["commonmodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{}}}],["compat",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["complex_verify",{"_index":184,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["complexverify",{"_index":95,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/MainToolbarComponent.html":{},"injectables/ValidationService.html":{}}}],["component",{"_index":248,"title":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["component.module",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["component.module.ts",{"_index":2294,"title":{},"body":{"modules/TabModule.html":{}}}],["component_template",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["componentfactoryresolver",{"_index":819,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["components",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"overview.html":{}}}],["confidence",{"_index":1287,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["config",{"_index":2221,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["config.max_step",{"_index":2226,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["config.max_time",{"_index":2228,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["config.steps",{"_index":2224,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["config.time_step",{"_index":2230,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["console",{"_index":1346,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{}}}],["console'},{'name",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["console.component",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["console.component.html",{"_index":1348,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.scss",{"_index":1347,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts",{"_index":1344,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"coverage.html":{}}}],["console.component.ts:134",{"_index":1368,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:147",{"_index":1363,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:15",{"_index":1381,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:151",{"_index":1370,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:155",{"_index":1372,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:159",{"_index":1365,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:17",{"_index":1379,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:173",{"_index":1375,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:18",{"_index":1378,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:19",{"_index":1377,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:20",{"_index":1380,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:22",{"_index":1382,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:23",{"_index":1361,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.component.ts:29",{"_index":1373,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.error('accesscpnservice",{"_index":197,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["console.error('get",{"_index":1763,"title":{},"body":{"injectables/ProjectService.html":{}}}],["console.error('onparse",{"_index":1995,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["console.error('onupdate",{"_index":1956,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["console.error('saveediteddata",{"_index":580,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["console.error(this.constructor.name",{"_index":2150,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log('accesscpnservice",{"_index":148,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["console.log('app",{"_index":2102,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["console.log('appcomponent.oncontextmenu",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('checkvalidation",{"_index":2605,"title":{},"body":{"injectables/ValidationService.html":{}}}],["console.log('currenttabchange",{"_index":852,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["console.log('deletetab",{"_index":853,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["console.log('editor",{"_index":843,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["console.log('end",{"_index":2629,"title":{},"body":{"injectables/ValidationService.html":{}}}],["console.log('errordata",{"_index":1404,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["console.log('file",{"_index":1712,"title":{},"body":{"injectables/ProjectService.html":{}}}],["console.log('generateusersession",{"_index":165,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["console.log('get",{"_index":1760,"title":{},"body":{"injectables/ProjectService.html":{}}}],["console.log('gettabbyid",{"_index":2337,"title":{},"body":{"components/TabsContainer.html":{}}}],["console.log('keydown",{"_index":2432,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["console.log('mainframecomponent",{"_index":950,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["console.log('message.declaration_changed",{"_index":1600,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["console.log('ngdocheck",{"_index":2015,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["console.log('no",{"_index":1261,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["console.log('oncreatenode",{"_index":1577,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["console.log('ondeclarationdblclick",{"_index":1607,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["console.log('ondeletenode",{"_index":1622,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["console.log('onkeyup",{"_index":1201,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["console.log('onloadmonitor",{"_index":1571,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["console.log('onnewnode",{"_index":1613,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["console.log('onparse",{"_index":1971,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["console.log('onupdate",{"_index":1933,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["console.log('openpage",{"_index":864,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["console.log('projectservice",{"_index":1700,"title":{},"body":{"injectables/ProjectService.html":{}}}],["console.log('regexpipe",{"_index":2059,"title":{},"body":{"pipes/RegexPipe.html":{}}}],["console.log('replacespacespipe.transform",{"_index":2066,"title":{},"body":{"pipes/ReplaceSpacesPipe.html":{}}}],["console.log('saveediteddata",{"_index":578,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/MlEditorComponent.html":{}}}],["console.log('selected",{"_index":1704,"title":{},"body":{"injectables/ProjectService.html":{}}}],["console.log('start",{"_index":2608,"title":{},"body":{"injectables/ValidationService.html":{}}}],["console.log('tabscontainer",{"_index":2326,"title":{},"body":{"components/TabsContainer.html":{}}}],["console.log('test",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('this.cpnelement.option",{"_index":1554,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["console.log('updateserveraddress",{"_index":583,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["console.log(`onparse",{"_index":1979,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["console.log(this.constructor.name",{"_index":556,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{}}}],["console/project",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectConsoleComponent.html":{},"coverage.html":{}}}],["consolesplitpanesize",{"_index":918,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["const",{"_index":156,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["constants",{"_index":743,"title":{"classes/Constants.html":{}},"body":{"classes/Constants.html":{},"components/ProjectTreeToolbarComponent.html":{},"coverage.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"injectables/ValidationService.html":{}}}],["constructor(electronservice",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(eventservice",{"_index":790,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{}}}],["constructor(http",{"_index":43,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/SettingsService.html":{}}}],["constructor(modal",{"_index":2084,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["constructor(modelservice",{"_index":1908,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["constructor(private",{"_index":144,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/TabComponent.html":{}}}],["constructor(projectservice",{"_index":995,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{}}}],["constructor(public",{"_index":1836,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["constructor(settings",{"_index":536,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["constructor(tabs",{"_index":2265,"title":{},"body":{"components/TabComponent.html":{}}}],["container",{"_index":959,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["container/tabs.container",{"_index":823,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{}}}],["container/tabs.container.ts",{"_index":2296,"title":{},"body":{"components/TabsContainer.html":{},"coverage.html":{}}}],["container/tabs.container.ts:10",{"_index":2308,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:11",{"_index":2309,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:13",{"_index":2322,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:14",{"_index":2324,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:16",{"_index":2323,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:18",{"_index":2311,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:22",{"_index":2321,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:36",{"_index":2318,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:42",{"_index":2319,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:54",{"_index":2317,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:65",{"_index":2314,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:70",{"_index":2315,"title":{},"body":{"components/TabsContainer.html":{}}}],["container/tabs.container.ts:74",{"_index":2312,"title":{},"body":{"components/TabsContainer.html":{}}}],["content",{"_index":634,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["contenteditable",{"_index":1209,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/TextEditRowComponent.html":{}}}],["contenteditable]:focus",{"_index":1206,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["context",{"_index":2693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextmenu",{"_index":1795,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["contextmenu(event",{"_index":1804,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["control",{"_index":1733,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["convert",{"_index":1727,"title":{},"body":{"injectables/ProjectService.html":{},"miscellaneous/functions.html":{}}}],["converting",{"_index":1688,"title":{},"body":{"injectables/ProjectService.html":{}}}],["core",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1400,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["count",{"_index":631,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["counttransitionoccurrencesmonitortemplate",{"_index":708,"title":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["courier",{"_index":1218,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["coverage",{"_index":2638,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpn",{"_index":163,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/TabsContainer.html":{}}}],["cpn.service",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{}}}],["cpn.service.ts",{"_index":7,"title":{},"body":{"injectables/AccessCpnService.html":{},"coverage.html":{}}}],["cpn.service.ts:13",{"_index":119,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:136",{"_index":107,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:14",{"_index":122,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:15",{"_index":114,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:155",{"_index":102,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:16",{"_index":115,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:163",{"_index":100,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:17",{"_index":120,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:18",{"_index":117,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:19",{"_index":113,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:20",{"_index":121,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:21",{"_index":118,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:216",{"_index":85,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:22",{"_index":47,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:243",{"_index":89,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:272",{"_index":60,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:296",{"_index":69,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:328",{"_index":55,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:35",{"_index":78,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:362",{"_index":76,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:381",{"_index":82,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:39",{"_index":84,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:404",{"_index":110,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:409",{"_index":79,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:416",{"_index":93,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:47",{"_index":81,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:59",{"_index":83,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:69",{"_index":70,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:78",{"_index":91,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn.service.ts:85",{"_index":96,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpn:transition",{"_index":2196,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["cpn_label",{"_index":1539,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["cpn_place",{"_index":1540,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["cpn_transition",{"_index":1541,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["cpnelement",{"_index":1175,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["cpnelement._id",{"_index":2470,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["cpnelement._typedescription",{"_index":1637,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["cpnelement.box._h",{"_index":2476,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["cpnelement.ellipse._h",{"_index":2466,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["cpnelement.posattr._x",{"_index":2463,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["cpnelement.posattr._y",{"_index":2465,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["cpnelement['subst",{"_index":2474,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["cpnelement[key",{"_index":1959,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["cpnet",{"_index":1792,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["cpnide",{"_index":2776,"title":{},"body":{"index.html":{}}}],["cpnjson",{"_index":99,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpnserverurl",{"_index":136,"title":{"classes/CpnServerUrl.html":{}},"body":{"injectables/AccessCpnService.html":{},"classes/CpnServerUrl.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["cpnserverurl.get",{"_index":180,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpntype",{"_index":1176,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["cpnxml",{"_index":170,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["cpnxml.tostring('iso",{"_index":172,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["create",{"_index":1229,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["created",{"_index":1701,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createnodeintent",{"_index":1472,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["createplace",{"_index":1221,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["createtransition",{"_index":1222,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["createwindow",{"_index":2644,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["crosshair",{"_index":1562,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["ctodc",{"_index":630,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":92,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["currentpageid",{"_index":1668,"title":{},"body":{"injectables/ProjectService.html":{}}}],["currentselectedelement",{"_index":1669,"title":{},"body":{"injectables/ProjectService.html":{}}}],["currenttabchange",{"_index":784,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TabsContainer.html":{}}}],["currenttabchange(event",{"_index":799,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["cursor",{"_index":2353,"title":{},"body":{"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["d.path",{"_index":2603,"title":{},"body":{"injectables/ValidationService.html":{}}}],["d7d7d7",{"_index":2283,"title":{},"body":{"components/TabComponent.html":{}}}],["darkorange",{"_index":725,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["data",{"_index":108,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"injectables/ProjectService.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["data.element",{"_index":2193,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["data.enabletrans",{"_index":218,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["data.issues",{"_index":192,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["data.issues[id",{"_index":202,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["data.success",{"_index":199,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["data.tokensandmark",{"_index":216,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["data.xml",{"_index":2120,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["datacollectionmonitortemplate",{"_index":683,"title":{"classes/DataCollectionMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["date",{"_index":1437,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["date().gettime",{"_index":164,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ProjectConsoleComponent.html":{},"injectables/ValidationService.html":{}}}],["dateformat",{"_index":2726,"title":{},"body":{"dependencies.html":{}}}],["datepipe",{"_index":1345,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["days",{"_index":1454,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["dblclick",{"_index":2426,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["dc",{"_index":617,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":1460,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["ddd",{"_index":2365,"title":{},"body":{"components/TabsContainer.html":{}}}],["declaration",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["declaration._name",{"_index":1642,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["declaration.changed",{"_index":1090,"title":{},"body":{"classes/Message.html":{}}}],["declaration.ml",{"_index":1612,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["declaration_changed",{"_index":1051,"title":{},"body":{"classes/Message.html":{}}}],["declarations",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{},"overview.html":{}}}],["declarations.pipe",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations.pipe.ts",{"_index":714,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"coverage.html":{}}}],["declarations.pipe.ts:22",{"_index":718,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["declarations.pipe.ts:6",{"_index":733,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["declarationtype",{"_index":1925,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["decllist",{"_index":1892,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["decllist.push(result.cpnelement",{"_index":1894,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["decorators",{"_index":813,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["deep",{"_index":974,"title":{},"body":{"components/MainFrameComponent.html":{},"components/TabsContainer.html":{},"dependencies.html":{}}}],["deepequal",{"_index":2585,"title":{},"body":{"injectables/ValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deepequalresult",{"_index":2610,"title":{},"body":{"injectables/ValidationService.html":{}}}],["default",{"_index":111,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CpnServerUrl.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["defaultinit",{"_index":601,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["defaultlogging",{"_index":602,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["defaultobserver",{"_index":603,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["defaultpredicate",{"_index":604,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["defaultstop",{"_index":605,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["defaulttimed",{"_index":606,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["defined",{"_index":46,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["defualt",{"_index":2199,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["delay",{"_index":2182,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["delete",{"_index":844,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{}}}],["deletetab",{"_index":785,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["deletetab(id",{"_index":801,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["deletetabbyid",{"_index":2301,"title":{},"body":{"components/TabsContainer.html":{}}}],["deletetabbyid(id",{"_index":2313,"title":{},"body":{"components/TabsContainer.html":{}}}],["dependencies",{"_index":371,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":64,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"miscellaneous/functions.html":{}}}],["details",{"_index":593,"title":{},"body":{"components/BlockHeaderComponent.html":{}}}],["details'},{'name",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["details.component",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.ts",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["details/project",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["dev",{"_index":2782,"title":{},"body":{"index.html":{}}}],["development",{"_index":2780,"title":{},"body":{"index.html":{}}}],["deviation",{"_index":1304,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["diagram",{"_index":1037,"title":{},"body":{"components/MainToolbarComponent.html":{},"dependencies.html":{}}}],["dif",{"_index":2622,"title":{},"body":{"injectables/ValidationService.html":{}}}],["diff",{"_index":2588,"title":{},"body":{"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["diff').diff",{"_index":2589,"title":{},"body":{"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["diff(this.lastprojectdata",{"_index":2612,"title":{},"body":{"injectables/ValidationService.html":{}}}],["differ",{"_index":1997,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["differences",{"_index":2554,"title":{},"body":{"injectables/ValidationService.html":{}}}],["differences.filter((d",{"_index":2602,"title":{},"body":{"injectables/ValidationService.html":{}}}],["differences.length",{"_index":2613,"title":{},"body":{"injectables/ValidationService.html":{}}}],["differs",{"_index":2000,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["direction",{"_index":2341,"title":{},"body":{"components/TabsContainer.html":{}}}],["directive",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["directives",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2788,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1283,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"index.html":{}}}],["disable",{"_index":1514,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["disable.tostring",{"_index":1632,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["disabled",{"_index":2306,"title":{},"body":{"components/TabsContainer.html":{}}}],["discretemodel_task1.cpn",{"_index":1740,"title":{},"body":{"injectables/ProjectService.html":{}}}],["display",{"_index":2280,"title":{},"body":{"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["dist",{"_index":2792,"title":{},"body":{"index.html":{}}}],["div",{"_index":1465,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["div.bordered",{"_index":2481,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["div.child",{"_index":2524,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["div.child.expanded",{"_index":2527,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["div.editablenode",{"_index":1646,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["div.tabs__tab",{"_index":2363,"title":{},"body":{"components/TabsContainer.html":{}}}],["div.value",{"_index":2490,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["div.valuename",{"_index":2484,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["div.valuerow",{"_index":2480,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["div.valuerow:hover",{"_index":2482,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["docheck",{"_index":1789,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["docs",{"_index":2078,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["document.body.style.cursor",{"_index":1561,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["document.getelementbyid('changesscrollpane",{"_index":1446,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["document.getelementbyid('contextmenu",{"_index":1868,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["document.getelementbyid('logscrollpane",{"_index":1439,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["document.getelementbyid(htmlelement.offsetparent.id",{"_index":571,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["document:contextmenu",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(e",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["domparser",{"_index":1720,"title":{},"body":{"injectables/ProjectService.html":{}}}],["domparser()).parsefromstring(xml",{"_index":1715,"title":{},"body":{"injectables/ProjectService.html":{}}}],["domsanitizer",{"_index":2072,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["domultistepff",{"_index":21,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["domultistepff(options",{"_index":54,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["dostep",{"_index":22,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["dostep(transid",{"_index":59,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["dostepwithbinding",{"_index":23,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["dostepwithbinding(transid",{"_index":67,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["droid",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dynamic",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProjectService.html":{},"components/TextEditRowComponent.html":{}}}],["e.keycode",{"_index":2435,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["e.pageid",{"_index":838,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["e.preventdefault",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/TextEditRowComponent.html":{}}}],["e.returnvalue",{"_index":2442,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["e.shiftkey",{"_index":2439,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["e.srcelement",{"_index":2438,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["e.target",{"_index":2437,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["e.which",{"_index":2434,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["e0e0e0",{"_index":2358,"title":{},"body":{"components/TabsContainer.html":{}}}],["e2e",{"_index":2801,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":499,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":503,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":502,"title":{},"body":{"classes/AppPage.html":{}}}],["e9e9e9",{"_index":981,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["ease",{"_index":2526,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["edit",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["editablenode",{"_index":1996,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["editor",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["editor'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["editor.component",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPanelComponent.html":{},"components/ModelEditorToolbarComponent.html":{}}}],["editor.component.html",{"_index":1174,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.scss",{"_index":1173,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts",{"_index":1172,"title":{},"body":{"components/MlEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:12",{"_index":1182,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:14",{"_index":1192,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:15",{"_index":1191,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":1181,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:23",{"_index":1185,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":1190,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":1183,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":1184,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":1187,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":1188,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["editor.id",{"_index":875,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["editor.load(pageobject",{"_index":878,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["editor/ml",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"components/MlEditorComponent.html":{},"coverage.html":{}}}],["editor/model",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPanelComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"coverage.html":{}}}],["editorpanelcomponent",{"_index":310,"title":{"components/EditorPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editorref",{"_index":1224,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["editorsplitpanesize",{"_index":919,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["eee",{"_index":2361,"title":{},"body":{"components/TabsContainer.html":{}}}],["eeffee",{"_index":2254,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["efefef",{"_index":2483,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["elapsed",{"_index":1396,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["electron",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["electron/.../main.ts",{"_index":2766,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["electron/main.ts",{"_index":2643,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["electronservice",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["element(by.css('app",{"_index":506,"title":{},"body":{"classes/AppPage.html":{}}}],["element.cpnelement",{"_index":1576,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["element.cpnelement._id",{"_index":1590,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["element.name",{"_index":1705,"title":{},"body":{"injectables/ProjectService.html":{}}}],["element.type",{"_index":2195,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["elements",{"_index":653,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["elementtype",{"_index":647,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["ellipse",{"_index":2562,"title":{},"body":{"injectables/ValidationService.html":{}}}],["elseredoblock\">redo",{"_index":1032,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["elseundoblock\">undo",{"_index":1030,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["emptynet.cpn",{"_index":1745,"title":{},"body":{"injectables/ProjectService.html":{}}}],["enable",{"_index":1524,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["enabled",{"_index":638,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":731,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"index.html":{}}}],["enter",{"_index":561,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/TextEditRowComponent.html":{}}}],["entrycomponents",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":2690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":2587,"title":{},"body":{"injectables/ValidationService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["erdp.cpn",{"_index":1741,"title":{},"body":{"injectables/ProjectService.html":{}}}],["error",{"_index":196,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ApplicationSettingsComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"injectables/SettingsService.html":{}}}],["error:\\n",{"_index":1415,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["errordata",{"_index":10,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ProjectConsoleComponent.html":{}}}],["errordata[id",{"_index":1408,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["errorissues",{"_index":191,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["errors",{"_index":1402,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["etc",{"_index":1952,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["event",{"_index":147,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MlEditorComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{}}}],["event.binding",{"_index":2206,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["event.binding.bind_id",{"_index":2208,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["event.changespath",{"_index":1434,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["event.code",{"_index":559,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["event.complexverify",{"_index":151,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["event.cpnelement",{"_index":1194,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["event.cpnelement.__text",{"_index":1601,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["event.cpntype",{"_index":1195,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["event.data",{"_index":1395,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["event.data.error",{"_index":1412,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["event.data.error.description",{"_index":1424,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["event.data.error.stacktrace",{"_index":1413,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["event.data.success",{"_index":1397,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["event.element",{"_index":1575,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["event.element.labeltarget",{"_index":1573,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["event.element.labeltarget.labeltarget",{"_index":1574,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["event.id",{"_index":839,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["event.keycode",{"_index":560,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["event.name",{"_index":848,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["event.newtextvalue",{"_index":1598,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["event.openeditortab",{"_index":829,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["event.preventdefault",{"_index":1878,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["event.project",{"_index":826,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/ProjectConsoleComponent.html":{}}}],["event.project.name",{"_index":1387,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["event.service",{"_index":129,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"injectables/ValidationService.html":{}}}],["event.srcelement",{"_index":579,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["event.subpages",{"_index":833,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["event.target",{"_index":566,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/MlEditorComponent.html":{},"components/OpenprojectButtonComponent.html":{}}}],["event.target.files",{"_index":1257,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["event.target.textcontent",{"_index":1202,"title":{},"body":{"components/MlEditorComponent.html":{},"components/TextEditRowComponent.html":{}}}],["event.trim",{"_index":1630,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["event.x",{"_index":1872,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["event.y",{"_index":1875,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["eventemitter",{"_index":892,"title":{},"body":{"injectables/EventService.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["events",{"_index":882,"title":{},"body":{"injectables/EventService.html":{}}}],["eventservice",{"_index":45,"title":{"injectables/EventService.html":{}},"body":{"injectables/AccessCpnService.html":{},"modules/AppModule.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["exception",{"_index":730,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["execute",{"_index":2798,"title":{},"body":{"index.html":{}}}],["expand",{"_index":1036,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["expanded",{"_index":1769,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["explorer'},{'name",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["explorer.component",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["explorer.component.ts",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["explorer/project",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["explorerwidth",{"_index":920,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["export",{"_index":142,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["exports",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/TabModule.html":{},"overview.html":{}}}],["f3f3f3",{"_index":2362,"title":{},"body":{"components/TabsContainer.html":{}}}],["fail",{"_index":581,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["fair_be",{"_index":1276,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["fairness",{"_index":1278,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["false",{"_index":116,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["false\\nin\\n",{"_index":693,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["family",{"_index":1217,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["fast",{"_index":2242,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["ff0000",{"_index":2406,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["ff00ff",{"_index":2400,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["ffcccc",{"_index":1650,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ffff00",{"_index":2404,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["ffffff",{"_index":2405,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["field",{"_index":2377,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["filelist",{"_index":1259,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["filename",{"_index":1689,"title":{},"body":{"injectables/ProjectService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["filenamemodel",{"_index":2080,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["filereader",{"_index":1708,"title":{},"body":{"injectables/ProjectService.html":{}}}],["files",{"_index":1258,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"index.html":{}}}],["files.length",{"_index":1260,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["files[0",{"_index":1263,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["filesaver",{"_index":2098,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["filesaver.saveas(blob",{"_index":2127,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["fillattr",{"_index":2454,"title":{},"body":{"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{}}}],["filterdifferences",{"_index":2548,"title":{},"body":{"injectables/ValidationService.html":{}}}],["filterdifferences(differences",{"_index":2551,"title":{},"body":{"injectables/ValidationService.html":{}}}],["filteredlist",{"_index":836,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["filteredlist.length",{"_index":841,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["filtertext",{"_index":2036,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["first",{"_index":1292,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"injectables/ProjectService.html":{}}}],["firstupdate",{"_index":1319,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["firstval",{"_index":1312,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["flag",{"_index":105,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ValidationService.html":{},"index.html":{}}}],["flex",{"_index":970,"title":{},"body":{"components/MainFrameComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"dependencies.html":{}}}],["float",{"_index":2520,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["focused",{"_index":1904,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["font",{"_index":1215,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["fontawesome",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{}}}],["fortawesome/angular",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":2710,"title":{},"body":{"dependencies.html":{}}}],["forward",{"_index":2243,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["frame",{"_index":914,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame'},{'name",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["frame.component",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["frame.component.html",{"_index":916,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.scss",{"_index":915,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts",{"_index":913,"title":{},"body":{"components/MainFrameComponent.html":{},"coverage.html":{}}}],["frame.component.ts:13",{"_index":939,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:15",{"_index":935,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:17",{"_index":936,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:19",{"_index":937,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:20",{"_index":930,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:21",{"_index":942,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:23",{"_index":933,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:24",{"_index":925,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:26",{"_index":940,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:29",{"_index":928,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:62",{"_index":927,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame.component.ts:65",{"_index":926,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["frame/main",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"components/MainFrameComponent.html":{},"coverage.html":{}}}],["fucia",{"_index":2399,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["fuelstation.cpn",{"_index":1755,"title":{},"body":{"injectables/ProjectService.html":{}}}],["full",{"_index":2255,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["fullscreen",{"_index":988,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["fun",{"_index":684,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectTreeComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["func",{"_index":886,"title":{},"body":{"injectables/EventService.html":{}}}],["func(event",{"_index":898,"title":{},"body":{"injectables/EventService.html":{}}}],["function",{"_index":654,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectTreeComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["functions",{"_index":2764,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2802,"title":{},"body":{"index.html":{}}}],["generate",{"_index":71,"title":{},"body":{"injectables/AccessCpnService.html":{},"index.html":{}}}],["generated",{"_index":2777,"title":{},"body":{"index.html":{}}}],["generateusersession",{"_index":24,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["geometrykeylist",{"_index":2539,"title":{},"body":{"injectables/ValidationService.html":{}}}],["getappsettings",{"_index":2134,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getbindings",{"_index":25,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getbindings(transid",{"_index":75,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getcurrentelement",{"_index":1671,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getdefaultsettings",{"_index":2141,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geterrordata",{"_index":26,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getfilename",{"_index":2096,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["getissimulation",{"_index":28,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getmonitornodetypelist",{"_index":1537,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmonitornodetypelist(monitortypeid",{"_index":667,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["getmonitornodetypelist(this.cpnelement._type",{"_index":1570,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["getmonitortypelist",{"_index":2658,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmonitortypelist(elementtype",{"_index":655,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["getnextid",{"_index":1834,"title":{},"body":{"components/ProjectTreeComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getoption",{"_index":1478,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["getoption(name",{"_index":1496,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["getoptionvalue",{"_index":1479,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["getoptionvalue(name",{"_index":1498,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["getportobject(cpnelement",{"_index":2452,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["getproject",{"_index":1672,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getreadydata",{"_index":29,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getref",{"_index":2278,"title":{},"body":{"components/TabComponent.html":{}}}],["getselectedtab",{"_index":2302,"title":{},"body":{"components/TabsContainer.html":{}}}],["getserveraddress",{"_index":530,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["getserveraddresslist",{"_index":531,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["getsimstate",{"_index":30,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getstatedata",{"_index":31,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getsubpage(cpnelement",{"_index":2473,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["gettabbyid",{"_index":2303,"title":{},"body":{"components/TabsContainer.html":{}}}],["gettabbyid(id",{"_index":2316,"title":{},"body":{"components/TabsContainer.html":{}}}],["gettabtitle",{"_index":2261,"title":{},"body":{"components/TabComponent.html":{}}}],["gettext",{"_index":1905,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["getting",{"_index":1666,"title":{"index.html":{}},"body":{"injectables/ProjectService.html":{}}}],["gettitletext",{"_index":500,"title":{},"body":{"classes/AppPage.html":{}}}],["gettokendata",{"_index":32,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["gettokenmarks",{"_index":33,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["gettransitions",{"_index":34,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getusersessionid",{"_index":35,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["getxmlfromserver",{"_index":36,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["gi",{"_index":742,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["given",{"_index":646,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":1280,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["global_fairness",{"_index":1279,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["globref",{"_index":721,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["globref._id",{"_index":1864,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["go",{"_index":2805,"title":{},"body":{"index.html":{}}}],["golden",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["gotodeclaration",{"_index":1796,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["gotodeclaration(id",{"_index":1807,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["graph",{"_index":2810,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1466,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/TextEditRowComponent.html":{}}}],["green",{"_index":724,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"components/MainFrameComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["grey",{"_index":2491,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["group",{"_index":652,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["gutter",{"_index":975,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["guttersize",{"_index":921,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["h1')).gettext",{"_index":507,"title":{},"body":{"classes/AppPage.html":{}}}],["handler",{"_index":900,"title":{},"body":{"injectables/EventService.html":{}}}],["handler.func(event",{"_index":903,"title":{},"body":{"injectables/EventService.html":{}}}],["handler.id",{"_index":902,"title":{},"body":{"injectables/EventService.html":{}}}],["handlers",{"_index":893,"title":{},"body":{"injectables/EventService.html":{}}}],["hassubpages",{"_index":2025,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["header",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"components/BlockHeaderComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["header'},{'name",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["header.ts",{"_index":590,"title":{},"body":{"components/BlockHeaderComponent.html":{},"coverage.html":{}}}],["header.ts:13",{"_index":595,"title":{},"body":{"components/BlockHeaderComponent.html":{}}}],["header.ts:14",{"_index":596,"title":{},"body":{"components/BlockHeaderComponent.html":{}}}],["headers",{"_index":185,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["height",{"_index":963,"title":{},"body":{"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["help",{"_index":2803,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["hh:mm:ss",{"_index":1461,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["hi",{"_index":1898,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["hidden",{"_index":978,"title":{},"body":{"components/MainFrameComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["hidecontextmenu",{"_index":1797,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["highlight",{"_index":1649,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["hoponhopoff",{"_index":1742,"title":{},"body":{"injectables/ProjectService.html":{}}}],["host",{"_index":2258,"title":{},"body":{"components/TabComponent.html":{},"components/TabsContainer.html":{}}}],["host(.hidden",{"_index":2281,"title":{},"body":{"components/TabComponent.html":{}}}],["hostlistener",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('document:keydown",{"_index":555,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["hostlisteners",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["hours",{"_index":1453,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["html",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["html.pipe",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["html.pipe.ts",{"_index":2068,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:8",{"_index":2071,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["htmlelement",{"_index":564,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["htmlelement.nodename",{"_index":567,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["htmlelement.offsetparent",{"_index":569,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["htmlelement.textcontent",{"_index":582,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["htmlinputelement",{"_index":565,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["htmltableelement",{"_index":570,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["htmltableelement.id",{"_index":572,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["htmltableelement.rows.length",{"_index":575,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["http",{"_index":53,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["http://95.161.178.222:42020",{"_index":761,"title":{},"body":{"classes/CpnServerUrl.html":{}}}],["http://localhost:4200",{"_index":2784,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":44,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["httpclientmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":125,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["i/o",{"_index":2472,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["icon",{"_index":976,"title":{},"body":{"components/MainFrameComponent.html":{},"dependencies.html":{}}}],["icons",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":66,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/Message.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["id1412328496",{"_index":227,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["id251437332ia",{"_index":1592,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ide",{"_index":168,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["identifier",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":2735,"title":{},"body":{"dependencies.html":{}}}],["idx",{"_index":2103,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["iftabselected",{"_index":2299,"title":{},"body":{"components/TabsContainer.html":{}}}],["ignore",{"_index":2339,"title":{},"body":{"components/TabsContainer.html":{}}}],["img.logo",{"_index":1040,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["implements",{"_index":523,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["import",{"_index":123,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["important",{"_index":973,"title":{},"body":{"components/MainFrameComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/TabsContainer.html":{}}}],["imports",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/TabModule.html":{}}}],["in/out",{"_index":2471,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1982,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["init",{"_index":193,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["initcpnserverurl",{"_index":2646,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initdomadapter",{"_index":2580,"title":{},"body":{"injectables/ValidationService.html":{}}}],["initialization",{"_index":104,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["initialize",{"_index":101,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["initialized",{"_index":1422,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["initializing",{"_index":1419,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["initnet",{"_index":37,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["initnet(cpnjson",{"_index":94,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["initnetprocessing",{"_index":11,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["initsim",{"_index":38,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["initsimprocessing",{"_index":12,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessCpnService.html":{},"injectables/EventService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{},"injectables/ValidationService.html":{}},"body":{"injectables/AccessCpnService.html":{},"injectables/EventService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/EventService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{},"injectables/ValidationService.html":{},"overview.html":{}}}],["inline",{"_index":2352,"title":{},"body":{"components/TabsContainer.html":{}}}],["input",{"_index":597,"title":{},"body":{"components/BlockHeaderComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["inputs",{"_index":594,"title":{},"body":{"components/BlockHeaderComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["insert",{"_index":1877,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["inset",{"_index":2284,"title":{},"body":{"components/TabComponent.html":{}}}],["instance",{"_index":1585,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{}}}],["instanceof",{"_index":1555,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["instances",{"_index":1583,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["int",{"_index":1881,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["interface",{"_index":682,"title":{"interfaces/MonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1238,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["interval",{"_index":1321,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["intervals",{"_index":1288,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["is(element",{"_index":1578,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["isblockexpanded",{"_index":1862,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["isdisabled",{"_index":2304,"title":{},"body":{"components/TabsContainer.html":{}}}],["ishidden",{"_index":2263,"title":{},"body":{"components/TabComponent.html":{}}}],["ismonitorssubnode",{"_index":1480,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["isnan(parsed",{"_index":2451,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["issimulation",{"_index":13,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["isstart",{"_index":986,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["issubpage",{"_index":2026,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["issue",{"_index":201,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["issue.description",{"_index":203,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["issue.description.replace",{"_index":205,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["issue.description.replace(issue.id",{"_index":204,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["issue.description.trim",{"_index":206,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["item",{"_index":545,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["item.date",{"_index":1457,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["item.text",{"_index":1462,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["item?.name",{"_index":1900,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["its,oid,s",{"_index":690,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["jquery",{"_index":2736,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2724,"title":{},"body":{"dependencies.html":{}}}],["js/util/modelutil",{"_index":1543,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["json",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["json.parse(localstorage.getitem(this.localstoragename",{"_index":947,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["json.parse(response",{"_index":2149,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(cpnelement",{"_index":1643,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["json.stringify(cpnxml",{"_index":179,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["json.stringify(dif.path",{"_index":2625,"title":{},"body":{"injectables/ValidationService.html":{}}}],["json.stringify(error",{"_index":1764,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(event.data",{"_index":1416,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["json.stringify(json",{"_index":1729,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(p",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringify(response",{"_index":1761,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(this.declaration",{"_index":1924,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["json.stringify(this.selected",{"_index":1854,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["jsoneditormodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["jsontree",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["karma",{"_index":2800,"title":{},"body":{"index.html":{}}}],["key",{"_index":736,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{}}}],["key.insert",{"_index":1876,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["keyboardevent",{"_index":541,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["keycode",{"_index":2433,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["keyevent",{"_index":532,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["keyevent(event",{"_index":540,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["keyvaluediffers",{"_index":2001,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["l10n",{"_index":2714,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":1266,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["lassotool",{"_index":1223,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["last",{"_index":1295,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["lastid",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lastprojectdata",{"_index":2540,"title":{},"body":{"injectables/ValidationService.html":{}}}],["lastupdate",{"_index":1322,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["lastval",{"_index":1313,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["launchwindow",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["layout",{"_index":592,"title":{},"body":{"components/BlockHeaderComponent.html":{},"dependencies.html":{}}}],["left",{"_index":2246,"title":{},"body":{"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["leftpart",{"_index":1946,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["leftsplitpanesize",{"_index":922,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["legend",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"overview.html":{}}}],["length",{"_index":629,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["lib/cpn",{"_index":1542,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["lib/tabs/tabs",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPanelComponent.html":{}}}],["lib/x2js/xml2json",{"_index":2100,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["lib/x2js/xml2json.js",{"_index":1697,"title":{},"body":{"injectables/ProjectService.html":{}}}],["lib/xml",{"_index":133,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["light",{"_index":2252,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["lightgreen",{"_index":2248,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["lightgrey",{"_index":2364,"title":{},"body":{"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["lime",{"_index":2418,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["line",{"_index":1935,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["lineattr",{"_index":2458,"title":{},"body":{"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{}}}],["list",{"_index":628,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["listlengthdatacollectionmonitortemplate",{"_index":707,"title":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["lldc",{"_index":627,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":824,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"injectables/ProjectService.html":{}}}],["loaddefaultsettings",{"_index":2135,"title":{},"body":{"injectables/SettingsService.html":{}}}],["loaded",{"_index":1388,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["loademptyproject",{"_index":1673,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loading",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProjectService.html":{}}}],["loadpages",{"_index":1798,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["loadproject",{"_index":786,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["loadproject(project",{"_index":803,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{}}}],["loadprojectfile",{"_index":1674,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loadprojectfile(file",{"_index":1682,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loadprojectxml",{"_index":1675,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loadprojectxml(filename",{"_index":1684,"title":{},"body":{"injectables/ProjectService.html":{}}}],["local",{"_index":729,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["localsettings",{"_index":2143,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.getitem('applicationsettings",{"_index":2144,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.getitem(this.localstoragename",{"_index":945,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["localstorage.setitem('applicationsettings",{"_index":2146,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.setitem('cpnxml",{"_index":178,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["localstorage.setitem('projectjson",{"_index":1728,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstorage.setitem('testprojectjson",{"_index":1723,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstoragename",{"_index":923,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["log",{"_index":1355,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["log(text",{"_index":1362,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logchanges",{"_index":1356,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logchanges(text",{"_index":1364,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logcolor",{"_index":1357,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logcolor(text",{"_index":1366,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logconsole",{"_index":1463,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logerror",{"_index":1358,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logerror(text",{"_index":1369,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["loghtml",{"_index":1350,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logscrollpane",{"_index":1438,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logscrollpane.scrollheight",{"_index":1441,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logscrollpane.scrolltop",{"_index":1440,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logsuccess",{"_index":1359,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["logsuccess(text",{"_index":1371,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["loops",{"_index":1983,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["m",{"_index":1975,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["m.groups",{"_index":1977,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["m.groups[key",{"_index":1978,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["m.index",{"_index":1986,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["magenta",{"_index":727,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["main",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["mainframecomponent",{"_index":313,"title":{"components/MainFrameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintoolbarcomponent",{"_index":316,"title":{"components/MainToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":1267,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["marked",{"_index":2236,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["marking",{"_index":620,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["markingsizemonitortemplate",{"_index":706,"title":{"classes/MarkingSizeMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["marks",{"_index":215,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["maroon",{"_index":2401,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["mat",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1985,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["matching",{"_index":246,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1314,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"components/SimulationPanelComponent.html":{}}}],["max_step",{"_index":2183,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["max_time",{"_index":2185,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["maximum",{"_index":1297,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["menuelement",{"_index":1867,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["menuelement.style.display",{"_index":1869,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["menuelement.style.left",{"_index":1871,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["menuelement.style.position",{"_index":1870,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["menuelement.style.top",{"_index":1874,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["message",{"_index":130,"title":{"classes/Message.html":{}},"body":{"injectables/AccessCpnService.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["message.shape_select",{"_index":2201,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["message.simulation_select_binding",{"_index":2205,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["metadata",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["method",{"_index":2558,"title":{},"body":{"injectables/ValidationService.html":{}}}],["methods",{"_index":20,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["middle",{"_index":2487,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["millisec",{"_index":1376,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["min",{"_index":1315,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"components/TabsContainer.html":{}}}],["minimum",{"_index":1299,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["minutes",{"_index":1451,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["miscellaneous",{"_index":2763,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ml",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["mleditorcomponent",{"_index":318,"title":{"components/MlEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mltabarray",{"_index":777,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["mm",{"_index":1459,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["modal",{"_index":2087,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["modalname",{"_index":2091,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["moddle",{"_index":2740,"title":{},"body":{"dependencies.html":{}}}],["mode",{"_index":2152,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["model",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["model.changed",{"_index":1093,"title":{},"body":{"classes/Message.html":{}}}],["model.changed.details",{"_index":1095,"title":{},"body":{"classes/Message.html":{}}}],["model.editor.fullscreen",{"_index":1097,"title":{},"body":{"classes/Message.html":{}}}],["model.reload",{"_index":1099,"title":{},"body":{"classes/Message.html":{}}}],["model.save.backup",{"_index":1101,"title":{},"body":{"classes/Message.html":{}}}],["model.service",{"_index":1698,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/ValidationService.html":{}}}],["model.update.diagram",{"_index":1103,"title":{},"body":{"classes/Message.html":{}}}],["model_changed",{"_index":1052,"title":{},"body":{"classes/Message.html":{}}}],["model_changed_details",{"_index":1053,"title":{},"body":{"classes/Message.html":{}}}],["model_editor_",{"_index":876,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["model_editor_fullscreen",{"_index":951,"title":{},"body":{"components/MainFrameComponent.html":{},"classes/Message.html":{}}}],["model_reload",{"_index":1054,"title":{},"body":{"classes/Message.html":{}}}],["model_save_backup",{"_index":1055,"title":{},"body":{"classes/Message.html":{}}}],["model_update_diagram",{"_index":1056,"title":{},"body":{"classes/Message.html":{}}}],["modeleditorcomponent",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modeleditorlist",{"_index":778,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["modeleditortoolbarcomponent",{"_index":323,"title":{"components/ModelEditorToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelfile",{"_index":1738,"title":{},"body":{"injectables/ProjectService.html":{}}}],["modelname",{"_index":1670,"title":{},"body":{"injectables/ProjectService.html":{}}}],["modelservice",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["modelservice.getredocount",{"_index":1033,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["modelservice.getundocount",{"_index":1029,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["modeltabarray",{"_index":779,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["module",{"_index":368,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/TabModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{},"overview.html":{}}}],["modules",{"_index":370,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/TabModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["monitor._name",{"_index":1236,"title":{},"body":{"pipes/MonitorNamePipe.html":{}}}],["monitor._typedescription",{"_index":1237,"title":{},"body":{"pipes/MonitorNamePipe.html":{}}}],["monitor.changed",{"_index":1105,"title":{},"body":{"classes/Message.html":{}}}],["monitor.created",{"_index":1107,"title":{},"body":{"classes/Message.html":{}}}],["monitor.deleted",{"_index":1109,"title":{},"body":{"classes/Message.html":{}}}],["monitor.open",{"_index":1111,"title":{},"body":{"classes/Message.html":{}}}],["monitor.set.available.nodes",{"_index":1113,"title":{},"body":{"classes/Message.html":{}}}],["monitor_changed",{"_index":1057,"title":{},"body":{"classes/Message.html":{}}}],["monitor_created",{"_index":1058,"title":{},"body":{"classes/Message.html":{}}}],["monitor_deleted",{"_index":1059,"title":{},"body":{"classes/Message.html":{}}}],["monitor_open",{"_index":1060,"title":{},"body":{"classes/Message.html":{}}}],["monitor_set_available_nodes",{"_index":1061,"title":{},"body":{"classes/Message.html":{}}}],["monitorblock",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["monitorcpnelement",{"_index":1634,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitorname",{"_index":1233,"title":{},"body":{"pipes/MonitorNamePipe.html":{}}}],["monitornamepipe",{"_index":382,"title":{"pipes/MonitorNamePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/MonitorNamePipe.html":{},"coverage.html":{},"overview.html":{}}}],["monitornode",{"_index":1623,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["monitornode_",{"_index":2019,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["monitornodelist",{"_index":1586,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitornodelist.filter(n",{"_index":1627,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitornodelist.find(n",{"_index":1624,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitornodelist.length",{"_index":1594,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitornodelist.push",{"_index":1588,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitornodelist[0",{"_index":1595,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitorobject",{"_index":1857,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["monitoroption",{"_index":2018,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["monitoroption_",{"_index":2016,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["monitors",{"_index":1468,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors'},{'name",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["monitors.component",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["monitors.component.html",{"_index":1470,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.scss",{"_index":1469,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts",{"_index":1467,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"coverage.html":{}}}],["monitors.component.ts:137",{"_index":1521,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:153",{"_index":1506,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:165",{"_index":1508,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:182",{"_index":1519,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:186",{"_index":1517,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:206",{"_index":1511,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:222",{"_index":1525,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:228",{"_index":1527,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:23",{"_index":1531,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:24",{"_index":1533,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:243",{"_index":1502,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:246",{"_index":1513,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:251",{"_index":1509,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:259",{"_index":1500,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:26",{"_index":1530,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:27",{"_index":1536,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:28",{"_index":1535,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:30",{"_index":1532,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:31",{"_index":1534,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:33",{"_index":1529,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:38",{"_index":1495,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:42",{"_index":1528,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:44",{"_index":1501,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:55",{"_index":1497,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:68",{"_index":1499,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:76",{"_index":1523,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:81",{"_index":1516,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.component.ts:94",{"_index":1504,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["monitors.cpn",{"_index":1756,"title":{},"body":{"injectables/ProjectService.html":{}}}],["monitors/project",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMonitorsComponent.html":{},"coverage.html":{}}}],["monitortemplate",{"_index":600,"title":{"interfaces/MonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["monitortype",{"_index":616,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitortype.bp",{"_index":661,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.ctodc",{"_index":658,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.dc",{"_index":660,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.lldc",{"_index":666,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.ms",{"_index":664,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.pcbp",{"_index":665,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.tebp",{"_index":659,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.ud",{"_index":662,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortype.wif",{"_index":663,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid",{"_index":639,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["monitortypeid.bp",{"_index":672,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.ctodc",{"_index":669,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.dc",{"_index":671,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.lldc].includes(monitortypeid",{"_index":679,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.ms",{"_index":676,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.pcbp",{"_index":677,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.tebp",{"_index":670,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.ud",{"_index":673,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["monitortypeid.wif].includes(monitortypeid",{"_index":674,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["mono",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["monospace",{"_index":1219,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["more",{"_index":2804,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":1805,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["mouseover",{"_index":1770,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["moz",{"_index":1661,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ms",{"_index":619,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["mscprotocol.cpn",{"_index":1744,"title":{},"body":{"injectables/ProjectService.html":{}}}],["multi",{"_index":2239,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["multi_step",{"_index":2153,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["multi_step_ff",{"_index":2154,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["multiple",{"_index":1937,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["multistepcount",{"_index":2155,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["mynet",{"_index":1751,"title":{},"body":{"injectables/ProjectService.html":{}}}],["mynet.cpn",{"_index":1749,"title":{},"body":{"injectables/ProjectService.html":{}}}],["mynet2.cpn",{"_index":1750,"title":{},"body":{"injectables/ProjectService.html":{}}}],["n",{"_index":701,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectMonitorsComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["n._idref",{"_index":1625,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["n\\n",{"_index":2095,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["name",{"_index":50,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CpnServerUrl.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name.pipe",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["name.pipe.ts",{"_index":1232,"title":{},"body":{"pipes/MonitorNamePipe.html":{},"pipes/OptionsNamePipePipe.html":{},"coverage.html":{}}}],["name.pipe.ts:6",{"_index":1235,"title":{},"body":{"pipes/MonitorNamePipe.html":{},"pipes/OptionsNamePipePipe.html":{}}}],["name2color",{"_index":2374,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["name2color(name",{"_index":2391,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["nav",{"_index":1651,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["navbar",{"_index":2049,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["navigate",{"_index":2783,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":501,"title":{},"body":{"classes/AppPage.html":{}}}],["navy",{"_index":2411,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["nbsp",{"_index":1039,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{}}}],["nbsp;cpn",{"_index":1027,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["necessary",{"_index":1980,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["needcheckvalidation",{"_index":2541,"title":{},"body":{"injectables/ValidationService.html":{}}}],["needvalidation",{"_index":2542,"title":{},"body":{"injectables/ValidationService.html":{}}}],["netjson",{"_index":2114,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["new",{"_index":72,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"injectables/EventService.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"index.html":{}}}],["newcpnelement",{"_index":1887,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["newcpnet",{"_index":989,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["newcpntype",{"_index":1890,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["newtextvalue",{"_index":1204,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["newvalue",{"_index":1880,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["ng",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/MainFrameComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/TabsContainer.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1178,"title":{},"body":{"components/MlEditorComponent.html":{},"components/TabsContainer.html":{}}}],["ngb",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodal",{"_index":2085,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["ngbmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["ngdocheck",{"_index":1799,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["ngmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/TabModule.html":{}}}],["ngondestroy",{"_index":787,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MlEditorComponent.html":{},"injectables/ValidationService.html":{}}}],["ngoninit",{"_index":533,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["ngx",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxelectronmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxjsonviewermodule",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["nlet\\n",{"_index":687,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["nobackupkeylist",{"_index":2543,"title":{},"body":{"injectables/ValidationService.html":{}}}],["node",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["node'},{'name",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["node.component",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["node.component.html",{"_index":1767,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.scss",{"_index":1766,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts",{"_index":1765,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:10",{"_index":2020,"title":{},"body":{"components/ProjectTreeOptionNodeComponent.html":{}}}],["node.component.ts:11",{"_index":1779,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{}}}],["node.component.ts:12",{"_index":1910,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:125",{"_index":1915,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["node.component.ts:13",{"_index":1775,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{}}}],["node.component.ts:133",{"_index":1914,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["node.component.ts:14",{"_index":1773,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:15",{"_index":1774,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:16",{"_index":1776,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:17",{"_index":1772,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:18",{"_index":1909,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:19",{"_index":2009,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{}}}],["node.component.ts:20",{"_index":2024,"title":{},"body":{"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:21",{"_index":1777,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.component.ts:22",{"_index":1912,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:23",{"_index":2008,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.component.ts:24",{"_index":1778,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{}}}],["node.component.ts:25",{"_index":1911,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["node.component.ts:27",{"_index":2003,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.component.ts:31",{"_index":2002,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.component.ts:32",{"_index":2027,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["node.component.ts:40",{"_index":2007,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.component.ts:46",{"_index":2005,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.component.ts:56",{"_index":1917,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["node.element._id",{"_index":1626,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.element.text",{"_index":1640,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.elementtype",{"_index":1641,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.html",{"_index":2503,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.page.pageattr._name",{"_index":1639,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["node.parent.data.cpnelement",{"_index":1885,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["node.scss",{"_index":1902,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["node.ts",{"_index":2502,"title":{},"body":{"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["node.ts:10",{"_index":2511,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:11",{"_index":2510,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:12",{"_index":2513,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:13",{"_index":2514,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:14",{"_index":2508,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:15",{"_index":2506,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:16",{"_index":2507,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:17",{"_index":2512,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:19",{"_index":2515,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.ts:9",{"_index":2509,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.type",{"_index":1605,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["node/project",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"coverage.html":{}}}],["node/tree",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTreeComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["nodelist",{"_index":1473,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["nodelist.length",{"_index":1638,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["nodes",{"_index":1351,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["nodetoarray",{"_index":1474,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodetoarray(block.globref",{"_index":1863,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["nodetoarray(node",{"_index":2773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nodetoarray(this.cpnelement.node",{"_index":1587,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["nodetoarray(this.cpnet.globbox.block",{"_index":1861,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["nodetoarray(this.cpnet.page",{"_index":1853,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["nodetoarray(this.page.trans",{"_index":2033,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["nodetoarray(this.selected.parentcpnelement[newcpntype",{"_index":1893,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["nodetypelist",{"_index":1475,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["nogeometrychangelist",{"_index":2614,"title":{},"body":{"injectables/ValidationService.html":{}}}],["nogeometrychangelist.length",{"_index":2619,"title":{},"body":{"injectables/ValidationService.html":{}}}],["none",{"_index":702,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["normal",{"_index":1443,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["note",{"_index":2253,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["nowrap",{"_index":2250,"title":{},"body":{"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{}}}],["null",{"_index":889,"title":{},"body":{"injectables/EventService.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["number",{"_index":558,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["numpadenter",{"_index":562,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["o._name",{"_index":1558,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["object",{"_index":720,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data.issues",{"_index":200,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["object.keys(errordata",{"_index":1406,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["object.keys(errordata).length",{"_index":1405,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["object.keys(readydata).length",{"_index":2216,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["object.keys(readydata)[0",{"_index":2217,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["object.keys(this.appsettings",{"_index":554,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["object.keys(this.colornames",{"_index":2427,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["object.keys(this.colors",{"_index":737,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["objectsequal",{"_index":2582,"title":{},"body":{"injectables/ValidationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectsequal(a",{"_index":2774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objectsequal(this.lastprojectdata",{"_index":2611,"title":{},"body":{"injectables/ValidationService.html":{}}}],["obs",{"_index":695,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["obsbindelem",{"_index":696,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["observable",{"_index":2576,"title":{},"body":{"injectables/ValidationService.html":{}}}],["observations",{"_index":1290,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["observe",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["observed",{"_index":1293,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["occurence",{"_index":632,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["occurrences",{"_index":709,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["oldcpntype",{"_index":1884,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["olive",{"_index":2416,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["on(id",{"_index":885,"title":{},"body":{"injectables/EventService.html":{}}}],["onchange",{"_index":1800,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["onchange(event",{"_index":1814,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["onchanges",{"_index":1832,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["onclick",{"_index":2504,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["onclonemonitor",{"_index":1481,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["oncontextmenu(e",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["oncreatenode",{"_index":1482,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["oncreatenode(event",{"_index":1503,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondblclick(event",{"_index":2448,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["ondeclarationclick",{"_index":1483,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondeclarationclick(event",{"_index":1505,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondeclarationdblclick",{"_index":1484,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondeclarationdblclick(event",{"_index":1507,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondeletemonitor",{"_index":1485,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondeletenode",{"_index":1486,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeToolbarComponent.html":{}}}],["ondeletenode(node",{"_index":1510,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondestroy",{"_index":773,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"injectables/ValidationService.html":{}}}],["ondisablemonitor",{"_index":1487,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondisablemonitor(disable",{"_index":1512,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["ondostep",{"_index":990,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["ondownnode",{"_index":2038,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["one",{"_index":648,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["oninit",{"_index":524,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{}}}],["onkeydown",{"_index":1801,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["onkeydown(e",{"_index":2394,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["onkeydown(event",{"_index":1816,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["onkeyup",{"_index":1179,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["onkeyup(event",{"_index":1186,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["onloadmonitor",{"_index":1488,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["onloadmonitor(cpnelement",{"_index":1515,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["onnewnode",{"_index":1489,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeToolbarComponent.html":{}}}],["onparse",{"_index":1906,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["onparse(value",{"_index":1913,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["onrewind",{"_index":2160,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["onrunmultistep",{"_index":2161,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["onrunmultistepff",{"_index":2162,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["onsavedeclaration",{"_index":1490,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["onsavedeclaration(event",{"_index":1518,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["onselected",{"_index":1768,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{}}}],["onselectedchange",{"_index":1802,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["onselectednode",{"_index":1998,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["onselectednode(node",{"_index":2004,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["onselectedoption",{"_index":1999,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["onselectedoption(option",{"_index":2006,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["onstartsimulation",{"_index":991,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["onstopsimulation",{"_index":992,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["onupdate",{"_index":1907,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["onupdate(value",{"_index":1916,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["onupdatedeclaration",{"_index":1491,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["onupdatedeclaration(event",{"_index":1520,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["onupnode",{"_index":2039,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["onvalidate",{"_index":993,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["opacity",{"_index":2359,"title":{},"body":{"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["open",{"_index":1265,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/SaveprojectButtonComponent.html":{}}}],["open(modalname",{"_index":2089,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["opened",{"_index":591,"title":{},"body":{"components/BlockHeaderComponent.html":{}}}],["openeditortab",{"_index":1611,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["openmleditor",{"_index":788,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["openmodeleditor",{"_index":789,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["openmodeleditor(pageobject",{"_index":808,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["openproject",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["openprojectbuttoncomponent",{"_index":324,"title":{"components/OpenprojectButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["option",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["option._name",{"_index":2017,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{}}}],["option._value",{"_index":1560,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["option.valof(modeltime.fromstring",{"_index":698,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["optional",{"_index":52,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CpnServerUrl.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"pipes/MonitorNamePipe.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/functions.html":{}}}],["optionlist",{"_index":2023,"title":{},"body":{"components/ProjectTreeOptionsNodeComponent.html":{}}}],["optionlogging",{"_index":1476,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["optionname",{"_index":1269,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"components/ProjectTreeOptionNodeComponent.html":{}}}],["options",{"_index":56,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["options.find((o",{"_index":1557,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["optionsnamepipepipe",{"_index":383,"title":{"pipes/OptionsNamePipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/OptionsNamePipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["optiontimed",{"_index":1477,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["origin",{"_index":1735,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["out",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{},"components/TreeNodeComponent.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":1207,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["output",{"_index":1282,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["outputdirectory",{"_index":1281,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["outputs",{"_index":2307,"title":{},"body":{"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["overflow",{"_index":1213,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["overlay",{"_index":2357,"title":{},"body":{"components/TabsContainer.html":{}}}],["overview",{"_index":2812,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["p._z",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":2696,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":964,"title":{},"body":{"components/MainFrameComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["page",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["page.change.name",{"_index":1115,"title":{},"body":{"classes/Message.html":{}}}],["page.create.subst",{"_index":1117,"title":{},"body":{"classes/Message.html":{}}}],["page.delete",{"_index":1119,"title":{},"body":{"classes/Message.html":{}}}],["page.open",{"_index":1121,"title":{},"body":{"classes/Message.html":{}}}],["page.update.subst",{"_index":1123,"title":{},"body":{"classes/Message.html":{}}}],["page\\'element",{"_index":689,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["page_change_name",{"_index":1062,"title":{},"body":{"classes/Message.html":{}}}],["page_create_subst",{"_index":1063,"title":{},"body":{"classes/Message.html":{}}}],["page_delete",{"_index":1064,"title":{},"body":{"classes/Message.html":{}}}],["page_open",{"_index":1065,"title":{},"body":{"classes/Message.html":{}}}],["page_update_subst",{"_index":1066,"title":{},"body":{"classes/Message.html":{}}}],["pageid",{"_index":865,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TextEditRowComponent.html":{}}}],["pagename",{"_index":867,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["pageobject",{"_index":811,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["pageobject._id",{"_index":869,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["pageobject.pageattr._name",{"_index":870,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["pageobject.pageattr['@attributes'].name",{"_index":868,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["pageobject['@attributes'].id",{"_index":866,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["pages",{"_index":1581,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["panel",{"_index":774,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["panel'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["panel.component",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["panel.component.html",{"_index":776,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["panel.component.scss",{"_index":775,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["panel.component.ts",{"_index":772,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/SimulationPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:106",{"_index":796,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:117",{"_index":793,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:118",{"_index":2173,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:128",{"_index":810,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:133",{"_index":2169,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:14",{"_index":2187,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:140",{"_index":2170,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:145",{"_index":2171,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:15",{"_index":2188,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2177,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:161",{"_index":807,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:17",{"_index":2178,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:176",{"_index":2168,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:18",{"_index":2179,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:20",{"_index":2176,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:22",{"_index":2186,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:25",{"_index":818,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:27",{"_index":815,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:29",{"_index":816,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:30",{"_index":791,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:34",{"_index":806,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2166,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":2174,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:42",{"_index":2167,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["panel.component.ts:69",{"_index":805,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:72",{"_index":804,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:80",{"_index":800,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:84",{"_index":802,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel.component.ts:99",{"_index":798,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["panel/components/text",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"components/TextEditRowComponent.html":{},"coverage.html":{}}}],["panel/editor",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPanelComponent.html":{},"coverage.html":{}}}],["panel/properties",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["panel/simulation",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"components/SimulationPanelComponent.html":{},"coverage.html":{}}}],["param",{"_index":225,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"injectables/ProjectService.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CpnServerUrl.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"pipes/MonitorNamePipe.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":2770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parentblock",{"_index":1771,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parse",{"_index":1687,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parsed",{"_index":2450,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["parseint",{"_index":2375,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["parseint(event.target.textcontent",{"_index":2445,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["parseint(x",{"_index":2396,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["parser",{"_index":1719,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parser.length",{"_index":1945,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parser.parsefromstring(projectxml",{"_index":1721,"title":{},"body":{"injectables/ProjectService.html":{}}}],["parser[0",{"_index":1943,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parser[0].match(/^\\w+/g",{"_index":1955,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parser[0].trim",{"_index":1947,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parser[1].trim",{"_index":1949,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parserkey",{"_index":1972,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parserregexlist",{"_index":1963,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parserregexlist[parserkey",{"_index":1973,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parsetype",{"_index":1964,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["parsexml",{"_index":1676,"title":{},"body":{"injectables/ProjectService.html":{}}}],["parsexml(xml",{"_index":1690,"title":{},"body":{"injectables/ProjectService.html":{}}}],["pcbp",{"_index":633,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":712,"title":{"pipes/ColorDeclarationsPipe.html":{},"pipes/MonitorNamePipe.html":{},"pipes/OptionsNamePipePipe.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{}},"body":{"pipes/ColorDeclarationsPipe.html":{},"pipes/MonitorNamePipe.html":{},"pipes/OptionsNamePipePipe.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["pipe({name",{"_index":1270,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"pipes/SafeHtmlPipe.html":{}}}],["pipes",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"pipes/ColorDeclarationsPipe.html":{},"pipes/MonitorNamePipe.html":{},"pipes/OptionsNamePipePipe.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"overview.html":{}}}],["pipes/color",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/monitor",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/options",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/regex.pipe",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/replace",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/safe",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":734,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"pipes/MonitorNamePipe.html":{},"pipes/OptionsNamePipePipe.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{}}}],["place",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["placecontentbreakpointmonitortemplate",{"_index":710,"title":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["placewithlistcolor",{"_index":650,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["point",{"_index":636,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":2354,"title":{},"body":{"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["popper.js",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":2453,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["posattr",{"_index":2461,"title":{},"body":{"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{}}}],["position",{"_index":960,"title":{},"body":{"components/MainFrameComponent.html":{},"components/TabsContainer.html":{}}}],["post",{"_index":231,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["postdata",{"_index":229,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["pre",{"_index":1212,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["pred",{"_index":685,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["predbindelem",{"_index":688,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["pressed",{"_index":1879,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["private",{"_index":145,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{}}}],["process",{"_index":1392,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["processing",{"_index":1352,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["prod",{"_index":2793,"title":{},"body":{"index.html":{}}}],["product",{"_index":1950,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["production",{"_index":2794,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress/kendo",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["project",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"index.html":{}}}],["project.load",{"_index":1125,"title":{},"body":{"classes/Message.html":{}}}],["project_load",{"_index":1067,"title":{},"body":{"classes/Message.html":{}}}],["projectconsolecomponent",{"_index":327,"title":{"components/ProjectConsoleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectdata",{"_index":1021,"title":{},"body":{"components/MainToolbarComponent.html":{},"injectables/ValidationService.html":{}}}],["projectdetailscomponent",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectexplorercomponent",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectmonitorscomponent",{"_index":334,"title":{"components/ProjectMonitorsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectservice",{"_index":390,"title":{"injectables/ProjectService.html":{}},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreeblocknodecomponent",{"_index":336,"title":{"components/ProjectTreeBlockNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreecomponent",{"_index":338,"title":{"components/ProjectTreeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreedeclarationnodecomponent",{"_index":340,"title":{"components/ProjectTreeDeclarationNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreemonitorblocknodecomponent",{"_index":342,"title":{"components/ProjectTreeMonitorblockNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreemonitornodecomponent",{"_index":344,"title":{"components/ProjectTreeMonitorNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreeoptionnodecomponent",{"_index":346,"title":{"components/ProjectTreeOptionNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreeoptionsnodecomponent",{"_index":348,"title":{"components/ProjectTreeOptionsNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreepagenodecomponent",{"_index":349,"title":{"components/ProjectTreePageNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projecttreetoolbarcomponent",{"_index":351,"title":{"components/ProjectTreeToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectxml",{"_index":1685,"title":{},"body":{"injectables/ProjectService.html":{}}}],["promise((resolve",{"_index":239,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CpnServerUrl.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{}}}],["propertiespanelcomponent",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["protractor",{"_index":504,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providers",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectConsoleComponent.html":{},"modules/TabModule.html":{},"overview.html":{}}}],["public",{"_index":27,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["purple",{"_index":2421,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["px",{"_index":1873,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["q",{"_index":2189,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["querylist",{"_index":812,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["radius",{"_index":2286,"title":{},"body":{"components/TabComponent.html":{},"components/TabsContainer.html":{}}}],["reader",{"_index":1707,"title":{},"body":{"injectables/ProjectService.html":{}}}],["reader.onload",{"_index":1710,"title":{},"body":{"injectables/ProjectService.html":{}}}],["reader.readastext(file",{"_index":1709,"title":{},"body":{"injectables/ProjectService.html":{}}}],["reader.result",{"_index":1711,"title":{},"body":{"injectables/ProjectService.html":{}}}],["readme",{"_index":2807,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":517,"title":{},"body":{"classes/AppVersion.html":{},"components/TextEditRowComponent.html":{}}}],["ready",{"_index":159,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["readydata",{"_index":14,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SimulationPanelComponent.html":{}}}],["readydata[id",{"_index":158,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["real",{"_index":1274,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["realtimestamp",{"_index":1273,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["reason",{"_index":2122,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["record",{"_index":1951,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["recordfieldlist",{"_index":1993,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["red",{"_index":728,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["redo",{"_index":1034,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["reg",{"_index":2057,"title":{},"body":{"pipes/RegexPipe.html":{}}}],["reg.exec(value",{"_index":2058,"title":{},"body":{"pipes/RegexPipe.html":{}}}],["regex",{"_index":1928,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"pipes/RegexPipe.html":{}}}],["regex.exec(str",{"_index":1976,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["regex.exec(value",{"_index":1930,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["regex.lastindex",{"_index":1987,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["regexp('\\\\b",{"_index":740,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["regexp(/(?record)\\s+(?[^;]+)/g).exec(value",{"_index":1988,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["regexp(/[^\\s]+\\s+[^\\s",{"_index":1929,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"pipes/RegexPipe.html":{}}}],["regexpipe",{"_index":384,"title":{"pipes/RegexPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/RegexPipe.html":{},"coverage.html":{},"overview.html":{}}}],["reject",{"_index":240,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["reject('error",{"_index":241,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["reject(error",{"_index":244,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["relative",{"_index":2343,"title":{},"body":{"components/TabsContainer.html":{}}}],["reload",{"_index":1035,"title":{},"body":{"components/MainToolbarComponent.html":{},"index.html":{}}}],["reloadproject",{"_index":994,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["remove",{"_index":1934,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["repavg",{"_index":1284,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repciavg",{"_index":1286,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repcount",{"_index":1289,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repeat",{"_index":2244,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["repfirstval",{"_index":1291,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["replacespaces",{"_index":2062,"title":{},"body":{"pipes/ReplaceSpacesPipe.html":{}}}],["replacespacespipe",{"_index":385,"title":{"pipes/ReplaceSpacesPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ReplaceSpacesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["replastval",{"_index":1294,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["replication",{"_index":2156,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["repmax",{"_index":1296,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repmin",{"_index":1298,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repssqdev",{"_index":1303,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repssquare",{"_index":1300,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repstddev",{"_index":1305,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repsum",{"_index":1307,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["repvariance",{"_index":1308,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["require",{"_index":2694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('deep",{"_index":2586,"title":{},"body":{"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["require('typeface",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["require.context",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":103,"title":{},"body":{"injectables/AccessCpnService.html":{},"modules/AppModule.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"modules/TabModule.html":{},"overview.html":{}}}],["resetsim",{"_index":39,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["resize",{"_index":1662,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["resolve(data",{"_index":243,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["response",{"_index":1759,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["responsetype",{"_index":1758,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["result",{"_index":245,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.cpnelement",{"_index":1960,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["result.cpnelement.__text",{"_index":1602,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["result.cpnelement[key",{"_index":1961,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["result.cpntype",{"_index":1891,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["result.groups",{"_index":1989,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["result.groups.record",{"_index":1990,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["result.groups.recordfield",{"_index":1991,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["result.then((result",{"_index":2112,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["results",{"_index":247,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":152,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/AppPage.html":{},"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["returns",{"_index":57,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ApplicationSettingsComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["rewind",{"_index":2233,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["rgb(217",{"_index":2521,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["right",{"_index":2256,"title":{},"body":{"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["rightpart",{"_index":1948,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["rightpart.match(/(\\w+){1}\\s+((((\\w+\\s*\\:\\s*\\w+)|(\\w+))((\\s*[\\*\\+]\\s*)((\\w+\\s*\\:\\s*\\w+)|(\\w+)))+)|(\\w+))/g",{"_index":1953,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["rightsplitpanesize",{"_index":924,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["root",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["routermodule",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":511,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"components/TextEditRowComponent.html":{}}}],["row'},{'name",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["row.html",{"_index":2371,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.scss",{"_index":2370,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts",{"_index":2369,"title":{},"body":{"components/TextEditRowComponent.html":{},"coverage.html":{}}}],["row.ts:10",{"_index":2382,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:100",{"_index":2398,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:11",{"_index":2383,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:12",{"_index":2381,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:13",{"_index":2380,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:14",{"_index":2384,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:15",{"_index":2386,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:16",{"_index":2385,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:17",{"_index":2379,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:19",{"_index":2388,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:22",{"_index":2425,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:41",{"_index":2390,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:50",{"_index":2392,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:54",{"_index":2395,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:77",{"_index":2393,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["row.ts:9",{"_index":2387,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["rows",{"_index":574,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["run",{"_index":2241,"title":{},"body":{"components/SimulationPanelComponent.html":{},"index.html":{}}}],["runmultistep",{"_index":2163,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["runmultistepff",{"_index":2164,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["running",{"_index":2795,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2584,"title":{},"body":{"injectables/ValidationService.html":{},"dependencies.html":{}}}],["s",{"_index":1992,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["s)\\n",{"_index":699,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["s.match(/\\w+\\s*\\:\\s*\\w+/g",{"_index":1994,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["safehtml",{"_index":2069,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpipe",{"_index":386,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SafeHtmlPipe.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizer:domsanitizer",{"_index":2073,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["sans",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["save",{"_index":2128,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["saveastext",{"_index":2082,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["saveastext(chararray",{"_index":2092,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["saveediteddata",{"_index":534,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/MlEditorComponent.html":{}}}],["saveediteddata(event",{"_index":544,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/MlEditorComponent.html":{}}}],["saveerrordata",{"_index":40,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["saveerrordata(data",{"_index":106,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["savelocalsettings",{"_index":2136,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveproject",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["saveprojectbuttoncomponent",{"_index":353,"title":{"components/SaveprojectButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["saver",{"_index":2099,"title":{},"body":{"components/SaveprojectButtonComponent.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":2786,"title":{},"body":{"index.html":{}}}],["scrolling",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["scrollview",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["scrollviewmodule",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["search",{"_index":1230,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["seconds",{"_index":1449,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["see",{"_index":2077,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["select",{"_index":2238,"title":{},"body":{"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{}}}],["selectdeclarationnode",{"_index":1180,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["selectdeclarationnode(event",{"_index":1189,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["selected",{"_index":1262,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["selected:any",{"_index":2516,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["selectedold",{"_index":1793,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["selectedtab",{"_index":2300,"title":{},"body":{"components/TabsContainer.html":{}}}],["selection",{"_index":1228,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["selector",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["selecttab",{"_index":2305,"title":{},"body":{"components/TabsContainer.html":{}}}],["selecttab(tab",{"_index":2320,"title":{},"body":{"components/TabsContainer.html":{}}}],["self",{"_index":2348,"title":{},"body":{"components/TabsContainer.html":{}}}],["send",{"_index":883,"title":{},"body":{"injectables/EventService.html":{}}}],["send(id",{"_index":888,"title":{},"body":{"injectables/EventService.html":{}}}],["sender",{"_index":1610,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["serve",{"_index":2781,"title":{},"body":{"index.html":{}}}],["server",{"_index":138,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/CpnServerUrl.html":{},"components/ProjectConsoleComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"index.html":{}}}],["server.get.bindings",{"_index":1127,"title":{},"body":{"classes/Message.html":{}}}],["server.get.sim.state",{"_index":1129,"title":{},"body":{"classes/Message.html":{}}}],["server.get.token.mark",{"_index":1131,"title":{},"body":{"classes/Message.html":{}}}],["server.get.transitions",{"_index":1133,"title":{},"body":{"classes/Message.html":{}}}],["server.init.net",{"_index":1135,"title":{},"body":{"classes/Message.html":{}}}],["server.init.net.done",{"_index":1137,"title":{},"body":{"classes/Message.html":{}}}],["server.init.net.error",{"_index":1139,"title":{},"body":{"classes/Message.html":{}}}],["server.init.net.start",{"_index":1141,"title":{},"body":{"classes/Message.html":{}}}],["server.init.sim",{"_index":1143,"title":{},"body":{"classes/Message.html":{}}}],["server.init.sim.done",{"_index":1145,"title":{},"body":{"classes/Message.html":{}}}],["server.init.sim.error",{"_index":1147,"title":{},"body":{"classes/Message.html":{}}}],["server.init.sim.start",{"_index":1149,"title":{},"body":{"classes/Message.html":{}}}],["server_get_bindings",{"_index":1068,"title":{},"body":{"classes/Message.html":{}}}],["server_get_sim_state",{"_index":1069,"title":{},"body":{"classes/Message.html":{}}}],["server_get_token_marks",{"_index":1070,"title":{},"body":{"classes/Message.html":{}}}],["server_get_transitions",{"_index":1071,"title":{},"body":{"classes/Message.html":{}}}],["server_init_net",{"_index":149,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/Message.html":{}}}],["server_init_net_done",{"_index":1072,"title":{},"body":{"classes/Message.html":{}}}],["server_init_net_error",{"_index":1073,"title":{},"body":{"classes/Message.html":{}}}],["server_init_net_start",{"_index":1074,"title":{},"body":{"classes/Message.html":{}}}],["server_init_sim",{"_index":1075,"title":{},"body":{"classes/Message.html":{}}}],["server_init_sim_done",{"_index":1076,"title":{},"body":{"classes/Message.html":{}}}],["server_init_sim_error",{"_index":1077,"title":{},"body":{"classes/Message.html":{}}}],["server_init_sim_start",{"_index":1078,"title":{},"body":{"classes/Message.html":{}}}],["service",{"_index":1665,"title":{},"body":{"injectables/ProjectService.html":{}}}],["services/access",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{}}}],["services/event.service",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["services/model.service",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/SaveprojectButtonComponent.html":{}}}],["services/project.service",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{}}}],["services/settings.service",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{}}}],["services/validation.service",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{}}}],["session",{"_index":74,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["sessionid",{"_index":15,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["set",{"_index":756,"title":{},"body":{"classes/CpnServerUrl.html":{}}}],["set('accept",{"_index":1736,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["set('access",{"_index":1732,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["set(url",{"_index":759,"title":{},"body":{"classes/CpnServerUrl.html":{}}}],["setcreatenodeintent",{"_index":1492,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["setcreatenodeintent(enable",{"_index":1522,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["setcurrentelement",{"_index":1677,"title":{},"body":{"injectables/ProjectService.html":{}}}],["setcurrentelement(element",{"_index":1692,"title":{},"body":{"injectables/ProjectService.html":{}}}],["setcursor",{"_index":2194,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["setissimulation",{"_index":41,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["setissimulation(state",{"_index":109,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["setmode",{"_index":2165,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["setmode(mode",{"_index":2172,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["settimeout",{"_index":862,"title":{},"body":{"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectTreeComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["setting",{"_index":2559,"title":{},"body":{"injectables/ValidationService.html":{}}}],["settings",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/SettingsService.html":{}}}],["settings'},{'name",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["settings.component",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.html",{"_index":526,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.scss",{"_index":525,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts",{"_index":522,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:11",{"_index":550,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":549,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:13",{"_index":537,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":543,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:23",{"_index":542,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:63",{"_index":546,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:75",{"_index":538,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:78",{"_index":548,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:82",{"_index":539,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.ts",{"_index":2655,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["settings/application",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"coverage.html":{}}}],["settingsservice",{"_index":271,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":1660,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{}}}],["shape.hover",{"_index":1151,"title":{},"body":{"classes/Message.html":{}}}],["shape.out",{"_index":1153,"title":{},"body":{"classes/Message.html":{}}}],["shape.select",{"_index":1155,"title":{},"body":{"classes/Message.html":{}}}],["shape_hover",{"_index":1079,"title":{},"body":{"classes/Message.html":{}}}],["shape_out",{"_index":1080,"title":{},"body":{"classes/Message.html":{}}}],["shape_select",{"_index":1081,"title":{},"body":{"classes/Message.html":{}}}],["shapetypelist",{"_index":668,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["shapetypelist.push('group",{"_index":681,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["shapetypelist.push('place",{"_index":678,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["shapetypelist.push('placewithlistcolor",{"_index":680,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["shapetypelist.push('transition",{"_index":675,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["shift",{"_index":2441,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["showbullet",{"_index":2505,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["showtable",{"_index":529,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["silver",{"_index":2407,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["sim.cpn",{"_index":1754,"title":{},"body":{"injectables/ProjectService.html":{}}}],["siminitialized",{"_index":16,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["simplechanges",{"_index":1833,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["simulation",{"_index":61,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["simulation.select.binding",{"_index":1157,"title":{},"body":{"classes/Message.html":{}}}],["simulation.started",{"_index":1159,"title":{},"body":{"classes/Message.html":{}}}],["simulation.stoped",{"_index":1161,"title":{},"body":{"classes/Message.html":{}}}],["simulation.update.state",{"_index":1163,"title":{},"body":{"classes/Message.html":{}}}],["simulation_select_binding",{"_index":1082,"title":{},"body":{"classes/Message.html":{}}}],["simulation_started",{"_index":1083,"title":{},"body":{"classes/Message.html":{}}}],["simulation_stoped",{"_index":1084,"title":{},"body":{"classes/Message.html":{}}}],["simulation_update_state",{"_index":1085,"title":{},"body":{"classes/Message.html":{}}}],["simulationconfig",{"_index":2157,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["simulationpanelcomponent",{"_index":355,"title":{"components/SimulationPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simulator",{"_index":88,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{}}}],["single",{"_index":2234,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["single_step",{"_index":2158,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["single_step_choose_binding",{"_index":2159,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["size",{"_index":621,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"components/MlEditorComponent.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["sm",{"_index":2050,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["solid",{"_index":969,"title":{},"body":{"components/MainFrameComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"dependencies.html":{}}}],["something",{"_index":1901,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/Constants.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"index.html":{}}}],["space",{"_index":1211,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["spaces",{"_index":1938,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["spaces.pipe",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["spaces.pipe.ts",{"_index":2061,"title":{},"body":{"pipes/ReplaceSpacesPipe.html":{},"coverage.html":{}}}],["spaces.pipe.ts:5",{"_index":2063,"title":{},"body":{"pipes/ReplaceSpacesPipe.html":{}}}],["span",{"_index":2245,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["spec\\.ts",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["split",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"components/MainFrameComponent.html":{},"dependencies.html":{}}}],["squares",{"_index":1302,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["src/.../default",{"_index":2767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../monitors.ts",{"_index":2768,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":2765,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../validation.service.ts",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/actions/openproject",{"_index":1247,"title":{},"body":{"components/OpenprojectButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/saveproject",{"_index":2079,"title":{},"body":{"components/SaveprojectButtonComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.version.ts",{"_index":515,"title":{},"body":{"classes/AppVersion.html":{},"coverage.html":{}}}],["src/app/app.version.ts:1",{"_index":520,"title":{},"body":{"classes/AppVersion.html":{}}}],["src/app/application",{"_index":521,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"coverage.html":{}}}],["src/app/common/block",{"_index":589,"title":{},"body":{"components/BlockHeaderComponent.html":{},"coverage.html":{}}}],["src/app/common/constants.ts",{"_index":744,"title":{},"body":{"classes/Constants.html":{},"coverage.html":{}}}],["src/app/common/constants.ts:2",{"_index":746,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/common/default",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/common/message.ts",{"_index":1050,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/app/common/message.ts:11",{"_index":1156,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:12",{"_index":1152,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:13",{"_index":1154,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:15",{"_index":1122,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:16",{"_index":1120,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:17",{"_index":1116,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:18",{"_index":1118,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:19",{"_index":1124,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:2",{"_index":1126,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:21",{"_index":1170,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:22",{"_index":1166,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:23",{"_index":1168,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:25",{"_index":1091,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:27",{"_index":1136,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:28",{"_index":1142,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:29",{"_index":1138,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:30",{"_index":1140,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:32",{"_index":1144,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:33",{"_index":1150,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:34",{"_index":1146,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:35",{"_index":1148,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:37",{"_index":1132,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:38",{"_index":1134,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:39",{"_index":1128,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:4",{"_index":1094,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:40",{"_index":1130,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:42",{"_index":1160,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:43",{"_index":1162,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:44",{"_index":1158,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:45",{"_index":1164,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:47",{"_index":1112,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:48",{"_index":1108,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:49",{"_index":1106,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:5",{"_index":1096,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:50",{"_index":1110,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:51",{"_index":1114,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:53",{"_index":1092,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:54",{"_index":1089,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:6",{"_index":1100,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:7",{"_index":1104,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:8",{"_index":1102,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/message.ts:9",{"_index":1098,"title":{},"body":{"classes/Message.html":{}}}],["src/app/common/monitors.ts",{"_index":599,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/monitors.ts:102",{"_index":614,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:103",{"_index":615,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:104",{"_index":613,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:105",{"_index":609,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:107",{"_index":611,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:111",{"_index":610,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:116",{"_index":608,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:119",{"_index":612,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:125",{"_index":2534,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:126",{"_index":2535,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:127",{"_index":2533,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:128",{"_index":2529,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:130",{"_index":2531,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:134",{"_index":2530,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:139",{"_index":2528,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:142",{"_index":2532,"title":{},"body":{"classes/UserDefinedMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:148",{"_index":2636,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:149",{"_index":2637,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:150",{"_index":2635,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:151",{"_index":2631,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:153",{"_index":2633,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:157",{"_index":2632,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:162",{"_index":2630,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:165",{"_index":2634,"title":{},"body":{"classes/WriteInFileMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:171",{"_index":1048,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:172",{"_index":1049,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:173",{"_index":1047,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:174",{"_index":1043,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:175",{"_index":1045,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:176",{"_index":1044,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:177",{"_index":1042,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:178",{"_index":1046,"title":{},"body":{"classes/MarkingSizeMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:182",{"_index":910,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:183",{"_index":911,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:184",{"_index":909,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:185",{"_index":905,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:186",{"_index":907,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:187",{"_index":906,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:188",{"_index":904,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:189",{"_index":908,"title":{},"body":{"classes/ListLengthDataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:193",{"_index":753,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:194",{"_index":754,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:195",{"_index":752,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:196",{"_index":748,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:197",{"_index":750,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:198",{"_index":749,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:199",{"_index":747,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:200",{"_index":751,"title":{},"body":{"classes/CountTransitionOccurrencesMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:204",{"_index":1341,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:205",{"_index":1342,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:206",{"_index":1340,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:207",{"_index":1336,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:208",{"_index":1338,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:209",{"_index":1337,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:210",{"_index":1335,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:211",{"_index":1339,"title":{},"body":{"classes/PlaceContentBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:215",{"_index":2500,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:216",{"_index":2501,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:217",{"_index":2499,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:218",{"_index":2495,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:219",{"_index":2497,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:220",{"_index":2496,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:221",{"_index":2494,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:222",{"_index":2498,"title":{},"body":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:68",{"_index":1246,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:69",{"_index":1245,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:70",{"_index":1244,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:71",{"_index":1240,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:72",{"_index":1242,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:73",{"_index":1241,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:74",{"_index":1239,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:75",{"_index":1243,"title":{},"body":{"interfaces/MonitorTemplate.html":{}}}],["src/app/common/monitors.ts:79",{"_index":769,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:80",{"_index":770,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:81",{"_index":768,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:82",{"_index":764,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:84",{"_index":766,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:88",{"_index":765,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:93",{"_index":763,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/monitors.ts:96",{"_index":767,"title":{},"body":{"classes/DataCollectionMonitorTemplate.html":{}}}],["src/app/common/utils",{"_index":2101,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["src/app/common/utils.ts",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/editor",{"_index":771,"title":{},"body":{"components/EditorPanelComponent.html":{},"coverage.html":{}}}],["src/app/main",{"_index":912,"title":{},"body":{"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"coverage.html":{}}}],["src/app/ml",{"_index":1171,"title":{},"body":{"components/MlEditorComponent.html":{},"coverage.html":{}}}],["src/app/model",{"_index":1220,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{},"coverage.html":{}}}],["src/app/pipes/color",{"_index":713,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"coverage.html":{}}}],["src/app/pipes/monitor",{"_index":1231,"title":{},"body":{"pipes/MonitorNamePipe.html":{},"coverage.html":{}}}],["src/app/pipes/options",{"_index":1268,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{},"coverage.html":{}}}],["src/app/pipes/regex.pipe.ts",{"_index":2055,"title":{},"body":{"pipes/RegexPipe.html":{},"coverage.html":{}}}],["src/app/pipes/regex.pipe.ts:6",{"_index":2056,"title":{},"body":{"pipes/RegexPipe.html":{}}}],["src/app/pipes/replace",{"_index":2060,"title":{},"body":{"pipes/ReplaceSpacesPipe.html":{},"coverage.html":{}}}],["src/app/pipes/safe",{"_index":2067,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["src/app/project",{"_index":1343,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["src/app/properties",{"_index":2368,"title":{},"body":{"components/TextEditRowComponent.html":{},"coverage.html":{}}}],["src/app/services/access",{"_index":6,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SaveprojectButtonComponent.html":{},"coverage.html":{}}}],["src/app/services/event.service.ts",{"_index":881,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/services/event.service.ts:16",{"_index":887,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:22",{"_index":891,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:7",{"_index":884,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/model.service.ts",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["src/app/services/project.service.ts",{"_index":1663,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/services/project.service.ts:118",{"_index":1681,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:17",{"_index":1695,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:18",{"_index":1696,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:19",{"_index":1694,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:20",{"_index":1678,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:33",{"_index":1680,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:37",{"_index":1693,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:42",{"_index":1679,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:52",{"_index":1683,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:63",{"_index":1691,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:80",{"_index":1686,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/settings.service.ts",{"_index":2133,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings.service.ts:24",{"_index":2138,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:28",{"_index":2140,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:32",{"_index":2139,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:7",{"_index":2137,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/validation.service.ts",{"_index":2536,"title":{},"body":{"injectables/ValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/validation.service.ts:102",{"_index":2550,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:16",{"_index":2579,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:17",{"_index":2577,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:18",{"_index":2578,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:20",{"_index":2564,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:35",{"_index":2575,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:46",{"_index":2567,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:47",{"_index":2566,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:48",{"_index":2565,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:49",{"_index":2560,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:50",{"_index":2549,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:69",{"_index":2556,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:74",{"_index":2555,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:82",{"_index":2557,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/services/validation.service.ts:88",{"_index":2553,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/simulation",{"_index":2151,"title":{},"body":{"components/SimulationPanelComponent.html":{},"coverage.html":{}}}],["src/cpn",{"_index":137,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/CpnServerUrl.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tabs/tabs",{"_index":2293,"title":{},"body":{"modules/TabModule.html":{},"components/TabsContainer.html":{},"coverage.html":{}}}],["src/lib/tabs/tabs/tab.component.ts",{"_index":2257,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["src/lib/tabs/tabs/tab.component.ts:13",{"_index":2268,"title":{},"body":{"components/TabComponent.html":{}}}],["src/lib/tabs/tabs/tab.component.ts:14",{"_index":2271,"title":{},"body":{"components/TabComponent.html":{}}}],["src/lib/tabs/tabs/tab.component.ts:15",{"_index":2269,"title":{},"body":{"components/TabComponent.html":{}}}],["src/lib/tabs/tabs/tab.component.ts:16",{"_index":2270,"title":{},"body":{"components/TabComponent.html":{}}}],["src/lib/tabs/tabs/tab.component.ts:18",{"_index":2266,"title":{},"body":{"components/TabComponent.html":{}}}],["src/lib/tabs/tabs/tab.component.ts:28",{"_index":2272,"title":{},"body":{"components/TabComponent.html":{}}}],["src/lib/x2js/xml2json.js",{"_index":128,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["src/test.ts",{"_index":2692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssqdev",{"_index":1317,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["ssquare",{"_index":1316,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["standard",{"_index":1306,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["start",{"_index":169,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/MainToolbarComponent.html":{},"components/TabsContainer.html":{}}}],["started",{"_index":2775,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":2607,"title":{},"body":{"injectables/ValidationService.html":{}}}],["state",{"_index":87,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["statedata",{"_index":17,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["statements",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":516,"title":{},"body":{"classes/AppVersion.html":{},"classes/CpnServerUrl.html":{},"classes/Message.html":{}}}],["stddev",{"_index":1318,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["step",{"_index":62,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/MainToolbarComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["steps",{"_index":2180,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["stop",{"_index":703,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["stored",{"_index":2791,"title":{},"body":{"index.html":{}}}],["str",{"_index":1974,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["string",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"components/SaveprojectButtonComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["stringtype",{"_index":1968,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["styles",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["styleurls",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["sub",{"_index":1752,"title":{},"body":{"injectables/ProjectService.html":{}}}],["subpage",{"_index":809,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["subpageinfo",{"_index":2475,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["subpages",{"_index":1794,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["subscribe",{"_index":187,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["success",{"_index":188,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ProjectConsoleComponent.html":{}}}],["sum",{"_index":1301,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["support",{"_index":2808,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2707,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":656,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["t",{"_index":1618,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["tab",{"_index":858,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{}}}],["tab'},{'name",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["tab.active",{"_index":2330,"title":{},"body":{"components/TabsContainer.html":{}}}],["tab.component.html",{"_index":2260,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.component.scss",{"_index":2259,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.id",{"_index":877,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TabsContainer.html":{}}}],["tab.tabtitle",{"_index":860,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TabsContainer.html":{}}}],["tabarray",{"_index":794,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["tabarray.push",{"_index":861,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["tabcomponent",{"_index":356,"title":{"components/TabComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":573,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TextEditRowComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["tabmodule",{"_index":388,"title":{"modules/TabModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{},"modules.html":{},"overview.html":{}}}],["tabs",{"_index":2267,"title":{},"body":{"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{}}}],["tabs'},{'name",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["tabs.addtab(this",{"_index":2274,"title":{},"body":{"components/TabComponent.html":{}}}],["tabs.container.html",{"_index":2298,"title":{},"body":{"components/TabsContainer.html":{}}}],["tabs.container.scss",{"_index":2297,"title":{},"body":{"components/TabsContainer.html":{}}}],["tabs/tab.component",{"_index":2295,"title":{},"body":{"modules/TabModule.html":{},"components/TabsContainer.html":{}}}],["tabs__panel",{"_index":2282,"title":{},"body":{"components/TabComponent.html":{},"components/TabsContainer.html":{}}}],["tabs__tab",{"_index":2346,"title":{},"body":{"components/TabsContainer.html":{}}}],["tabs__tab.active",{"_index":2355,"title":{},"body":{"components/TabsContainer.html":{}}}],["tabscomponent",{"_index":780,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["tabscontainer",{"_index":358,"title":{"components/TabsContainer.html":{}},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabtitle",{"_index":2264,"title":{},"body":{"components/TabComponent.html":{}}}],["target",{"_index":2436,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["td",{"_index":568,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["td.ml",{"_index":1644,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["td.node",{"_index":1648,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["td.tablebutton",{"_index":1655,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["teal",{"_index":2409,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["tebp",{"_index":637,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["templateurl",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["test",{"_index":1746,"title":{},"body":{"injectables/ProjectService.html":{},"index.html":{}}}],["testprojectjson",{"_index":1724,"title":{},"body":{"injectables/ProjectService.html":{}}}],["tests",{"_index":2797,"title":{},"body":{"index.html":{}}}],["text",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["text/xml",{"_index":1716,"title":{},"body":{"injectables/ProjectService.html":{}}}],["textattr",{"_index":2468,"title":{},"body":{"components/TextEditRowComponent.html":{},"injectables/ValidationService.html":{}}}],["texteditrowcomponent",{"_index":360,"title":{"components/TextEditRowComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textvalue",{"_index":1177,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["this.accesscpnservice.domultistepff(options",{"_index":2232,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.dostep('id1412328496",{"_index":1012,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.accesscpnservice.dostep('multistep",{"_index":2219,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.dostep(element.cpnelement._id",{"_index":2202,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.dostep(transid",{"_index":2218,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.dostepwithbinding(element.cpnelement._id",{"_index":2207,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.getbindings(element.cpnelement._id",{"_index":2203,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.geterrordata",{"_index":1403,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.accesscpnservice.getreadydata",{"_index":2215,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.gettokenmarks",{"_index":1409,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.accesscpnservice.gettransitions",{"_index":1410,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.accesscpnservice.getxmlfromserver().then((data",{"_index":2119,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.accesscpnservice.initsim",{"_index":1014,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["this.accesscpnservice.issimulation",{"_index":2200,"title":{},"body":{"components/SimulationPanelComponent.html":{},"injectables/ValidationService.html":{}}}],["this.accesscpnservice.resetsim",{"_index":1730,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.accesscpnservice.setissimulation(false",{"_index":1011,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.accesscpnservice.setissimulation(true",{"_index":1016,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.addmltab(this.mltabarray",{"_index":879,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.addtab(this.modeltabarray",{"_index":872,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.appsettings",{"_index":551,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/SettingsService.html":{}}}],["this.appsettingskeys",{"_index":553,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.block",{"_index":1782,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{}}}],["this.block._id",{"_index":1784,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{}}}],["this.centersplitpanesize",{"_index":952,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.changed.emit(this.object[this.field",{"_index":2447,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["this.changename(event.id",{"_index":847,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.changeshtml",{"_index":1384,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.changeshtml.push",{"_index":1444,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.checkvalidation",{"_index":2598,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.checkvalidationbusy",{"_index":2606,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.color2name(event.target.value",{"_index":2446,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["this.colornames[name",{"_index":2428,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["this.colornames[name].tolowercase",{"_index":2429,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["this.config",{"_index":946,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.consolesplitpanesize",{"_index":956,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.cpnelement",{"_index":1196,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/TreeNodeComponent.html":{}}}],["this.cpnelement._disabled",{"_index":1631,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.cpnelement.node",{"_index":1593,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.cpnelement.option",{"_index":1553,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.cpnet",{"_index":1849,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.cpnet.globbox",{"_index":1858,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.cpntype",{"_index":1197,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["this.createnodeintent",{"_index":1549,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.currentselectedelement",{"_index":1706,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.currenttabchange.emit(tab",{"_index":2331,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.dblclick.emit(this.object[this.field",{"_index":2449,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["this.declaration",{"_index":1957,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.declaration._id",{"_index":1962,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.declaration.layout",{"_index":1923,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.deletetab(event.id",{"_index":835,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.differ",{"_index":2010,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["this.differ.diff(this.monitor",{"_index":2014,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["this.differs.find({}).create",{"_index":2011,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["this.disabled",{"_index":2332,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.editorsplitpanesize",{"_index":957,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.electronservice.shell.openexternal('http://yandex.ru",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errordata",{"_index":153,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.errordata[issue.id",{"_index":207,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.events",{"_index":894,"title":{},"body":{"injectables/EventService.html":{}}}],["this.events.addlistener(id",{"_index":897,"title":{},"body":{"injectables/EventService.html":{}}}],["this.events.emit(id",{"_index":899,"title":{},"body":{"injectables/EventService.html":{}}}],["this.events.setmaxlisteners(100",{"_index":895,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventservice.on(message.declaration_changed",{"_index":1551,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.eventservice.on(message.model_changed_details",{"_index":1433,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.model_editor_fullscreen",{"_index":949,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.eventservice.on(message.model_reload",{"_index":1545,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"injectables/ValidationService.html":{}}}],["this.eventservice.on(message.monitor_open",{"_index":1546,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.eventservice.on(message.page_change_name",{"_index":846,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.eventservice.on(message.page_delete",{"_index":834,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.eventservice.on(message.page_open",{"_index":831,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.eventservice.on(message.project_load",{"_index":825,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"injectables/ValidationService.html":{}}}],["this.eventservice.on(message.server_get_token_marks",{"_index":1428,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.server_get_transitions",{"_index":1430,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.server_init_net",{"_index":146,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.on(message.server_init_net_done",{"_index":1394,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.server_init_net_error",{"_index":1411,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.server_init_net_start",{"_index":1390,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.server_init_sim_done",{"_index":1015,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.server_init_sim_error",{"_index":1423,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.server_init_sim_start",{"_index":1417,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.eventservice.on(message.shape_hover",{"_index":2192,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.eventservice.on(message.shape_select",{"_index":1548,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/SimulationPanelComponent.html":{}}}],["this.eventservice.on(message.simulation_select_binding",{"_index":2204,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.eventservice.on(message.simulation_started",{"_index":2190,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.eventservice.on(message.simulation_stoped",{"_index":2191,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.eventservice.on(message.tree_select_declaration_node",{"_index":828,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MlEditorComponent.html":{}}}],["this.eventservice.send(message.declaration_changed",{"_index":1203,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["this.eventservice.send(message.model_changed",{"_index":1205,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["this.eventservice.send(message.model_changed_details",{"_index":2623,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.eventservice.send(message.model_editor_fullscreen",{"_index":1026,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.eventservice.send(message.model_save_backup",{"_index":2621,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.eventservice.send(message.model_update_diagram",{"_index":1628,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.eventservice.send(message.monitor_changed",{"_index":1633,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.eventservice.send(message.monitor_deleted",{"_index":1636,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.eventservice.send(message.monitor_open",{"_index":1856,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.eventservice.send(message.monitor_set_available_nodes",{"_index":1621,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.eventservice.send(message.page_open",{"_index":1855,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.eventservice.send(message.project_load",{"_index":1024,"title":{},"body":{"components/MainToolbarComponent.html":{},"injectables/ProjectService.html":{}}}],["this.eventservice.send(message.server_get_bindings",{"_index":236,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_get_token_marks",{"_index":217,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_get_transitions",{"_index":219,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_init_net",{"_index":1020,"title":{},"body":{"components/MainToolbarComponent.html":{},"injectables/ValidationService.html":{}}}],["this.eventservice.send(message.server_init_net_done",{"_index":190,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_init_net_error",{"_index":198,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_init_net_start",{"_index":177,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_init_sim_done",{"_index":213,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_init_sim_error",{"_index":222,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.server_init_sim_start",{"_index":210,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.simulation_started",{"_index":1017,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.eventservice.send(message.simulation_stoped",{"_index":1018,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.eventservice.send(message.simulation_update_state",{"_index":238,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.eventservice.send(message.tree_select_declaration_node",{"_index":1609,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.expanded",{"_index":1843,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.expanded['declarations",{"_index":1865,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.expanded['pages",{"_index":1847,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.expanded['project",{"_index":1848,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.expanded[block._id",{"_index":1866,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.expanded[this.id",{"_index":2517,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["this.explorerwidth",{"_index":958,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.filename",{"_index":2118,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.filenamemodel",{"_index":2105,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.filenamemodel}.cpn",{"_index":2123,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.filterdifferences(differences",{"_index":2615,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.filtertext",{"_index":2048,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["this.focused",{"_index":1927,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.generateusersession",{"_index":208,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.geometrykeylist",{"_index":2616,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.getoption('logging",{"_index":1568,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.getoption('timed",{"_index":1566,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.getoption(name",{"_index":1559,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.getsimstate",{"_index":228,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.gettext",{"_index":1970,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.gettokenmarks",{"_index":220,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.gettransitions",{"_index":221,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.gotodeclaration('id89457845",{"_index":1852,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.gotodeclaration(newcpnelement._id",{"_index":1897,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.gotoeditnode(node.id",{"_index":1604,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.handlers",{"_index":901,"title":{},"body":{"injectables/EventService.html":{}}}],["this.handlers.push",{"_index":896,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(url",{"_index":212,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["this.http.post(url",{"_index":182,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.id",{"_index":2518,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["this.iftabselected",{"_index":2334,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.init",{"_index":2591,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.initnet(event.projectdata",{"_index":150,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.initnetprocessing",{"_index":166,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.initsim",{"_index":195,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.initsimprocessing",{"_index":209,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.issimulation",{"_index":154,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.isstart",{"_index":1013,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.issubpage",{"_index":2029,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["this.lastprojectdata",{"_index":2601,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.leftsplitpanesize",{"_index":954,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.loaddefaultsettings",{"_index":2145,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.loademptyproject",{"_index":1702,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.loadpages",{"_index":1851,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.loadproject",{"_index":1838,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.loadproject(event.project",{"_index":827,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{}}}],["this.loadproject(this.modelservice.project",{"_index":842,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.loadprojectxml(file.name",{"_index":1713,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.loadprojectxml(modelfile",{"_index":1762,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.log('simulator",{"_index":1418,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.log('validation",{"_index":1391,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logchanges(event.changespath",{"_index":1435,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logcolor(text",{"_index":1442,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logerror('complete",{"_index":1401,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logerror('simulator",{"_index":1425,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logerror('validation",{"_index":1414,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logerror(event.data.error.stacktrace",{"_index":1426,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logerror(id",{"_index":1407,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.loghtml",{"_index":1383,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.loghtml.push",{"_index":1436,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logsuccess('complete",{"_index":1398,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logsuccess('project",{"_index":1386,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logsuccess('ready",{"_index":1431,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logsuccess('simulator",{"_index":1421,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.logsuccess('tokens",{"_index":1429,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.mltabarray",{"_index":850,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modal.open(modalname",{"_index":2108,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.mode",{"_index":2197,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.modeleditorlist",{"_index":845,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modeleditorlist.filter(e",{"_index":837,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modeleditorlist.foreach(editor",{"_index":874,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modeleditorlist.reset(filteredlist",{"_index":840,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modelname",{"_index":1718,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.modelservice.cpncolortostring(this.declaration",{"_index":1920,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.modelservice.cpndeclarationelementtostring",{"_index":1199,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["this.modelservice.cpnglobreftostring(this.declaration",{"_index":1919,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.modelservice.cpnmltostring(this.declaration",{"_index":1922,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.modelservice.cpnvartostring(this.declaration",{"_index":1921,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.modelservice.deletefrommodel(this.cpnelement",{"_index":1635,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.modelservice.getallpages",{"_index":1582,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.modelservice.getallplaces",{"_index":1616,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.modelservice.getalltrans",{"_index":1619,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.modelservice.getcpn",{"_index":1850,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.modelservice.getmonitornodenameslist(this.cpnelement",{"_index":1564,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.modelservice.getmonitornodenameslist(this.monitor",{"_index":2012,"title":{},"body":{"components/ProjectTreeMonitorNodeComponent.html":{}}}],["this.modelservice.getproject",{"_index":1025,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ProjectTreeComponent.html":{}}}],["this.modelservice.getprojectdata",{"_index":1022,"title":{},"body":{"components/MainToolbarComponent.html":{},"injectables/ValidationService.html":{}}}],["this.modelservice.getsubinstances(page",{"_index":1584,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.modelservice.marknewmodel",{"_index":1731,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.modelservice.parsedeclarationtypefromstring(value",{"_index":1926,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.modelservice.projectname",{"_index":2107,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.modelservice.projectname.lastindexof",{"_index":2104,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.modelservice.projectname.substr(0",{"_index":2106,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.modelservice.removecpnelement(cpnparentelement",{"_index":1886,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.modelservice.stringtocpndeclarationelement",{"_index":1599,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.modelservice.stringtocpndeclarationelement(cpnelement",{"_index":1958,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.modelservice.stringtocpndeclarationelement(newcpnelement",{"_index":1889,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.modeltabarray",{"_index":849,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modeltabarray.splice(parseint(i",{"_index":856,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modeltabarray[i",{"_index":855,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.modeltabarray[i].id",{"_index":854,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.multistepcount",{"_index":2211,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.needvalidation",{"_index":2600,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.nobackupkeylist",{"_index":2618,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.nodelist",{"_index":1563,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{}}}],["this.nodes",{"_index":1385,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.nodetypelist",{"_index":1569,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.nodetypelist.includes('place",{"_index":1579,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.nodetypelist.includes('transition",{"_index":1580,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.object[this.field",{"_index":2444,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["this.onchange(e",{"_index":2443,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["this.oncreatenode(event",{"_index":1550,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.ondeclarationclick(event",{"_index":1608,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.onloadmonitor(event.monitorobject",{"_index":1547,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.onloadmonitor(this.cpnelement",{"_index":1596,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.onloadmonitor(undefined",{"_index":1544,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.onselectedchange",{"_index":1842,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.onupdatedeclaration(event",{"_index":1552,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.openmleditor",{"_index":830,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.openmodeleditor(event.pageobject",{"_index":832,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.option",{"_index":2022,"title":{},"body":{"components/ProjectTreeOptionNodeComponent.html":{}}}],["this.option._name",{"_index":2021,"title":{},"body":{"components/ProjectTreeOptionNodeComponent.html":{}}}],["this.optionlogging",{"_index":1567,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.optiontimed",{"_index":1565,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.page",{"_index":2031,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["this.page.pageattr._name",{"_index":2028,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["this.pages",{"_index":1845,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.parentblock",{"_index":1781,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.parsexml(projectxml",{"_index":1722,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.project",{"_index":1703,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{}}}],["this.projectservice.loademptyproject",{"_index":1023,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.projectservice.loadprojectfile(file",{"_index":1264,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["this.readydata",{"_index":157,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.ref",{"_index":2279,"title":{},"body":{"components/TabComponent.html":{}}}],["this.reset",{"_index":1837,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.resetconfig",{"_index":948,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.rightsplitpanesize",{"_index":955,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["this.runmultistep",{"_index":2213,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.runmultistepff",{"_index":2214,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":2074,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.sanitizer.bypasssecuritytruststyle(style",{"_index":2075,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.sanitizer.bypasssecuritytrustxxx(style",{"_index":2076,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.saveastext(data.xml",{"_index":2121,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.saveastext(xml",{"_index":2117,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["this.saveerrordata(data",{"_index":189,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.selectdeclarationnode(event",{"_index":1193,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["this.selected",{"_index":1846,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["this.selected.cpnelement",{"_index":1786,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["this.selected.id",{"_index":1783,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["this.selected.parentcpnelement",{"_index":1780,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["this.selected.parentcpnelement[newcpntype",{"_index":1895,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.selected.type",{"_index":1785,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/TreeNodeComponent.html":{}}}],["this.selectednode",{"_index":1603,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.selectedold",{"_index":1840,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.selectedold.id",{"_index":1839,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["this.selectedtab",{"_index":2328,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.selecttab(tab",{"_index":2333,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.selecttab(this.tabs[0",{"_index":2336,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.sendselectdeclarationnode(node",{"_index":1606,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.sessionid",{"_index":167,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.setcreatenodeintent(false",{"_index":1572,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.setcreatenodeintent(true",{"_index":1614,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.setmode(this.single_step",{"_index":2209,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.settings.getappsettings",{"_index":552,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.showtable",{"_index":577,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.siminitialized",{"_index":194,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.simulationconfig",{"_index":2210,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.simulationconfig.multi_step.delay",{"_index":2220,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.simulationconfig.multi_step.steps",{"_index":2212,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.simulationconfig.multi_step_ff",{"_index":2222,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.single_step",{"_index":2175,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.single_step_choose_binding",{"_index":2198,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["this.statedata",{"_index":161,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.subpages",{"_index":1844,"title":{},"body":{"components/ProjectTreeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["this.subpages.push(this.page._id",{"_index":2030,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1200,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["this.tabs",{"_index":2327,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.tabs.filter(tab",{"_index":2340,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.tabs.foreach(tab",{"_index":2329,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.tabs.length",{"_index":2335,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.tabs.push(tab",{"_index":2325,"title":{},"body":{"components/TabsContainer.html":{}}}],["this.tabscomponent.clear",{"_index":851,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.tabscomponent.deletetabbyid(id",{"_index":857,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.tabscomponent.getselectedtab",{"_index":873,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.tabscomponent.gettabbyid(id",{"_index":859,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.tabscomponent.gettabbyid(pageid",{"_index":871,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.tabscomponent.selecttab(tab",{"_index":863,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["this.tabtitle",{"_index":2277,"title":{},"body":{"components/TabComponent.html":{}}}],["this.textvalue",{"_index":1198,"title":{},"body":{"components/MlEditorComponent.html":{}}}],["this.timeconversion(elapsed",{"_index":1399,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.timeinitstart",{"_index":1393,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.timesimstart",{"_index":1420,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["this.timetimer",{"_index":2593,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.timetimer.subscribe",{"_index":2597,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.timetimersubscribtion",{"_index":2596,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.timetimersubscribtion.unsubscribe",{"_index":2599,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.tokendata",{"_index":155,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.type",{"_index":1918,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["this.updatechanges",{"_index":1597,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["this.url",{"_index":762,"title":{},"body":{"classes/CpnServerUrl.html":{}}}],["this.usersessionid",{"_index":162,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["this.validate",{"_index":2592,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.validation_timeout",{"_index":2595,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.validationservice.validate",{"_index":1019,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["this.viewcontainerref",{"_index":2276,"title":{},"body":{"components/TabComponent.html":{}}}],["this.xmlprefix}\\n${xml",{"_index":2115,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["time",{"_index":697,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["time_step",{"_index":2184,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["timeconversion",{"_index":1360,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["timeconversion(millisec",{"_index":1374,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["timeinitstart",{"_index":1353,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["timer",{"_index":2583,"title":{},"body":{"injectables/ValidationService.html":{}}}],["timer(this.validation_timeout",{"_index":2594,"title":{},"body":{"injectables/ValidationService.html":{}}}],["times",{"_index":2129,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["timesimstart",{"_index":1354,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["timestamp",{"_index":1275,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["timetimer",{"_index":2544,"title":{},"body":{"injectables/ValidationService.html":{}}}],["timetimersubscribtion",{"_index":2545,"title":{},"body":{"injectables/ValidationService.html":{}}}],["title",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/TreeNodeComponent.html":{}}}],["token",{"_index":214,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ValidationService.html":{}}}],["token/marking",{"_index":86,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["tokendata",{"_index":18,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["tokens",{"_index":1427,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["toolbar",{"_index":983,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["toolbar.component",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.component.html",{"_index":985,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":984,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":982,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:11",{"_index":2040,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts:12",{"_index":1225,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["toolbar.component.ts:15",{"_index":2043,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts:16",{"_index":1009,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:17",{"_index":996,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ModelEditorToolbarComponent.html":{}}}],["toolbar.component.ts:18",{"_index":2046,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts:20",{"_index":1227,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["toolbar.component.ts:21",{"_index":2044,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts:23",{"_index":1006,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ModelEditorToolbarComponent.html":{}}}],["toolbar.component.ts:24",{"_index":1007,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts:26",{"_index":1226,"title":{},"body":{"components/ModelEditorToolbarComponent.html":{}}}],["toolbar.component.ts:27",{"_index":2045,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts:28",{"_index":999,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2042,"title":{},"body":{"components/ProjectTreeToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":1000,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:36",{"_index":1001,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:48",{"_index":1002,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:53",{"_index":1003,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:58",{"_index":998,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:62",{"_index":1005,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:67",{"_index":997,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:71",{"_index":1004,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar/main",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"coverage.html":{}}}],["toolbar/model",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"components/ModelEditorToolbarComponent.html":{},"coverage.html":{}}}],["toolbar/project",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTreeToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":2249,"title":{},"body":{"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{}}}],["trans",{"_index":2032,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["trans.subst",{"_index":2034,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["trans.subst._subpage",{"_index":2035,"title":{},"body":{"components/ProjectTreePageNodeComponent.html":{}}}],["transform",{"_index":716,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"pipes/MonitorNamePipe.html":{},"pipes/OptionsNamePipePipe.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"pipes/SafeHtmlPipe.html":{}}}],["transform(html",{"_index":2070,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["transform(monitor",{"_index":1234,"title":{},"body":{"pipes/MonitorNamePipe.html":{}}}],["transform(value",{"_index":717,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"pipes/OptionsNamePipePipe.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{}}}],["transformed",{"_index":735,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{}}}],["transformed.length",{"_index":1931,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"pipes/RegexPipe.html":{}}}],["transformed.replace(new",{"_index":739,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["transformed.tolowercase",{"_index":2065,"title":{},"body":{"pipes/ReplaceSpacesPipe.html":{}}}],["transformed[0",{"_index":1932,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{},"pipes/RegexPipe.html":{}}}],["transid",{"_index":65,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SimulationPanelComponent.html":{}}}],["transition",{"_index":63,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/SimulationPanelComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["transitionenabledbreakpointmonitortemplate",{"_index":711,"title":{"classes/TransitionEnabledBreakPointMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["transitions",{"_index":90,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ProjectConsoleComponent.html":{}}}],["transparent",{"_index":1208,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectMonitorsComponent.html":{}}}],["tree",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["tree'},{'name",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["tree.component",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["tree.component.html",{"_index":1790,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.scss",{"_index":1787,"title":{},"body":{"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{}}}],["tree.component.ts",{"_index":1788,"title":{},"body":{"components/ProjectTreeComponent.html":{},"coverage.html":{}}}],["tree.component.ts:114",{"_index":1806,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:127",{"_index":1809,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:132",{"_index":1817,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:14",{"_index":1826,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:15",{"_index":1824,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:16",{"_index":1820,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:18",{"_index":1828,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:19",{"_index":1821,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:20",{"_index":1823,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:21",{"_index":1831,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:22",{"_index":1827,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:24",{"_index":1829,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:25",{"_index":1830,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:27",{"_index":1803,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:29",{"_index":1822,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:30",{"_index":1825,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:33",{"_index":1813,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:40",{"_index":1812,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:47",{"_index":1819,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:59",{"_index":1811,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:69",{"_index":1810,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:73",{"_index":1818,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:86",{"_index":1815,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.component.ts:90",{"_index":1808,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["tree.open.declaration.node",{"_index":1165,"title":{},"body":{"classes/Message.html":{}}}],["tree.select.declaration.node",{"_index":1167,"title":{},"body":{"classes/Message.html":{}}}],["tree.update.pages",{"_index":1169,"title":{},"body":{"classes/Message.html":{}}}],["tree/project",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"coverage.html":{}}}],["tree/tree",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{}}}],["tree_open_declaration_node",{"_index":1086,"title":{},"body":{"classes/Message.html":{}}}],["tree_select_declaration_node",{"_index":1087,"title":{},"body":{"classes/Message.html":{}}}],["tree_update_pages",{"_index":1088,"title":{},"body":{"classes/Message.html":{}}}],["treemodule",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["treemodule.forroot",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["treenodecomponent",{"_index":364,"title":{"components/TreeNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":176,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1714,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["ts",{"_index":2338,"title":{},"body":{"components/TabsContainer.html":{},"dependencies.html":{}}}],["type",{"_index":51,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"classes/BreakpointMonitorTemplate.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/CpnServerUrl.html":{},"classes/DataCollectionMonitorTemplate.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"pipes/MonitorNamePipe.html":{},"interfaces/MonitorTemplate.html":{},"components/OpenprojectButtonComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"components/TreeNodeComponent.html":{},"classes/UserDefinedMonitorTemplate.html":{},"injectables/ValidationService.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typedescription",{"_index":607,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{}}}],["typeface",{"_index":2756,"title":{},"body":{"dependencies.html":{}}}],["types/file",{"_index":2717,"title":{},"body":{"dependencies.html":{}}}],["typeselector",{"_index":2492,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["ud",{"_index":624,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":160,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/ApplicationSettingsComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TabsContainer.html":{}}}],["undo",{"_index":1031,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["undo&nbsp",{"_index":1028,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["unit",{"_index":2796,"title":{},"body":{"index.html":{}}}],["unittype",{"_index":1966,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["untilstep",{"_index":2225,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["untiltime",{"_index":2227,"title":{},"body":{"components/SimulationPanelComponent.html":{}}}],["untimedavg",{"_index":1323,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedciavg",{"_index":1324,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedcount",{"_index":1325,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedfirstval",{"_index":1326,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedlastval",{"_index":1327,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedmax",{"_index":1328,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedmin",{"_index":1329,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedssqdev",{"_index":1331,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedssquare",{"_index":1330,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedstddev",{"_index":1332,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedsum",{"_index":1333,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["untimedvariance",{"_index":1334,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["update",{"_index":1320,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["updatechanges",{"_index":1493,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["updateoptionvalue",{"_index":1494,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["updateoptionvalue(event",{"_index":1526,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["updateporttype",{"_index":1629,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["updateserveraddress",{"_index":535,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["updateserveraddress(event",{"_index":547,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["uploadfile",{"_index":1252,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["uploadfile(event",{"_index":1255,"title":{},"body":{"components/OpenprojectButtonComponent.html":{}}}],["url",{"_index":139,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/CpnServerUrl.html":{},"injectables/ProjectService.html":{},"injectables/SettingsService.html":{}}}],["url.js",{"_index":1699,"title":{},"body":{"injectables/ProjectService.html":{}}}],["url.ts",{"_index":755,"title":{},"body":{"classes/CpnServerUrl.html":{},"coverage.html":{}}}],["url.ts:2",{"_index":757,"title":{},"body":{"classes/CpnServerUrl.html":{}}}],["url.ts:5",{"_index":760,"title":{},"body":{"classes/CpnServerUrl.html":{}}}],["url.ts:9",{"_index":758,"title":{},"body":{"classes/CpnServerUrl.html":{}}}],["use",{"_index":2787,"title":{},"body":{"index.html":{}}}],["user",{"_index":73,"title":{},"body":{"injectables/AccessCpnService.html":{},"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["userdefinedmonitortemplate",{"_index":704,"title":{"classes/UserDefinedMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["usersessionid",{"_index":19,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["v:int",{"_index":1882,"title":{},"body":{"components/ProjectTreeComponent.html":{}}}],["val",{"_index":726,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["validate",{"_index":1038,"title":{},"body":{"components/MainToolbarComponent.html":{},"injectables/ValidationService.html":{}}}],["validation",{"_index":1389,"title":{},"body":{"components/ProjectConsoleComponent.html":{},"injectables/ValidationService.html":{}}}],["validation_timeout",{"_index":2546,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validationservice",{"_index":391,"title":{"injectables/ValidationService.html":{}},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["validationtime",{"_index":2627,"title":{},"body":{"injectables/ValidationService.html":{}}}],["value",{"_index":112,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"classes/AppVersion.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"classes/CpnServerUrl.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"classes/Message.html":{},"components/MlEditorComponent.html":{},"pipes/OptionsNamePipePipe.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"pipes/RegexPipe.html":{},"pipes/ReplaceSpacesPipe.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["value.includes(key",{"_index":738,"title":{},"body":{"pipes/ColorDeclarationsPipe.html":{}}}],["value.match(/[^=]+/g",{"_index":1944,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["value.match(/^\\w+/g",{"_index":1942,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["value.replace(/(\\(\\*\\s*)[^\\*]+(\\s*\\*\\))/g",{"_index":1941,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["value.replace(/\\n/g",{"_index":1936,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["value.replace(/\\s{2,}/g",{"_index":1939,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["value.startswith('option_",{"_index":1271,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["value.substring(7",{"_index":1272,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["value.tostring().replace",{"_index":2064,"title":{},"body":{"pipes/ReplaceSpacesPipe.html":{}}}],["values",{"_index":649,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/BlockHeaderComponent.html":{},"pipes/ColorDeclarationsPipe.html":{},"components/EditorPanelComponent.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["variable",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2814,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variance",{"_index":1309,"title":{},"body":{"pipes/OptionsNamePipePipe.html":{}}}],["version",{"_index":987,"title":{},"body":{"components/MainToolbarComponent.html":{},"index.html":{}}}],["vertical",{"_index":2486,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["via",{"_index":2799,"title":{},"body":{"index.html":{}}}],["view",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["viewchild",{"_index":820,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["viewchild('tabscomponent",{"_index":817,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["viewchildren",{"_index":821,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["viewchildren(modeleditorcomponent",{"_index":814,"title":{},"body":{"components/EditorPanelComponent.html":{}}}],["viewcontainer",{"_index":2275,"title":{},"body":{"components/TabComponent.html":{}}}],["viewcontainerref",{"_index":822,"title":{},"body":{"components/EditorPanelComponent.html":{},"components/TabComponent.html":{}}}],["viewer",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["visibility",{"_index":977,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["visible",{"_index":1214,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["void",{"_index":58,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"classes/CpnServerUrl.html":{},"components/EditorPanelComponent.html":{},"injectables/EventService.html":{},"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/MlEditorComponent.html":{},"components/ModelEditorToolbarComponent.html":{},"components/OpenprojectButtonComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTreeBlockNodeComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeMonitorNodeComponent.html":{},"components/ProjectTreeMonitorblockNodeComponent.html":{},"components/ProjectTreeOptionNodeComponent.html":{},"components/ProjectTreeOptionsNodeComponent.html":{},"components/ProjectTreePageNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SaveprojectButtonComponent.html":{},"injectables/SettingsService.html":{},"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{},"injectables/ValidationService.html":{}}}],["wait",{"_index":890,"title":{},"body":{"injectables/EventService.html":{}}}],["webkit",{"_index":1658,"title":{},"body":{"components/ProjectMonitorsComponent.html":{}}}],["weight",{"_index":1653,"title":{},"body":{"components/ProjectMonitorsComponent.html":{},"components/TabsContainer.html":{},"components/TreeNodeComponent.html":{}}}],["white",{"_index":1210,"title":{},"body":{"components/MlEditorComponent.html":{},"components/ProjectConsoleComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabsContainer.html":{},"components/TextEditRowComponent.html":{}}}],["width",{"_index":962,"title":{},"body":{"components/MainFrameComponent.html":{},"components/MainToolbarComponent.html":{},"components/ProjectMonitorsComponent.html":{},"components/ProjectTreeComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/ProjectTreeToolbarComponent.html":{},"components/SimulationPanelComponent.html":{},"components/TabComponent.html":{},"components/TextEditRowComponent.html":{},"components/TreeNodeComponent.html":{}}}],["wif",{"_index":625,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["win",{"_index":2648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.event",{"_index":2431,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["without",{"_index":2440,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["wordlist",{"_index":2552,"title":{},"body":{"injectables/ValidationService.html":{}}}],["wordlist.includes(key",{"_index":2604,"title":{},"body":{"injectables/ValidationService.html":{}}}],["workspaceelements.cpnet.page.pageattr._name",{"_index":2590,"title":{},"body":{"injectables/ValidationService.html":{}}}],["write",{"_index":626,"title":{},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"miscellaneous/variables.html":{}}}],["writeinfilemonitortemplate",{"_index":705,"title":{"classes/WriteInFileMonitorTemplate.html":{}},"body":{"classes/BreakpointMonitorTemplate.html":{},"classes/CountTransitionOccurrencesMonitorTemplate.html":{},"classes/DataCollectionMonitorTemplate.html":{},"classes/ListLengthDataCollectionMonitorTemplate.html":{},"classes/MarkingSizeMonitorTemplate.html":{},"interfaces/MonitorTemplate.html":{},"classes/PlaceContentBreakPointMonitorTemplate.html":{},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{},"classes/UserDefinedMonitorTemplate.html":{},"classes/WriteInFileMonitorTemplate.html":{},"coverage.html":{}}}],["ws",{"_index":938,"title":{},"body":{"components/MainFrameComponent.html":{}}}],["x",{"_index":186,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/AppComponent.html":{},"components/MlEditorComponent.html":{},"components/ProjectTreeDeclarationNodeComponent.html":{},"components/TextEditRowComponent.html":{}}}],["x2js",{"_index":127,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["x2js.json2xml_str(cloneobject(cpnjson",{"_index":171,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["x2js.json2xml_str(cloneobject(this.modelservice.getprojectdata",{"_index":2113,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["x2js.xml_str2json(projectxml",{"_index":1726,"title":{},"body":{"injectables/ProjectService.html":{}}}],["xml",{"_index":183,"title":{},"body":{"injectables/AccessCpnService.html":{},"injectables/ProjectService.html":{},"components/SaveprojectButtonComponent.html":{},"dependencies.html":{}}}],["xml2json",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["xml2json(xml",{"_index":1725,"title":{},"body":{"injectables/ProjectService.html":{}}}],["xmlbeautify",{"_index":132,"title":{},"body":{"injectables/AccessCpnService.html":{},"components/SaveprojectButtonComponent.html":{}}}],["xmlbeautify(cpnxml",{"_index":175,"title":{},"body":{"injectables/AccessCpnService.html":{}}}],["xmlbeautify(xml",{"_index":2116,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["xmldom",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["xmlprefix",{"_index":2081,"title":{},"body":{"components/SaveprojectButtonComponent.html":{}}}],["y",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["yellow",{"_index":2403,"title":{},"body":{"components/TextEditRowComponent.html":{}}}],["yyyy",{"_index":1458,"title":{},"body":{"components/ProjectConsoleComponent.html":{}}}],["z",{"_index":2351,"title":{},"body":{"components/TabsContainer.html":{}}}],["zero",{"_index":1984,"title":{},"body":{"components/ProjectTreeDeclarationNodeComponent.html":{}}}],["zone.js",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/TabModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessCpnService.html":{"url":"injectables/AccessCpnService.html","title":"injectable - AccessCpnService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccessCpnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/access-cpn.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorData\n                            \n                            \n                                initNetProcessing\n                            \n                            \n                                initSimProcessing\n                            \n                            \n                                isSimulation\n                            \n                            \n                                readyData\n                            \n                            \n                                sessionId\n                            \n                            \n                                simInitialized\n                            \n                            \n                                stateData\n                            \n                            \n                                tokenData\n                            \n                            \n                                userSessionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doMultiStepFF\n                            \n                            \n                                doStep\n                            \n                            \n                                doStepWithBinding\n                            \n                            \n                                generateUserSession\n                            \n                            \n                                getBindings\n                            \n                            \n                                getErrorData\n                            \n                            \n                                    Public\n                                getIsSimulation\n                            \n                            \n                                getReadyData\n                            \n                            \n                                getSimState\n                            \n                            \n                                getStateData\n                            \n                            \n                                getTokenData\n                            \n                            \n                                getTokenMarks\n                            \n                            \n                                getTransitions\n                            \n                            \n                                getUserSessionId\n                            \n                            \n                                getXmlFromServer\n                            \n                            \n                                initNet\n                            \n                            \n                                initSim\n                            \n                            \n                                resetSim\n                            \n                            \n                                saveErrorData\n                            \n                            \n                                    Public\n                                setIsSimulation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/access-cpn.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doMultiStepFF\n                        \n                        \n                    \n                \n            \n            \n                \ndoMultiStepFF(options)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:328\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doStep\n                        \n                        \n                    \n                \n            \n            \n                \ndoStep(transId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:272\n                \n            \n\n\n            \n                \n                    Do simulation step for transition\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransition id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doStepWithBinding\n                        \n                        \n                    \n                \n            \n            \n                \ndoStepWithBinding(transId, bindId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:296\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bindId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateUserSession\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateUserSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:69\n                \n            \n\n\n            \n                \n                    Generate new user session\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBindings\n                        \n                        \n                    \n                \n            \n            \n                \ngetBindings(transId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:362\n                \n            \n\n\n            \n                \n                    Get bindings for transition\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransition id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrorData\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrorData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIsSimulation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIsSimulation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:409\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReadyData\n                        \n                        \n                    \n                \n            \n            \n                \ngetReadyData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimState\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:381\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStateData\n                        \n                        \n                    \n                \n            \n            \n                \ngetStateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTokenData\n                        \n                        \n                    \n                \n            \n            \n                \ngetTokenData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTokenMarks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTokenMarks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:216\n                \n            \n\n\n            \n                \n                    Get token/marking state from simulator\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransitions\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:243\n                \n            \n\n\n            \n                \n                    Get transitions state from simulator\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserSessionId\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserSessionId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:78\n                \n            \n\n\n            \n                \n                    Get current user session\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getXmlFromServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetXmlFromServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:416\n                \n            \n\n\n            \n                \n                    Get token/marking state from simulator\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initNet\n                        \n                        \n                    \n                \n            \n            \n                \ninitNet(cpnJson, complexVerify)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:85\n                \n            \n\n\n            \n                \n                    Access/CPN API\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpnJson\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    complexVerify\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initSim\n                        \n                        \n                    \n                \n            \n            \n                \ninitSim()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:163\n                \n            \n\n\n            \n                \n                    Initialize access/cpn simulator\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetSim\n                        \n                        \n                    \n                \n            \n            \n                \nresetSim()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:155\n                \n            \n\n\n            \n                \n                    Reset simulator initialization flag\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveErrorData\n                        \n                        \n                    \n                \n            \n            \n                \nsaveErrorData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIsSimulation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIsSimulation(state)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/access-cpn.service.ts:404\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initNetProcessing\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSimProcessing\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSimulation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readyData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSessionId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/access-cpn.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as X2JS from 'src/lib/x2js/xml2json.js';\nimport { EventService } from './event.service';\nimport { Message } from '../common/message';\nimport { xmlBeautify } from '../../lib/xml-beautifier/xml-beautifier.js';\nimport { CpnServerUrl } from 'src/cpn-server-url';\nimport { cloneObject } from '../common/utils';\n\n@Injectable()\nexport class AccessCpnService {\n\n  sessionId;\n  userSessionId;\n  initNetProcessing;\n  initSimProcessing;\n  simInitialized = false;\n  isSimulation = false;\n  errorData = [];\n  tokenData = [];\n  readyData = [];\n  stateData;\n\n  constructor(private http: HttpClient,\n    private eventService: EventService) {\n\n    this.eventService.on(Message.SERVER_INIT_NET, (event) => {\n      console.log('AccessCpnService(), SERVER_INIT_NET, data = ', event);\n      if (event) {\n        this.initNet(event.projectData, event.complexVerify);\n      }\n    });\n  }\n\n  getErrorData() {\n    return this.errorData;\n  }\n\n  getTokenData() {\n    if (!this.isSimulation) {\n      return [];\n    }\n\n    return this.tokenData;\n  }\n\n  getReadyData() {\n    if (!this.isSimulation) {\n      return [];\n    }\n\n    const readyData = {};\n    for (const id of this.readyData) {\n      readyData[id] = 'Transition is ready.';\n    }\n    return readyData;\n  }\n\n  getStateData() {\n    if (!this.isSimulation) {\n      return undefined;\n    }\n    return this.stateData;\n  }\n\n  /**\n   * Generate new user session\n   */\n  generateUserSession() {\n    this.userSessionId = 'CPN-USER-SESSION-' + new Date().getTime();\n    console.log('generateUserSession - new id -', this.userSessionId);\n    return this.userSessionId;\n  }\n\n  /**\n   * Get current user session\n   */\n  getUserSessionId() {\n    return this.userSessionId;\n  }\n\n  /**\n   * Access/CPN API\n   */\n  initNet(cpnJson, complexVerify) {\n    if (this.initNetProcessing) {\n      return;\n    }\n\n    if (!this.sessionId) {\n      this.sessionId = 'CPN-IDE-SESSION-' + new Date().getTime();\n    }\n\n    console.log('AccessCpnService, initNet(), START, this.sessionId = ', this.sessionId);\n\n    const x2js = new X2JS();\n    let cpnXml = x2js.json2xml_str(cloneObject(cpnJson));\n\n    cpnXml = cpnXml.toString('iso-8859-1');\n    cpnXml = xmlBeautify(cpnXml);\n\n    this.initNetProcessing = true;\n    this.eventService.send(Message.SERVER_INIT_NET_START, {});\n\n    localStorage.setItem('cpnXml', JSON.stringify(cpnXml));\n\n    this.errorData = [];\n\n    // complexVerify = true;\n    localStorage.setItem('cpnXml', cpnXml);\n\n    const url = CpnServerUrl.get() + '/api/v2/cpn/init';\n    this.http.post(url, { xml: cpnXml, complex_verify: complexVerify }, { headers: { 'X-SessionId': this.sessionId } })\n      .subscribe(\n        (data: any) => {\n          console.log('AccessCpnService, initNet(), SUCCESS, data = ', data);\n          this.initNetProcessing = false;\n\n          this.saveErrorData(data);\n\n          this.eventService.send(Message.SERVER_INIT_NET_DONE, { data: data, errorIssues: data.issues });\n\n          // Init simulator\n          // if (!this.simInitialized) {\n          //   this.initSim();\n          // }\n        },\n        (error) => {\n          console.error('AccessCpnService, initNet(), ERROR, data = ', error);\n          this.initNetProcessing = false;\n          this.eventService.send(Message.SERVER_INIT_NET_ERROR, { data: error });\n        }\n      );\n  }\n\n  saveErrorData(data) {\n    this.errorData = [];\n\n    if (!data.success) {\n      for (const id of Object.keys(data.issues)) {\n        for (const issue of data.issues[id]) {\n          issue.description = issue.description.replace(issue.id + ':', '');\n          issue.description = issue.description.replace(issue.id, '');\n          issue.description = issue.description.replace(':', '');\n          issue.description = issue.description.trim();\n          this.errorData[issue.id] = issue.description;\n        }\n      }\n    }\n  }\n\n  /**\n   * Reset simulator initialization flag\n   */\n  resetSim() {\n    this.simInitialized = false;\n    this.generateUserSession();\n  }\n\n  /**\n   * Initialize access/cpn simulator\n   */\n  initSim() {\n    if (this.initSimProcessing) {\n      return;\n    }\n\n    this.simInitialized = false;\n\n    this.tokenData = [];\n    this.readyData = [];\n    this.stateData = undefined;\n\n    if (!this.sessionId) {\n      this.sessionId = 'CPN-IDE-SESSION-' + new Date().getTime();\n    }\n\n    this.initSimProcessing = true;\n    this.eventService.send(Message.SERVER_INIT_SIM_START, {});\n\n    console.log('AccessCpnService, initSim(), START, this.sessionId = ', this.sessionId);\n\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/init';\n    this.http.get(url, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        this.initSimProcessing = false;\n        console.log('AccessCpnService, initSim(), SUCCESS, data = ', data);\n        this.simInitialized = true;\n\n        this.eventService.send(Message.SERVER_INIT_SIM_DONE, { data: data });\n        // Get token marks and transition\n        if (data) {\n          this.tokenData = data.tokensAndMark;\n          this.eventService.send(Message.SERVER_GET_TOKEN_MARKS, { data: this.tokenData });\n          this.readyData = data.enableTrans;\n          this.eventService.send(Message.SERVER_GET_TRANSITIONS, { data: this.readyData });\n\n        }\n\n        //this.getTokenMarks();\n        //this.getTransitions();\n      },\n      (error) => {\n        this.initSimProcessing = false;\n        console.error('AccessCpnService, initSim(), ERROR, data = ', error);\n\n        this.eventService.send(Message.SERVER_INIT_SIM_ERROR, { data: error });\n      }\n    );\n  }\n\n\n  /**\n   * Get token/marking state from simulator\n   */\n  getTokenMarks() {\n    console.log('AccessCpnService, getTokenMarks(), this.sessionId = ', this.sessionId);\n\n    if (!this.simInitialized || !this.sessionId) {\n      return;\n    }\n\n    this.tokenData = [];\n\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/marks';\n    this.http.get(url, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        console.log('AccessCpnService, getTokenMarks(), SUCCESS, data = ', data);\n\n        this.tokenData = data;\n\n        this.eventService.send(Message.SERVER_GET_TOKEN_MARKS, { data: data });\n      },\n      (error) => {\n        console.error('AccessCpnService, getTokenMarks(), ERROR, data = ', error);\n      }\n    );\n  }\n\n  /**\n   * Get transitions state from simulator\n   */\n  getTransitions() {\n    console.log('AccessCpnService, getTransitions(), this.sessionId = ', this.sessionId);\n\n    if (!this.simInitialized || !this.sessionId) {\n      return;\n    }\n\n    this.readyData = [];\n\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/transitions/enabled';\n    this.http.get(url, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        console.log('AccessCpnService, getTransitions(), SUCCESS, data = ', data);\n\n        this.readyData = data;\n\n        this.eventService.send(Message.SERVER_GET_TRANSITIONS, { data: data });\n      },\n      (error) => {\n        console.error('AccessCpnService, getTransitions(), ERROR, data = ', error);\n      }\n    );\n  }\n\n\n  /**\n   * Do simulation step for transition\n   * @param transId - transition id\n   */\n  doStep(transId) {\n    if (!this.simInitialized || !this.sessionId) {\n      return;\n    }\n\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/step/' + transId; // ID1412328496\n    this.http.get(url, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        console.log('AccessCpnService, doStep(), SUCCESS, data = ', data);\n        if (data) {\n          this.tokenData = data.tokensAndMark;\n          this.eventService.send(Message.SERVER_GET_TOKEN_MARKS, { data: this.tokenData });\n          this.readyData = data.enableTrans;\n          this.eventService.send(Message.SERVER_GET_TRANSITIONS, { data: this.readyData });\n        }\n\n        this.getSimState();\n      },\n      (error) => {\n        console.error('AccessCpnService, doStep(), ERROR, data = ', error);\n      }\n    );\n  }\n\n  doStepWithBinding(transId, bindId) {\n    if (!this.simInitialized || !this.sessionId) {\n      return;\n    }\n\n    const postData = {\n      bind_id: bindId\n    };\n\n    console.log('AccessCpnService, doStepWithBinding(), postData = ', postData);\n\n    // POST /api/v2/cpn/sim/step_with_binding/{transId}\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/step_with_binding/' + transId;\n    this.http.post(url, postData, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        console.log('AccessCpnService, doStepWithBinding(), SUCCESS, data = ', data);\n        if (data) {\n          this.tokenData = data.tokensAndMark;\n          this.eventService.send(Message.SERVER_GET_TOKEN_MARKS, { data: this.tokenData });\n          this.readyData = data.enableTrans;\n          this.eventService.send(Message.SERVER_GET_TRANSITIONS, { data: this.readyData });\n\n          this.getSimState();\n        }\n      },\n      (error) => {\n        console.error('AccessCpnService, doStepWithBinding(), ERROR, data = ', error);\n      }\n    );\n  }\n\n\n  doMultiStepFF(options) {\n    if (!this.simInitialized || !this.sessionId) {\n      return;\n    }\n\n    const postData = options;\n\n    console.log('AccessCpnService, doMultiStepFF(), postData = ', postData);\n\n    // POST /api/v2/cpn/sim/step_with_binding/{transId}\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/step_fast_forward';\n    this.http.post(url, postData, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        console.log('AccessCpnService, doStepWithBinding(), SUCCESS, data = ', data);\n        if (data) {\n          this.tokenData = data.tokensAndMark;\n          this.eventService.send(Message.SERVER_GET_TOKEN_MARKS, { data: this.tokenData });\n          this.readyData = data.enableTrans;\n          this.eventService.send(Message.SERVER_GET_TRANSITIONS, { data: this.readyData });\n\n          this.getSimState();\n        }\n      },\n      (error) => {\n        console.error('AccessCpnService, doStepWithBinding(), ERROR, data = ', error);\n      }\n    );\n  }\n\n\n  /**\n   * Get bindings for transition\n   * @param transId - transition id\n   */\n  getBindings(transId) {\n    if (!this.simInitialized || !this.sessionId) {\n      return;\n    }\n\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/bindings/' + transId; // ID1412328496\n    this.http.get(url, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        console.log('AccessCpnService, getBindings(), SUCCESS, data = ', data);\n        if (data) {\n          this.eventService.send(Message.SERVER_GET_BINDINGS, { data: data });\n        }\n      },\n      (error) => {\n        console.error('AccessCpnService, getBindings(), ERROR, data = ', error);\n      }\n    );\n  }\n\n  getSimState() {\n    if (!this.simInitialized || !this.sessionId) {\n      return;\n    }\n\n    this.stateData = undefined;\n\n    const url = CpnServerUrl.get() + '/api/v2/cpn/sim/state';\n    this.http.get(url, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n      (data: any) => {\n        console.log('AccessCpnService, getSimState(), SUCCESS, data = ', data);\n        if (data) {\n          this.stateData = data;\n          this.eventService.send(Message.SIMULATION_UPDATE_STATE);\n        }\n      },\n      (error) => {\n        console.error('AccessCpnService, getSimState(), ERROR, data = ', error);\n      }\n    );\n  }\n\n\n  public setIsSimulation(state) {\n    this.isSimulation = state;\n    this.eventService.send(Message.SIMULATION_UPDATE_STATE);\n  }\n\n  public getIsSimulation() {\n    return this.isSimulation;\n  }\n\n  /**\n   * Get token/marking state from simulator\n   */\n  getXmlFromServer() {\n    return new Promise((resolve, reject) => {\n\n      console.log('AccessCpnService, getXmlFromServer(), this.sessionId = ', this.sessionId);\n\n      if (!this.sessionId) {\n        reject('ERROR: sessionId not defined!');\n      }\n\n      const url = CpnServerUrl.get() + '/api/v2/cpn/xml/export';\n      this.http.get(url, { headers: { 'X-SessionId': this.sessionId } }).subscribe(\n        (data: any) => {\n          console.log('AccessCpnService, getXmlFromServer(), SUCCESS, data = ', data);\n          resolve(data);\n        },\n        (error) => {\n          console.error('AccessCpnService, getXmlFromServer(), ERROR, data = ', error);\n          reject(error);\n        }\n      );\n\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchWindow\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(electronService: ElectronService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        electronService\n                                                  \n                                                        \n                                                                    ElectronService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:contextmenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:28\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            launchWindow\n                        \n                        \n                    \n                \n            \n            \n                \nlaunchWindow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CPN-IDE'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { ElectronService } from 'ngx-electron';\nimport { SettingsService } from './services/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CPN-IDE';\n\n  constructor(\n    private electronService: ElectronService,\n    private settings: SettingsService) {\n\n    // const p = new Place({ x: 1, y: 2 });\n    // p._z = 234;\n    // console.log('TEST, p = ', p);\n    // console.log('TEST, p = ', JSON.stringify(p));\n  }\n\n  launchWindow() {\n    this.electronService.shell.openExternal('http://yandex.ru');\n  }\n\n  @HostListener('document:contextmenu', ['$event'])\n  onContextMenu(e) {\n    console.log('AppComponent.onContextMenu, e = ', e);\n\n    e.preventDefault();\n  }\n}\n\n    \n\n    \n        \n\nLoading...\n\n-->\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading...-->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationSettingsComponent\n\nApplicationSettingsComponent\n\nAppModule -->\n\nApplicationSettingsComponent->AppModule\n\n\n\n\n\nBlockHeaderComponent\n\nBlockHeaderComponent\n\nAppModule -->\n\nBlockHeaderComponent->AppModule\n\n\n\n\n\nColorDeclarationsPipe\n\nColorDeclarationsPipe\n\nAppModule -->\n\nColorDeclarationsPipe->AppModule\n\n\n\n\n\nEditorPanelComponent\n\nEditorPanelComponent\n\nAppModule -->\n\nEditorPanelComponent->AppModule\n\n\n\n\n\nMainFrameComponent\n\nMainFrameComponent\n\nAppModule -->\n\nMainFrameComponent->AppModule\n\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\nAppModule -->\n\nMainToolbarComponent->AppModule\n\n\n\n\n\nMlEditorComponent\n\nMlEditorComponent\n\nAppModule -->\n\nMlEditorComponent->AppModule\n\n\n\n\n\nModelEditorComponent\n\nModelEditorComponent\n\nAppModule -->\n\nModelEditorComponent->AppModule\n\n\n\n\n\nModelEditorToolbarComponent\n\nModelEditorToolbarComponent\n\nAppModule -->\n\nModelEditorToolbarComponent->AppModule\n\n\n\n\n\nMonitorNamePipe\n\nMonitorNamePipe\n\nAppModule -->\n\nMonitorNamePipe->AppModule\n\n\n\n\n\nOpenprojectButtonComponent\n\nOpenprojectButtonComponent\n\nAppModule -->\n\nOpenprojectButtonComponent->AppModule\n\n\n\n\n\nOptionsNamePipePipe\n\nOptionsNamePipePipe\n\nAppModule -->\n\nOptionsNamePipePipe->AppModule\n\n\n\n\n\nProjectConsoleComponent\n\nProjectConsoleComponent\n\nAppModule -->\n\nProjectConsoleComponent->AppModule\n\n\n\n\n\nProjectDetailsComponent\n\nProjectDetailsComponent\n\nAppModule -->\n\nProjectDetailsComponent->AppModule\n\n\n\n\n\nProjectExplorerComponent\n\nProjectExplorerComponent\n\nAppModule -->\n\nProjectExplorerComponent->AppModule\n\n\n\n\n\nProjectMonitorsComponent\n\nProjectMonitorsComponent\n\nAppModule -->\n\nProjectMonitorsComponent->AppModule\n\n\n\n\n\nProjectTreeBlockNodeComponent\n\nProjectTreeBlockNodeComponent\n\nAppModule -->\n\nProjectTreeBlockNodeComponent->AppModule\n\n\n\n\n\nProjectTreeComponent\n\nProjectTreeComponent\n\nAppModule -->\n\nProjectTreeComponent->AppModule\n\n\n\n\n\nProjectTreeDeclarationNodeComponent\n\nProjectTreeDeclarationNodeComponent\n\nAppModule -->\n\nProjectTreeDeclarationNodeComponent->AppModule\n\n\n\n\n\nProjectTreeMonitorNodeComponent\n\nProjectTreeMonitorNodeComponent\n\nAppModule -->\n\nProjectTreeMonitorNodeComponent->AppModule\n\n\n\n\n\nProjectTreeMonitorblockNodeComponent\n\nProjectTreeMonitorblockNodeComponent\n\nAppModule -->\n\nProjectTreeMonitorblockNodeComponent->AppModule\n\n\n\n\n\nProjectTreeOptionNodeComponent\n\nProjectTreeOptionNodeComponent\n\nAppModule -->\n\nProjectTreeOptionNodeComponent->AppModule\n\n\n\n\n\nProjectTreeOptionsNodeComponent\n\nProjectTreeOptionsNodeComponent\n\nAppModule -->\n\nProjectTreeOptionsNodeComponent->AppModule\n\n\n\n\n\nProjectTreePageNodeComponent\n\nProjectTreePageNodeComponent\n\nAppModule -->\n\nProjectTreePageNodeComponent->AppModule\n\n\n\n\n\nProjectTreeToolbarComponent\n\nProjectTreeToolbarComponent\n\nAppModule -->\n\nProjectTreeToolbarComponent->AppModule\n\n\n\n\n\nPropertiesPanelComponent\n\nPropertiesPanelComponent\n\nAppModule -->\n\nPropertiesPanelComponent->AppModule\n\n\n\n\n\nRegexPipe\n\nRegexPipe\n\nAppModule -->\n\nRegexPipe->AppModule\n\n\n\n\n\nReplaceSpacesPipe\n\nReplaceSpacesPipe\n\nAppModule -->\n\nReplaceSpacesPipe->AppModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nAppModule -->\n\nSafeHtmlPipe->AppModule\n\n\n\n\n\nSaveprojectButtonComponent\n\nSaveprojectButtonComponent\n\nAppModule -->\n\nSaveprojectButtonComponent->AppModule\n\n\n\n\n\nSimulationPanelComponent\n\nSimulationPanelComponent\n\nAppModule -->\n\nSimulationPanelComponent->AppModule\n\n\n\n\n\nTextEditRowComponent\n\nTextEditRowComponent\n\nAppModule -->\n\nTextEditRowComponent->AppModule\n\n\n\n\n\nTreeNodeComponent\n\nTreeNodeComponent\n\nAppModule -->\n\nTreeNodeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nTabModule\n\nTabModule\n\nAppModule -->\n\nTabModule->AppModule\n\n\n\n\n\nAccessCpnService\n\nAccessCpnService\n\nAppModule -->\n\nAccessCpnService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nModelService\n\nModelService\n\nAppModule -->\n\nModelService->AppModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nAppModule -->\n\nProjectService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nAppModule -->\n\nValidationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ApplicationSettingsComponent\n                        \n                        \n                            BlockHeaderComponent\n                        \n                        \n                            ColorDeclarationsPipe\n                        \n                        \n                            EditorPanelComponent\n                        \n                        \n                            MainFrameComponent\n                        \n                        \n                            MainToolbarComponent\n                        \n                        \n                            MlEditorComponent\n                        \n                        \n                            ModelEditorComponent\n                        \n                        \n                            ModelEditorToolbarComponent\n                        \n                        \n                            MonitorNamePipe\n                        \n                        \n                            OpenprojectButtonComponent\n                        \n                        \n                            OptionsNamePipePipe\n                        \n                        \n                            ProjectConsoleComponent\n                        \n                        \n                            ProjectDetailsComponent\n                        \n                        \n                            ProjectExplorerComponent\n                        \n                        \n                            ProjectMonitorsComponent\n                        \n                        \n                            ProjectTreeBlockNodeComponent\n                        \n                        \n                            ProjectTreeComponent\n                        \n                        \n                            ProjectTreeDeclarationNodeComponent\n                        \n                        \n                            ProjectTreeMonitorNodeComponent\n                        \n                        \n                            ProjectTreeMonitorblockNodeComponent\n                        \n                        \n                            ProjectTreeOptionNodeComponent\n                        \n                        \n                            ProjectTreeOptionsNodeComponent\n                        \n                        \n                            ProjectTreePageNodeComponent\n                        \n                        \n                            ProjectTreeToolbarComponent\n                        \n                        \n                            PropertiesPanelComponent\n                        \n                        \n                            RegexPipe\n                        \n                        \n                            ReplaceSpacesPipe\n                        \n                        \n                            SafeHtmlPipe\n                        \n                        \n                            SaveprojectButtonComponent\n                        \n                        \n                            SimulationPanelComponent\n                        \n                        \n                            TextEditRowComponent\n                        \n                        \n                            TreeNodeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AccessCpnService\n                        \n                        \n                            EventService\n                        \n                        \n                            ModelService\n                        \n                        \n                            ProjectService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            TabModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MonitorNamePipe } from './pipes/monitor-name.pipe';\nimport { TreeNodeComponent } from './project-tree/tree-node/tree-node';\nimport { RegexPipe } from './pipes/regex.pipe';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ScrollViewModule } from '@progress/kendo-angular-scrollview';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxElectronModule } from 'ngx-electron';\nimport { AngularSplitModule } from 'angular-split';\nimport { TreeModule } from 'angular-tree-component';\nimport { JsonEditorModule } from 'ng2-json-editor';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer-scrolling';\n// import { AgmJsonViewerModule } from 'agm-json-viewer';\n// import { JsonTree } from 'ng2-json-view'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { MainFrameComponent } from './main-frame/main-frame.component';\nimport { AccessCpnService } from './services/access-cpn.service';\nimport { MainToolbarComponent } from './main-toolbar/main-toolbar.component';\nimport { OpenprojectButtonComponent } from './actions/openproject-button/openproject-button.component';\n\nimport { ModelEditorToolbarComponent } from './model-editor/model-editor-toolbar/model-editor-toolbar.component';\nimport { ModelEditorComponent } from './model-editor/model-editor.component';\nimport { ProjectExplorerComponent } from './project-explorer/project-explorer.component';\nimport { ProjectConsoleComponent } from './project-console/project-console.component';\nimport { EditorPanelComponent } from './editor-panel/editor-panel.component';\n\nimport { TabModule } from '../lib/tabs/tabs-component.module';\nimport { ProjectDetailsComponent } from './project-details/project-details.component';\nimport { PropertiesPanelComponent } from './properties-panel/properties-panel.component';\n\nimport { MlEditorComponent } from './ml-editor/ml-editor.component';\nimport { ProjectService } from './services/project.service';\nimport { ModelService } from './services/model.service';\nimport { EventService } from './services/event.service';\nimport { ReplaceSpacesPipe } from './pipes/replace-spaces.pipe';\nimport { SaveprojectButtonComponent } from './actions/saveproject-button/saveproject-button.component';\nimport { BlockHeaderComponent } from './common/block-header';\nimport { TextEditRowComponent } from './properties-panel/components/text-edit-row';\nimport { ColorDeclarationsPipe } from './pipes/color-declarations.pipe';\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\nimport { OptionsNamePipePipe } from './pipes/options-name.pipe';\n\nimport { SettingsService } from './services/settings.service';\nimport { ValidationService } from './services/validation.service';\nimport { ApplicationSettingsComponent } from './application-settings/application-settings.component';\nimport { SimulationPanelComponent } from './simulation-panel/simulation-panel.component';\nimport { ProjectMonitorsComponent } from './project-monitors/project-monitors.component';\nimport { ProjectTreeComponent } from './project-tree/project-tree.component';\nimport { ProjectTreeBlockNodeComponent } from './project-tree/project-tree-block-node/project-tree-block-node.component';\nimport { ProjectTreePageNodeComponent } from './project-tree/project-tree-page-node/project-tree-page-node.component';\nimport { ProjectTreeMonitorNodeComponent } from './project-tree/project-tree-monitor-node/project-tree-monitor-node.component';\nimport { ProjectTreeMonitorblockNodeComponent } from './project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component';\nimport { ProjectTreeOptionsNodeComponent } from './project-tree/project-tree-options-node/project-tree-options-node.component';\nimport { ProjectTreeOptionNodeComponent } from './project-tree/project-tree-option-node/project-tree-option-node.component';\nimport { ProjectTreeDeclarationNodeComponent } from './project-tree/project-tree-declaration-node/project-tree-declaration-node.component';\nimport { ProjectTreeToolbarComponent } from './project-tree/project-tree-toolbar/project-tree-toolbar.component';\n\nrequire('typeface-droid-sans-mono');\n\n// -----------------------------------------------------------------------------\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    // Pipes\n    ColorDeclarationsPipe,\n    OptionsNamePipePipe,\n    ReplaceSpacesPipe,\n    SafeHtmlPipe,\n    RegexPipe,\n    MonitorNamePipe,\n\n    // Components\n    MainFrameComponent,\n    ProjectExplorerComponent,\n    MainToolbarComponent,\n    OpenprojectButtonComponent,\n    ModelEditorComponent,\n    ModelEditorToolbarComponent,\n    ProjectConsoleComponent,\n    EditorPanelComponent,\n    ProjectDetailsComponent,\n    PropertiesPanelComponent,\n    MlEditorComponent,\n    SaveprojectButtonComponent,\n\n    BlockHeaderComponent,\n    TextEditRowComponent,\n    ApplicationSettingsComponent,\n    SimulationPanelComponent,\n    ProjectMonitorsComponent,\n    ProjectTreeComponent,\n    ProjectTreeBlockNodeComponent,\n    TreeNodeComponent,\n    ProjectTreePageNodeComponent,\n    ProjectTreeMonitorNodeComponent,\n    ProjectTreeMonitorblockNodeComponent,\n    ProjectTreeOptionsNodeComponent,\n    ProjectTreeOptionNodeComponent,\n    ProjectTreeDeclarationNodeComponent,\n    ProjectTreeToolbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ScrollViewModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxElectronModule,\n    TreeModule.forRoot(),\n    JsonEditorModule,\n    FontAwesomeModule,\n    AngularSplitModule,\n    TabModule,\n    FormsModule,\n    CommonModule,\n    NgxJsonViewerModule,\n    // AgmJsonViewerModule,\n    // JsonTree,\n\n    // Ngb\n    NgbModule,\n  ],\n  entryComponents: [],\n  providers: [\n    SettingsService,\n    AccessCpnService,\n    ProjectService,\n    EventService,\n    ModelService,\n    ValidationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor() {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppVersion.html":{"url":"classes/AppVersion.html","title":"class - AppVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.version.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                buildVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            buildVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1.20191001'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.version.ts:1\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AppVersion { public static readonly buildVersion = '1.1.20191001'; }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApplicationSettingsComponent.html":{"url":"components/ApplicationSettingsComponent.html","title":"component - ApplicationSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApplicationSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/application-settings/application-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-application-settings\n            \n\n            \n                styleUrls\n                ./application-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./application-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appSettings\n                            \n                            \n                                appSettingsKeys\n                            \n                            \n                                    Public\n                                showTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getServerAddress\n                            \n                            \n                                getServerAddressList\n                            \n                            \n                                keyEvent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveEditedData\n                            \n                            \n                                updateServerAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/application-settings/application-settings.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getServerAddress\n                        \n                        \n                    \n                \n            \n            \n                \ngetServerAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/application-settings/application-settings.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getServerAddressList\n                        \n                        \n                    \n                \n            \n            \n                \ngetServerAddressList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/application-settings/application-settings.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keyEvent\n                        \n                        \n                    \n                \n            \n            \n                \nkeyEvent(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/application-settings/application-settings.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/application-settings/application-settings.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveEditedData\n                        \n                        \n                    \n                \n            \n            \n                \nsaveEditedData(event, item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/application-settings/application-settings.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateServerAddress\n                        \n                        \n                    \n                \n            \n            \n                \nupdateServerAddress(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/application-settings/application-settings.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appSettings\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/application-settings/application-settings.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appSettingsKeys\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/application-settings/application-settings.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'not'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/application-settings/application-settings.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../services/settings.service';\n\n@Component({\n  selector: 'app-application-settings',\n  templateUrl: './application-settings.component.html',\n  styleUrls: ['./application-settings.component.scss']\n})\nexport class ApplicationSettingsComponent implements OnInit {\n\n  public showTable = 'not';\n  appSettingsKeys;\n  appSettings;\n\n  constructor(private settings: SettingsService) { }\n\n  ngOnInit() {\n    this.appSettings = this.settings.getAppSettings();\n    this.appSettingsKeys = Object.keys(this.appSettings);\n  }\n\n  // @HostListener('document:keydown', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    console.log(this.constructor.name, 'keyEvent(), event = ', event);\n\n    let code: number | string;\n\n    if (event.code !== undefined) {\n      code = event.code;\n    } else if (event.keyCode !== undefined) {\n      code = event.keyCode;\n    }\n\n    if (code === 'Enter' || code === 'NumpadEnter' || code === 13) {\n      const htmlElement: HTMLInputElement = event.target;\n      if (htmlElement && htmlElement.nodeName === 'TD') {\n        if (htmlElement.offsetParent) {\n          const htmlTableElement: HTMLTableElement = document.getElementById(htmlElement.offsetParent.id);\n\n          if (htmlTableElement.id === 'application-settings-table') {\n            const rows = htmlTableElement.rows.length;\n            for (let i = 0; i  {\n            this.showTable = 'not';\n          }, 0);\n\n        }\n\n      }\n    }\n\n  }\n\n  saveEditedData(event, item) {\n    console.log('saveEditedData(), event, item = ', event, item);\n\n    const htmlElement = event.srcElement || event.target;\n    if (!htmlElement) {\n      console.error('saveEditedData(), Error: fail to get html element, event = ', event);\n      return;\n    }\n\n    let value = htmlElement.textContent;\n  }\n\n  getServerAddress() {\n  }\n\n  updateServerAddress(event) {\n    console.log('updateServerAddress(), event = ', event);\n  }\n\n  getServerAddressList() {\n    const addressList = [''];\n    addressList.push('');\n    addressList.push('http://localhost:8080');\n    addressList.push('http://95.161.178.222:42020');\n    return addressList;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Application settings\n  \n\n  \n  \n -->\n\n\n  \n    \n      {{ item }}\n      {{ appSettings[item] }}\n    \n  \n\n\n\n    \n\n    \n                \n                    ./application-settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Application settings       -->            {{ item }}      {{ appSettings[item] }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApplicationSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockHeaderComponent.html":{"url":"components/BlockHeaderComponent.html","title":"component - BlockHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlockHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/block-header.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-block-header\n            \n\n\n\n            \n                template\n                    \n    \n      {{opened ? title + ' Layout details' : title + ' Layout'}}\n    \n    \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opened\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opened\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/block-header.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/block-header.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'app-block-header',\n    template: `\n    \n    \n      {{opened ? title + ' Layout details' : title + ' Layout'}}\n    \n    `\n})\nexport class BlockHeaderComponent {\n    @Input() opened: boolean = false;\n    @Input() title: string = '';\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{opened ? title + \\' Layout details\\' : title + \\' Layout\\'}}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BreakpointMonitorTemplate.html":{"url":"classes/BreakpointMonitorTemplate.html","title":"class - BreakpointMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BreakpointMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ColorDeclarationsPipe.html":{"url":"pipes/ColorDeclarationsPipe.html","title":"pipe - ColorDeclarationsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ColorDeclarationsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/color-declarations.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        colorDeclarations\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/color-declarations.pipe.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'globref': 'blue',\n    'colset': 'green',\n    'var': 'darkorange',\n    'val': 'magenta',\n    'fun': 'red',\n    'local': 'red',\n    'exception': 'red',\n    'end': 'red',\n    'let': 'brown',\n    'in': 'brown',\n    'if': 'brown',\n    'else': 'brown',\n    'then': 'brown',\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pipes/color-declarations.pipe.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'colorDeclarations' })\nexport class ColorDeclarationsPipe implements PipeTransform {\n\n  colors = {\n    'globref': 'blue',\n    'colset': 'green',\n    'var': 'darkorange',\n    'val': 'magenta',\n    'fun': 'red',\n    'local': 'red',\n    'exception': 'red',\n    'end': 'red',\n    'let': 'brown',\n    'in': 'brown',\n    'if': 'brown',\n    'else': 'brown',\n    'then': 'brown',\n  };\n\n  transform(value: string): string {\n    let transformed = value;\n\n    if (value) {\n      for (const key of Object.keys(this.colors)) {\n        if (value.includes(key)) {\n          transformed = transformed.replace(new RegExp('\\\\b' + key + '\\\\b', 'gi'),\n            '' + key + '');\n        }\n      }\n    }\n\n    return transformed;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constants.html":{"url":"classes/Constants.html","title":"class - Constants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                C1\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            C1\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/common/constants.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Constants {\n  C1: 1\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountTransitionOccurrencesMonitorTemplate.html":{"url":"classes/CountTransitionOccurrencesMonitorTemplate.html","title":"class - CountTransitionOccurrencesMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountTransitionOccurrencesMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CpnServerUrl.html":{"url":"classes/CpnServerUrl.html","title":"class - CpnServerUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CpnServerUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cpn-server-url.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/cpn-server-url.ts:2\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in src/cpn-server-url.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(url)\n                \n            \n\n\n            \n                \n                    Defined in src/cpn-server-url.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class CpnServerUrl {\n  static url = '';\n  // static url = 'http://95.161.178.222:42020';\n\n  static set(url) {\n    this.url = url;\n  }\n\n  static get() {\n    return this.url;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataCollectionMonitorTemplate.html":{"url":"classes/DataCollectionMonitorTemplate.html","title":"class - DataCollectionMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataCollectionMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorPanelComponent.html":{"url":"components/EditorPanelComponent.html","title":"component - EditorPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editor-panel/editor-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor-panel\n            \n\n            \n                styleUrls\n                ./editor-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./editor-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mlTabArray\n                            \n                            \n                                modelEditorList\n                            \n                            \n                                modelTabArray\n                            \n                            \n                                tabsComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMlTab\n                            \n                            \n                                addTab\n                            \n                            \n                                changeName\n                            \n                            \n                                currentTabChange\n                            \n                            \n                                deleteTab\n                            \n                            \n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openMlEditor\n                            \n                            \n                                openModelEditor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/editor-panel/editor-panel.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMlTab\n                        \n                        \n                    \n                \n            \n            \n                \naddMlTab(tabArray, id, name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tabArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTab\n                        \n                        \n                    \n                \n            \n            \n                \naddTab(tabArray, id, name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tabArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeName\n                        \n                        \n                    \n                \n            \n            \n                \nchangeName(id, name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentTabChange\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentTabChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTab\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTab(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \nloadProject(project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openMlEditor\n                        \n                        \n                    \n                \n            \n            \n                \nopenMlEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openModelEditor\n                        \n                        \n                    \n                \n            \n            \n                \nopenModelEditor(pageObject, subPage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-panel/editor-panel.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageObject\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subPage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mlTabArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor-panel/editor-panel.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modelEditorList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ModelEditorComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor-panel/editor-panel.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modelTabArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor-panel/editor-panel.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabsComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabsContainer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('tabsComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor-panel/editor-panel.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentFactoryResolver,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\nimport { ModelService } from '../services/model.service';\nimport { ModelEditorComponent } from '../model-editor/model-editor.component';\nimport { TabsContainer } from '../../lib/tabs/tabs-container/tabs.container';\nimport { Message } from '../common/message';\nimport { EventService } from '../services/event.service';\n\n\n@Component({\n  selector: 'app-editor-panel',\n  templateUrl: './editor-panel.component.html',\n  styleUrls: ['./editor-panel.component.scss']\n})\nexport class EditorPanelComponent implements OnInit, OnDestroy {\n\n  @ViewChild('tabsComponent') tabsComponent: TabsContainer;\n\n  @ViewChildren(ModelEditorComponent) modelEditorList: QueryList;\n\n  modelTabArray = [];\n  mlTabArray = [];\n  constructor(private eventService: EventService, private modelService: ModelService) {\n  }\n\n  ngOnInit() {\n    // Subscribe on project load event\n    this.eventService.on(Message.PROJECT_LOAD, (event) => {\n      if (event.project) {\n        this.loadProject(event.project);\n      }\n    });\n\n    this.eventService.on(Message.TREE_SELECT_DECLARATION_NODE, (event) => {\n      if (event && event.openEditorTab) {\n        this.openMlEditor();\n      }\n    });\n\n    this.eventService.on(Message.PAGE_OPEN, (event) => {\n      this.openModelEditor(event.pageObject, event.subPages);\n    });\n\n    this.eventService.on(Message.PAGE_DELETE, (event) => {\n      this.deleteTab(event.id);\n\n      // const filteredList = this.modelEditorList.filter(e => e.pageId !== event.id);\n      // this.modelEditorList.reset(filteredList);\n      // if (filteredList.length === 0) {\n      //   this.loadProject(this.modelService.project);\n      // }\n      // console.log('editor-panel delete page --- ', this.modelEditorList);\n    });\n\n    this.eventService.on(Message.PAGE_CHANGE_NAME, (event) => {\n      this.changeName(event.id, event.name);\n    });\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  loadProject(project) {\n    this.modelTabArray = [];\n    this.mlTabArray = [];\n    this.tabsComponent.clear();\n\n    this.openMlEditor();\n  }\n\n  currentTabChange(event) {\n    console.log('currentTabChange(), event = ', event);\n  }\n\n  deleteTab(id) {\n    console.log('deleteTab(), modelTabArray = ', this.modelTabArray);\n    console.log('deleteTab(), mlTabArray = ', this.mlTabArray);\n\n    for (const i in this.modelTabArray) {\n      if (this.modelTabArray[i].id === id) {\n        console.log('deleteTab(), i, this.modelTabArray[i] = ', i, this.modelTabArray[i]);\n        this.modelTabArray.splice(parseInt(i, 0), 1);\n        break;\n      }\n    }\n\n    this.tabsComponent.deleteTabById(id);\n  }\n\n  changeName(id, name) {\n    const tab = this.tabsComponent.getTabByID(id);\n    if (tab) {\n      tab.tabTitle = name;\n    }\n  }\n\n  addTab(tabArray, id, name) {\n    tabArray.push({ id: id, title: name });\n\n    setTimeout(() => {\n      const tab = this.tabsComponent.getTabByID(id);\n      if (tab) {\n        this.tabsComponent.selectTab(tab);\n      }\n    }, 0);\n  }\n\n  addMlTab(tabArray, id, name) {\n    tabArray.push({ id: id, title: name });\n\n    setTimeout(() => {\n      const tab = this.tabsComponent.getTabByID(id);\n      if (tab) {\n        this.tabsComponent.selectTab(tab);\n      }\n    }, 0);\n  }\n\n  openModelEditor(pageObject, subPage) {\n    console.log('openPage(), pageObject = ', pageObject);\n\n    // var pageId = pageObject['@attributes'].id;\n    // var pageName = pageObject.pageattr['@attributes'].name;\n    const pageId = pageObject._id;\n    const pageName = pageObject.pageattr._name;\n\n    const tab = this.tabsComponent.getTabByID(pageId);\n\n    if (tab) {\n      this.tabsComponent.selectTab(tab);\n    } else {\n\n      this.addTab(this.modelTabArray, pageId, pageName);\n\n      setTimeout(() => {\n        if (this.modelEditorList) {\n          const tab = this.tabsComponent.getSelectedTab();\n\n          if (tab) {\n            this.modelEditorList.forEach(editor => {\n              if (editor.id === 'model_editor_' + tab.id) {\n                editor.load(pageObject, subPage);\n              }\n            });\n          }\n        }\n      }, 0);\n\n    }\n  }\n\n  openMlEditor() {\n    const pageId = 'ml-editor';\n    const pageName = 'ML editor';\n\n    let tab = this.tabsComponent.getTabByID(pageId);\n    if (tab) {\n      this.tabsComponent.selectTab(tab);\n    } else {\n      this.addMlTab(this.mlTabArray, pageId, pageName);\n\n      setTimeout(() => {\n        if (this.modelEditorList) {\n          tab = this.tabsComponent.getSelectedTab();\n          if (tab) {\n          }\n        }\n      }, 0);\n    }\n  }\n\n}\n\n    \n\n    \n        Add tab -->\n\n\n  \n\n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./editor-panel.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add tab -->                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                on\n                            \n                            \n                                    Public\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/event.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            on\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    on(id, func)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    func\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(id, event: null, wait)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    event\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    wait\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/event.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter } from 'events';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EventService {\n\n  private events: EventEmitter;\n\n  // private handlers = [];\n\n  constructor() {\n    this.events = new EventEmitter();\n    this.events.setMaxListeners(100);\n  }\n\n  public on(id, func) {\n    // this.handlers.push({ id, func });\n\n    this.events.addListener(id, (event) => func(event));\n  }\n\n  public send(id, event = null, wait = false) {\n\n    this.events.emit(id, event);\n\n    // for (const handler of this.handlers) {\n    //   if (handler && handler.id && handler.id === id) {\n    //     if (wait) {\n    //       handler.func(event);\n    //     } else {\n    //       setTimeout(() => {\n    //         handler.func(event);\n    //       }, 1);\n    //     }\n    //   }\n    // }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListLengthDataCollectionMonitorTemplate.html":{"url":"classes/ListLengthDataCollectionMonitorTemplate.html","title":"class - ListLengthDataCollectionMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListLengthDataCollectionMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainFrameComponent.html":{"url":"components/MainFrameComponent.html","title":"component - MainFrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainFrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-frame/main-frame.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-frame\n            \n\n            \n                styleUrls\n                ./main-frame.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                centerSplitPaneSize\n                            \n                            \n                                consoleSplitPaneSize\n                            \n                            \n                                editorSplitPaneSize\n                            \n                            \n                                explorerWidth\n                            \n                            \n                                gutterSize\n                            \n                            \n                                leftSplitPaneSize\n                            \n                            \n                                localStorageName\n                            \n                            \n                                    Public\n                                modelService\n                            \n                            \n                                rightSplitPaneSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-frame/main-frame.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \nloadProject(project: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-frame/main-frame.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-frame/main-frame.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-frame/main-frame.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            centerSplitPaneSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 55\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consoleSplitPaneSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorSplitPaneSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 70\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            explorerWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 25\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gutterSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftSplitPaneSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 25\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorageName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'angular-split-ws'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rightSplitPaneSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-frame/main-frame.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Message } from '../common/message';\nimport { EventService } from '../services/event.service';\nimport { ModelService } from '../services/model.service';\n\n@Component({\n  selector: 'app-main-frame',\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './main-frame.component.html',\n  styleUrls: ['./main-frame.component.scss'],\n})\nexport class MainFrameComponent implements OnInit, OnDestroy {\n  localStorageName = 'angular-split-ws';\n\n  explorerWidth = 25;\n\n  gutterSize = 3;\n\n  leftSplitPaneSize = 25;\n  centerSplitPaneSize = 55;\n  rightSplitPaneSize = 20;\n\n  editorSplitPaneSize = 70;\n  consoleSplitPaneSize = 30;\n\n  constructor(private eventService: EventService, public modelService: ModelService) {\n  }\n\n  ngOnInit() {\n    // Subscribe on project load event\n    this.eventService.on(Message.PROJECT_LOAD, (event) => {\n      if (event.project) {\n        this.loadProject(event.project);\n      }\n    });\n\n    // if (localStorage.getItem(this.localStorageName)) {\n    //   this.config = JSON.parse(localStorage.getItem(this.localStorageName));\n    // }\n    // else {\n    //   this.resetConfig();\n    // }\n\n    this.eventService.on(Message.MODEL_EDITOR_FULLSCREEN, () => {\n      console.log('MainFrameComponent, MODEL_EDITOR_FULLSCREEN');\n\n      if (this.centerSplitPaneSize === 100) {\n        this.leftSplitPaneSize = 25;\n        this.rightSplitPaneSize = 20;\n        this.consoleSplitPaneSize = 30;\n      } else {\n        this.leftSplitPaneSize = 0;\n        this.rightSplitPaneSize = 0;\n        this.consoleSplitPaneSize = 0;\n      }\n\n      this.centerSplitPaneSize = 100 - (this.leftSplitPaneSize + this.rightSplitPaneSize);\n      this.editorSplitPaneSize = 100 - this.consoleSplitPaneSize;\n    });\n  }\n\n  ngOnDestroy() {\n  }\n\n  loadProject(project: any) {\n    console.log('MainFrameComponent, loadProject(), project = ', project);\n    this.explorerWidth = 25;\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n        \n         -->\n\n      \n\n        \n          \n        \n\n        \n          \n        \n\n      \n\n    \n\n    \n\n      \n\n        \n        \n          \n        \n\n        \n        \n          \n        \n\n      \n\n    \n\n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./main-frame.component.scss\n                \n                .split-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding-bottom: 35px;\n  border: 0px solid green;\n  flex-basis: 2px !important;\n\n  as-split {\n    ::ng-deep .as-split-gutter-icon {\n      visibility: hidden;\n    }\n\n    ::ng-deep .as-split-gutter {\n      background-color: #e9e9e9 !important;\n    }\n  }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                       -->                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainFrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarComponent.html":{"url":"components/MainToolbarComponent.html","title":"component - MainToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-toolbar/main-toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-toolbar\n            \n\n            \n                styleUrls\n                ./main-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accessCpnService\n                            \n                            \n                                isStart\n                            \n                            \n                                    Public\n                                modelService\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fullScreen\n                            \n                            \n                                newCPNet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDoStep\n                            \n                            \n                                onStartSimulation\n                            \n                            \n                                onStopSimulation\n                            \n                            \n                                onValidate\n                            \n                            \n                                openProject\n                            \n                            \n                                reloadProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, eventService: EventService, validationService: ValidationService, accessCpnService: AccessCpnService, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-toolbar/main-toolbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validationService\n                                                  \n                                                        \n                                                                        ValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessCpnService\n                                                  \n                                                        \n                                                                        AccessCpnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fullScreen\n                        \n                        \n                    \n                \n            \n            \n                \nfullScreen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newCPNet\n                        \n                        \n                    \n                \n            \n            \n                \nnewCPNet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDoStep\n                        \n                        \n                    \n                \n            \n            \n                \nonDoStep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onStartSimulation\n                        \n                        \n                    \n                \n            \n            \n                \nonStartSimulation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onStopSimulation\n                        \n                        \n                    \n                \n            \n            \n                \nonStopSimulation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValidate\n                        \n                        \n                    \n                \n            \n            \n                \nonValidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openProject\n                        \n                        \n                    \n                \n            \n            \n                \nopenProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadProject\n                        \n                        \n                    \n                \n            \n            \n                \nreloadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-toolbar/main-toolbar.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accessCpnService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccessCpnService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-toolbar/main-toolbar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStart\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/main-toolbar/main-toolbar.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-toolbar/main-toolbar.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AppVersion.buildVersion\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-toolbar/main-toolbar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../services/project.service';\nimport { AppVersion } from '../app.version';\nimport { ModelService } from '../services/model.service';\nimport { EventService } from '../services/event.service';\nimport { Message } from '../common/message';\nimport { ValidationService } from '../services/validation.service';\nimport { AccessCpnService } from '../services/access-cpn.service';\n@Component({\n  selector: 'app-main-toolbar',\n  templateUrl: './main-toolbar.component.html',\n  styleUrls: ['./main-toolbar.component.scss']\n})\nexport class MainToolbarComponent implements OnInit {\n\n  version = AppVersion.buildVersion;\n  isStart;\n\n  constructor(\n    private projectService: ProjectService,\n    private eventService: EventService,\n    private validationService: ValidationService,\n    public accessCpnService: AccessCpnService,\n    public modelService: ModelService\n  ) {\n  }\n\n  ngOnInit() {\n    this.accessCpnService.setIsSimulation(false);\n  }\n\n  onDoStep() {\n    // this.accessCpnService.doStep('ID1412328496');\n  }\n\n  onStartSimulation() {\n    this.isStart = true;\n    this.accessCpnService.initSim();\n    this.eventService.on(Message.SERVER_INIT_SIM_DONE, (data) => {\n      if (this.isStart) {\n        this.accessCpnService.setIsSimulation(true);\n        this.eventService.send(Message.SIMULATION_STARTED);\n      }\n      this.isStart = false;\n    });\n  }\n\n  onStopSimulation() {\n    this.accessCpnService.setIsSimulation(false);\n    this.eventService.send(Message.SIMULATION_STOPED);\n  }\n\n  onValidate() {\n    // this.validationService.validate();\n    this.eventService.send(Message.SERVER_INIT_NET, { projectData: this.modelService.getProjectData(), complexVerify: false });\n  }\n\n  newCPNet() {\n    this.projectService.loadEmptyProject();\n  }\n\n  reloadProject() {\n    this.eventService.send(Message.PROJECT_LOAD, { project: this.modelService.getProject() });\n    this.validationService.validate();\n  }\n\n  fullScreen() {\n    this.eventService.send(Message.MODEL_EDITOR_FULLSCREEN, {});\n  }\n\n  openProject() {\n  }\n}\n\n    \n\n    \n        -->\n\n\n  CPN IDE-->\n\n  -->\n  \n    &nbsp;CPN IDE\n  \n\n  \n    \n   -->\n\n  \n\n\n    \n\n    \n    \n      \n        -->\n        \n        New project\n      \n    \n\n    \n\n    -->\n    Project:-->\n    -->\n\n    \n    \n      \n    \n\n    \n    \n      \n    \n\n    \n\n    \n    \n      \n        \n        Undo&nbsp; 0\">({{ modelService.getUndoCount() }}) -->\n         0; else elseUndoBlock\">Undo ({{ modelService.getUndoCount() }})\n        Undo\n      \n    \n\n    \n    \n      \n        \n         0; else elseRedoBlock\">Redo ({{ modelService.getRedoCount() }})\n        Redo\n      \n    \n\n    \n    \n      \n        \n        Reload\n      \n    \n\n    \n\n    \n    \n      \n        \n        Expand diagram\n      \n    \n\n    \n\n    \n    \n      \n        \n        Validate\n      \n    \n\n    \n\n    \n      \n        Simulation:\n      \n    \n\n    \n    \n      \n        \n        Step\n      \n     -->\n\n    \n    \n      \n        \n          \n          Stop\n        \n      \n      \n        \n          \n          Start\n        \n      \n    \n\n\n  \n\n  \n\n    \n\n    \n    \n      {{ version }}\n      {{ version }}\n      &nbsp;\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./main-toolbar.component.scss\n                \n                img.logo {\n  width: 32px;\n  height: 32px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->  CPN IDE-->  -->       CPN IDE           -->                            -->                New project                  -->    Project:-->    -->                                                                      Undo  0\">({{ modelService.getUndoCount() }}) -->         0; else elseUndoBlock\">Undo ({{ modelService.getUndoCount() }})        Undo                                         0; else elseRedoBlock\">Redo ({{ modelService.getRedoCount() }})        Redo                                        Reload                                            Expand diagram                                            Validate                                Simulation:                                        Step           -->                                          Stop                                                Start                                        {{ version }}      {{ version }}             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkingSizeMonitorTemplate.html":{"url":"classes/MarkingSizeMonitorTemplate.html","title":"class - MarkingSizeMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkingSizeMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/message.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Static\n                                DECLARATION_CHANGED\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                MODEL_CHANGED\n                            \n                            \n                                    Static\n                                MODEL_CHANGED_DETAILS\n                            \n                            \n                                    Static\n                                MODEL_EDITOR_FULLSCREEN\n                            \n                            \n                                    Static\n                                MODEL_RELOAD\n                            \n                            \n                                    Static\n                                MODEL_SAVE_BACKUP\n                            \n                            \n                                    Static\n                                MODEL_UPDATE_DIAGRAM\n                            \n                            \n                                    Static\n                                MONITOR_CHANGED\n                            \n                            \n                                    Static\n                                MONITOR_CREATED\n                            \n                            \n                                    Static\n                                MONITOR_DELETED\n                            \n                            \n                                    Static\n                                MONITOR_OPEN\n                            \n                            \n                                    Static\n                                MONITOR_SET_AVAILABLE_NODES\n                            \n                            \n                                    Static\n                                PAGE_CHANGE_NAME\n                            \n                            \n                                    Static\n                                PAGE_CREATE_SUBST\n                            \n                            \n                                    Static\n                                PAGE_DELETE\n                            \n                            \n                                    Static\n                                PAGE_OPEN\n                            \n                            \n                                    Static\n                                PAGE_UPDATE_SUBST\n                            \n                            \n                                    Static\n                                PROJECT_LOAD\n                            \n                            \n                                    Static\n                                SERVER_GET_BINDINGS\n                            \n                            \n                                    Static\n                                SERVER_GET_SIM_STATE\n                            \n                            \n                                    Static\n                                SERVER_GET_TOKEN_MARKS\n                            \n                            \n                                    Static\n                                SERVER_GET_TRANSITIONS\n                            \n                            \n                                    Static\n                                SERVER_INIT_NET\n                            \n                            \n                                    Static\n                                SERVER_INIT_NET_DONE\n                            \n                            \n                                    Static\n                                SERVER_INIT_NET_ERROR\n                            \n                            \n                                    Static\n                                SERVER_INIT_NET_START\n                            \n                            \n                                    Static\n                                SERVER_INIT_SIM\n                            \n                            \n                                    Static\n                                SERVER_INIT_SIM_DONE\n                            \n                            \n                                    Static\n                                SERVER_INIT_SIM_ERROR\n                            \n                            \n                                    Static\n                                SERVER_INIT_SIM_START\n                            \n                            \n                                    Static\n                                SHAPE_HOVER\n                            \n                            \n                                    Static\n                                SHAPE_OUT\n                            \n                            \n                                    Static\n                                SHAPE_SELECT\n                            \n                            \n                                    Static\n                                SIMULATION_SELECT_BINDING\n                            \n                            \n                                    Static\n                                SIMULATION_STARTED\n                            \n                            \n                                    Static\n                                SIMULATION_STOPED\n                            \n                            \n                                    Static\n                                SIMULATION_UPDATE_STATE\n                            \n                            \n                                    Static\n                                TREE_OPEN_DECLARATION_NODE\n                            \n                            \n                                    Static\n                                TREE_SELECT_DECLARATION_NODE\n                            \n                            \n                                    Static\n                                TREE_UPDATE_PAGES\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DECLARATION_CHANGED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'declaration.changed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MODEL_CHANGED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'model.changed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MODEL_CHANGED_DETAILS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'model.changed.details'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MODEL_EDITOR_FULLSCREEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'model.editor.fullscreen'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MODEL_RELOAD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'model.reload'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MODEL_SAVE_BACKUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'model.save.backup'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MODEL_UPDATE_DIAGRAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'model.update.diagram'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MONITOR_CHANGED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'monitor.changed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MONITOR_CREATED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'monitor.created'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MONITOR_DELETED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'monitor.deleted'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MONITOR_OPEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'monitor.open'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MONITOR_SET_AVAILABLE_NODES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'monitor.set.available.nodes'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PAGE_CHANGE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'page.change.name'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PAGE_CREATE_SUBST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'page.create.subst'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PAGE_DELETE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'page.delete'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PAGE_OPEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'page.open'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PAGE_UPDATE_SUBST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'page.update.subst'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PROJECT_LOAD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'project.load'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_GET_BINDINGS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.get.bindings'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_GET_SIM_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.get.sim.state'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_GET_TOKEN_MARKS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.get.token.mark'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_GET_TRANSITIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.get.transitions'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_NET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.net'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_NET_DONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.net.done'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_NET_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.net.error'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_NET_START\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.net.start'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_SIM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.sim'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_SIM_DONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.sim.done'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_SIM_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.sim.error'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_INIT_SIM_START\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'server.init.sim.start'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SHAPE_HOVER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'shape.hover'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SHAPE_OUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'shape.out'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SHAPE_SELECT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'shape.select'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SIMULATION_SELECT_BINDING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'simulation.select.binding'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SIMULATION_STARTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'simulation.started'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SIMULATION_STOPED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'simulation.stoped'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SIMULATION_UPDATE_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'simulation.update.state'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TREE_OPEN_DECLARATION_NODE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tree.open.declaration.node'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TREE_SELECT_DECLARATION_NODE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tree.select.declaration.node'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TREE_UPDATE_PAGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tree.update.pages'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/message.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Message {\n  static PROJECT_LOAD = 'project.load';\n\n  static MODEL_CHANGED = 'model.changed';\n  static MODEL_CHANGED_DETAILS = 'model.changed.details';\n  static MODEL_RELOAD = 'model.reload';\n  static MODEL_UPDATE_DIAGRAM = 'model.update.diagram';\n  static MODEL_SAVE_BACKUP = 'model.save.backup';\n  static MODEL_EDITOR_FULLSCREEN = 'model.editor.fullscreen';\n\n  static SHAPE_SELECT = 'shape.select';\n  static SHAPE_HOVER = 'shape.hover';\n  static SHAPE_OUT = 'shape.out';\n\n  static PAGE_OPEN = 'page.open';\n  static PAGE_DELETE = 'page.delete';\n  static PAGE_CHANGE_NAME = 'page.change.name';\n  static PAGE_CREATE_SUBST = 'page.create.subst';\n  static PAGE_UPDATE_SUBST = 'page.update.subst';\n\n  static TREE_UPDATE_PAGES = 'tree.update.pages';\n  static TREE_OPEN_DECLARATION_NODE = 'tree.open.declaration.node';\n  static TREE_SELECT_DECLARATION_NODE = 'tree.select.declaration.node';\n\n  static DECLARATION_CHANGED = 'declaration.changed';\n\n  static SERVER_INIT_NET = 'server.init.net';\n  static SERVER_INIT_NET_START = 'server.init.net.start';\n  static SERVER_INIT_NET_DONE = 'server.init.net.done';\n  static SERVER_INIT_NET_ERROR = 'server.init.net.error';\n\n  static SERVER_INIT_SIM = 'server.init.sim';\n  static SERVER_INIT_SIM_START = 'server.init.sim.start';\n  static SERVER_INIT_SIM_DONE = 'server.init.sim.done';\n  static SERVER_INIT_SIM_ERROR = 'server.init.sim.error';\n\n  static SERVER_GET_TOKEN_MARKS = 'server.get.token.mark';\n  static SERVER_GET_TRANSITIONS = 'server.get.transitions';\n  static SERVER_GET_BINDINGS = 'server.get.bindings';\n  static SERVER_GET_SIM_STATE = 'server.get.sim.state';\n\n  static SIMULATION_STARTED = 'simulation.started';\n  static SIMULATION_STOPED = 'simulation.stoped';\n  static SIMULATION_SELECT_BINDING = 'simulation.select.binding';\n  static SIMULATION_UPDATE_STATE = 'simulation.update.state';\n\n  static MONITOR_OPEN = 'monitor.open';\n  static MONITOR_CREATED = 'monitor.created';\n  static MONITOR_CHANGED = 'monitor.changed';\n  static MONITOR_DELETED = 'monitor.deleted';\n  static MONITOR_SET_AVAILABLE_NODES = 'monitor.set.available.nodes';\n\n  id: string;\n  data: object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MlEditorComponent.html":{"url":"components/MlEditorComponent.html","title":"component - MlEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MlEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ml-editor/ml-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ml-editor\n            \n\n            \n                styleUrls\n                ./ml-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ml-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpnElement\n                            \n                            \n                                cpnType\n                            \n                            \n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                saveEditedData\n                            \n                            \n                                selectDeclarationNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ml-editor/ml-editor.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Object\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ml-editor/ml-editor.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ml-editor/ml-editor.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ml-editor/ml-editor.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ml-editor/ml-editor.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ml-editor/ml-editor.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveEditedData\n                        \n                        \n                    \n                \n            \n            \n                \nsaveEditedData(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ml-editor/ml-editor.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDeclarationNode\n                        \n                        \n                    \n                \n            \n            \n                \nselectDeclarationNode(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ml-editor/ml-editor.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpnElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ml-editor/ml-editor.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpnType\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/ml-editor/ml-editor.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ml-editor/ml-editor.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Message } from '../common/message';\nimport { EventService } from '../services/event.service';\nimport { ModelService } from '../services/model.service';\n\n@Component({\n  selector: 'app-ml-editor',\n  templateUrl: './ml-editor.component.html',\n  styleUrls: ['./ml-editor.component.scss']\n})\nexport class MlEditorComponent implements OnInit, OnDestroy {\n  @Input() project: Object;\n\n  textValue = '';\n  cpnElement = {};\n  cpnType;\n\n  constructor(\n    private eventService: EventService,\n    private modelService: ModelService) {\n  }\n\n  ngOnInit() {\n    this.eventService.on(Message.TREE_SELECT_DECLARATION_NODE, (event) => {\n      this.selectDeclarationNode(event);\n    });\n  }\n\n  selectDeclarationNode(event) {\n    console.log(this.constructor.name, 'selectDeclarationNode(), event = ', event);\n\n    if (event.cpnElement && event.cpnType) {\n      this.cpnElement = event.cpnElement;\n      this.cpnType = event.cpnType;\n\n      this.textValue = this.modelService.cpnDeclarationElementToString(\n        this.cpnElement,\n        this.cpnType);\n    }\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    // this.subscription.unsubscribe();\n  }\n\n  onKeyUp(event) {\n    console.log('onKeyUp(), event -> ', event);\n  }\n\n  saveEditedData(event) {\n    console.log('saveEditedData(), event = ', event);\n\n    if (event.target && event.target.textContent) {\n      // console.log('saveEditedData(), event.target.textContent = ', event.target.textContent);\n      // console.log('saveEditedData(), this.cpnElement = ', this.cpnElement);\n\n      this.eventService.send(Message.DECLARATION_CHANGED, {\n        cpnElement: this.cpnElement,\n        newTextValue: event.target.textContent\n      });\n\n      // this.eventService.send(Message.MODEL_CHANGED);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Code\n\n\n\n  \n\n     -->\n\n    \n    \n\n  \n\n\n    \n\n    \n                \n                    ./ml-editor.component.scss\n                \n                [contenteditable]:focus {\n    outline: 0px solid transparent;\n}\n\n[contenteditable] {\n    white-space: pre;\n    overflow-x: visible;\n    font-size: 1.2em;\n    font-family: 'Courier New', Courier, monospace;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Code       -->          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MlEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelEditorToolbarComponent.html":{"url":"components/ModelEditorToolbarComponent.html","title":"component - ModelEditorToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelEditorToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-model-editor-toolbar\n            \n\n            \n                styleUrls\n                ./model-editor-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./model-editor-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlace\n                            \n                            \n                                createTransition\n                            \n                            \n                                lassoTool\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editorRef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editorRef\n                    \n                \n                \n                    \n                        Type :         ModelEditorComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPlace\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePlace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTransition\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTransition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lassoTool\n                        \n                        \n                    \n                \n            \n            \n                \nlassoTool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ModelEditorComponent} from '../model-editor.component';\n\n@Component({\n  selector: 'app-model-editor-toolbar',\n  templateUrl: './model-editor-toolbar.component.html',\n  styleUrls: ['./model-editor-toolbar.component.scss']\n})\nexport class ModelEditorToolbarComponent implements OnInit {\n\n  @Input()\n  editorRef: ModelEditorComponent;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  lassoTool() {\n  }\n\n  createPlace() {\n  }\n\n  createTransition() {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Selection:\n    \n\n    \n    \n      \n        \n      \n    \n\n    \n\n    \n      Create:\n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n  \n\n  \n  \n  \n  Search\n -->\n\n\n    \n\n    \n                \n                    ./model-editor-toolbar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Selection:                                                  Create:                                                                              Search -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelEditorToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MonitorNamePipe.html":{"url":"pipes/MonitorNamePipe.html","title":"pipe - MonitorNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MonitorNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/monitor-name.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        monitorName\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(monitor: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/monitor-name.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'monitorName' })\nexport class MonitorNamePipe implements PipeTransform {\n\n  transform(monitor: any): string {\n    return monitor._name + ' (' + monitor._typedescription + ')';\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitorTemplate.html":{"url":"interfaces/MonitorTemplate.html","title":"interface - MonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultInit\n                                \n                                \n                                    defaultLogging\n                                \n                                \n                                    defaultObserver\n                                \n                                \n                                    defaultPredicate\n                                \n                                \n                                    defaultStop\n                                \n                                \n                                    defaultTimed\n                                \n                                \n                                    type\n                                \n                                \n                                    typeDescription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \ntypeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenprojectButtonComponent.html":{"url":"components/OpenprojectButtonComponent.html","title":"component - OpenprojectButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OpenprojectButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/openproject-button/openproject-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-openproject-button\n            \n\n            \n                styleUrls\n                ./openproject-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./openproject-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/openproject-button/openproject-button.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/actions/openproject-button/openproject-button.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \nuploadFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/actions/openproject-button/openproject-button.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ProjectService} from '../../services/project.service';\n\n@Component({\n  selector: 'app-openproject-button',\n  templateUrl: './openproject-button.component.html',\n  styleUrls: ['./openproject-button.component.scss']\n})\nexport class OpenprojectButtonComponent implements OnInit {\n\n  constructor(private projectService: ProjectService) {\n  }\n\n  ngOnInit() {\n  }\n\n  uploadFile(event) {\n    if (event && event.target && event.target.files) {\n      const files: FileList = event.target.files;\n\n      if (files.length === 0) {\n        console.log('No file selected!');\n        return;\n      }\n\n      const file: File = files[0];\n      this.projectService.loadProjectFile(file);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    -->\n    \n    Open project\n  \n\n\n    \n\n    \n                \n                    ./openproject-button.component.scss\n                \n                label {\n  margin: 0 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          -->        Open project  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenprojectButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OptionsNamePipePipe.html":{"url":"pipes/OptionsNamePipePipe.html","title":"pipe - OptionsNamePipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OptionsNamePipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/options-name.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        optionName\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/options-name.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'optionName'})\nexport class OptionsNamePipePipe implements PipeTransform {\n\n  transform(value: string): string {\n\n    let transformed = value;\n    if (value.startsWith('option_')) {\n      transformed = value.substring(7);\n    }\n\n    switch (transformed) {\n      case 'realtimestamp':\n        transformed = 'Real Timestamp';\n        break;\n      case 'fair_be':\n        transformed = 'Binding Element Fairness';\n        break;\n      case 'global_fairness':\n        transformed = 'Global BE Fairness';\n        break;\n      case 'outputdirectory':\n        transformed = 'Output directory';\n        break;\n      case 'repavg':\n        transformed = 'Average';\n        break;\n      case 'repciavg':\n        transformed = 'Confidence intervals for average';\n        break;\n      case 'repcount':\n        transformed = 'Number of observations';\n        break;\n      case 'repfirstval':\n        transformed = 'First value observed';\n        break;\n      case 'replastval':\n        transformed = 'Last value observed';\n        break;\n      case 'repmax':\n        transformed = 'Maximum';\n        break;\n      case 'repmin':\n        transformed = 'Minimum';\n        break;\n      case 'repssquare':\n        transformed = 'Sum of squares';\n        break;\n      case 'repssqdev':\n        transformed = 'Sum of squares of deviation';\n        break;\n      case 'repstddev':\n        transformed = 'Standard deviation';\n        break;\n      case 'repsum':\n        transformed = 'Sum';\n        break;\n      case 'repvariance':\n        transformed = 'Variance';\n        break;\n      case 'avg':\n        transformed = 'Average';\n        break;\n      case 'ciavg':\n        transformed = 'Confidence intervals for average';\n        break;\n      case 'count':\n        transformed = 'Number of observations';\n        break;\n      case 'firstval':\n        transformed = 'First value observed';\n        break;\n      case 'lastval':\n        transformed = 'Last value observed';\n        break;\n      case 'max':\n        transformed = 'Maximum';\n        break;\n      case 'min':\n        transformed = 'Minimum';\n        break;\n      case 'ssquare':\n        transformed = 'Sum of squares';\n        break;\n      case 'ssqdev':\n        transformed = 'Sum of squares of deviation';\n        break;\n      case 'stddev':\n        transformed = 'Standard deviation';\n        break;\n      case 'sum':\n        transformed = 'Sum';\n        break;\n      case 'variance':\n        transformed = 'Variance';\n        break;\n      case 'firstupdate':\n        transformed = 'Time of first update';\n        break;\n      case 'interval':\n        transformed = 'Time interval';\n        break;\n      case 'lastupdate':\n        transformed = 'Time of last update';\n        break;\n      case 'untimedavg':\n        transformed = 'Average';\n        break;\n      case 'untimedciavg':\n        transformed = 'Confidence intervals for average';\n        break;\n      case 'untimedcount':\n        transformed = 'Number of observations';\n        break;\n      case 'untimedfirstval':\n        transformed = 'First value observed';\n        break;\n      case 'untimedlastval':\n        transformed = 'Last value observed';\n        break;\n      case 'untimedmax':\n        transformed = 'Maximum';\n        break;\n      case 'untimedmin':\n        transformed = 'Minimum';\n        break;\n      case 'untimedssquare':\n        transformed = 'Sum of squares';\n        break;\n      case 'untimedssqdev':\n        transformed = 'Sum of squares of deviation';\n        break;\n      case 'untimedstddev':\n        transformed = 'Standard deviation';\n        break;\n      case 'untimedsum':\n        transformed = 'Sum';\n        break;\n      case 'untimedvariance':\n        transformed = 'Variance';\n        break;\n    }\n\n    return transformed;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlaceContentBreakPointMonitorTemplate.html":{"url":"classes/PlaceContentBreakPointMonitorTemplate.html","title":"class - PlaceContentBreakPointMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlaceContentBreakPointMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectConsoleComponent.html":{"url":"components/ProjectConsoleComponent.html","title":"component - ProjectConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-console/project-console.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                DatePipe\n                \n            \n\n\n            \n                selector\n                app-project-console\n            \n\n            \n                styleUrls\n                ./project-console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-console.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesHtml\n                            \n                            \n                                logHtml\n                            \n                            \n                                nodes\n                            \n                            \n                                processing\n                            \n                            \n                                success\n                            \n                            \n                                timeInitStart\n                            \n                            \n                                timeSimStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                            \n                                logChanges\n                            \n                            \n                                logColor\n                            \n                            \n                                logError\n                            \n                            \n                                logSuccess\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                timeConversion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, accessCpnService: AccessCpnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-console/project-console.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessCpnService\n                                                  \n                                                        \n                                                                        AccessCpnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-console/project-console.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logChanges\n                        \n                        \n                    \n                \n            \n            \n                \nlogChanges(text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-console/project-console.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logColor\n                        \n                        \n                    \n                \n            \n            \n                \nlogColor(text, className)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-console/project-console.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    className\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \nlogError(text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-console/project-console.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nlogSuccess(text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-console/project-console.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-console/project-console.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            timeConversion\n                        \n                        \n                    \n                \n            \n            \n                \ntimeConversion(millisec)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-console/project-console.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    millisec\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesHtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-console/project-console.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logHtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-console/project-console.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-console/project-console.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-console/project-console.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-console/project-console.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeInitStart\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-console/project-console.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeSimStart\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-console/project-console.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AccessCpnService } from '../services/access-cpn.service';\nimport { Message } from '../common/message';\nimport { EventService } from '../services/event.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-project-console',\n  templateUrl: './project-console.component.html',\n  styleUrls: ['./project-console.component.scss'],\n  providers: [DatePipe]\n})\nexport class ProjectConsoleComponent implements OnInit {\n\n  success = false;\n\n  nodes = [];\n  logHtml = [];\n  changesHtml = [];\n  processing = false;\n\n  timeInitStart;\n  timeSimStart;\n\n  constructor(private eventService: EventService,\n    private accessCpnService: AccessCpnService) {\n  }\n\n  ngOnInit() {\n    this.eventService.on(Message.PROJECT_LOAD, (event) => {\n      this.logHtml = [];\n      this.changesHtml = [];\n      this.nodes = [];\n\n      if (event.project) {\n        this.logSuccess('Project ' + event.project.name + ' loaded.');\n      }\n    });\n\n    // VALIDATION\n\n    this.eventService.on(Message.SERVER_INIT_NET_START, () => {\n      this.logHtml = [];\n      this.nodes = [];\n      this.log('Validation process...');\n      this.timeInitStart = new Date().getTime();\n    });\n\n    this.eventService.on(Message.SERVER_INIT_NET_DONE, (event) => {\n      if (event && event.data) {\n        const elapsed = new Date().getTime() - this.timeInitStart;\n\n        if (event.data.success) {\n          this.logSuccess('Complete in ' + this.timeConversion(elapsed) + '. Model is correct.');\n        } else {\n          this.logError('Complete in ' + this.timeConversion(elapsed) + ' with errors:');\n\n          const errorData = this.accessCpnService.getErrorData();\n          console.log('errorData: ', errorData);\n          if (Object.keys(errorData).length > 0) {\n            for (const id of Object.keys(errorData)) {\n              this.logError(id + ': ' + errorData[id]);\n            }\n          }\n        }\n      }\n      // this.accessCpnService.getTokenMarks();\n      // this.accessCpnService.getTransitions();\n    });\n\n    this.eventService.on(Message.SERVER_INIT_NET_ERROR, (event) => {\n      if (event) {\n        if (event.data && event.data.error && event.data.error.stackTrace) {\n          this.logError('Validation server error:\\n' + event.data.error.stackTrace);\n        } else {\n          this.logError('Validation server error: ' + JSON.stringify(event.data));\n        }\n      }\n    });\n\n    // SIMULATION\n\n    this.eventService.on(Message.SERVER_INIT_SIM_START, () => {\n      this.logHtml = [];\n      this.nodes = [];\n      this.log('Simulator initializing...');\n      this.timeSimStart = new Date().getTime();\n    });\n\n\n    this.eventService.on(Message.SERVER_INIT_SIM_DONE, () => {\n      const elapsed = new Date().getTime() - this.timeSimStart;\n      this.logSuccess('Simulator initialized in ' + this.timeConversion(elapsed) + '.');\n    });\n\n    this.eventService.on(Message.SERVER_INIT_SIM_ERROR, (event) => {\n      if (event && event.data) {\n        if (event.data.error && event.data.error.description) {\n          this.logError('Simulator initializing error: ' + event.data.error.description);\n          this.logError(event.data.error.stackTrace);\n        } else if (event.data.error && event.data.error.stackTrace) {\n          this.logError('Simulator initializing error:\\n' + event.data.error.stackTrace);\n        } else {\n          this.logError('Simulator initializing error:\\n' + JSON.stringify(event.data));\n        }\n      } else {\n        this.logError('Simulator initializing error: UNDEFINED');\n      }\n    });\n\n    // TOKENS\n    this.eventService.on(Message.SERVER_GET_TOKEN_MARKS, (event) => {\n      if (event) {\n        this.logSuccess('Tokens: ' + JSON.stringify(event.data));\n      }\n    });\n\n    // TRANSITIONS\n    this.eventService.on(Message.SERVER_GET_TRANSITIONS, (event) => {\n      if (event) {\n        this.logSuccess('Ready transitions: ' + JSON.stringify(event.data));\n      }\n    });\n\n    // MODEL CHANGES\n    this.eventService.on(Message.MODEL_CHANGED_DETAILS, (event) => {\n      if (event && event.changesPath) {\n        this.logChanges(event.changesPath);\n      }\n    });\n\n  }\n\n  logColor(text, className) {\n    this.logHtml.push({\n      date: new Date(),\n      class: className,\n      text: text\n    });\n\n    setTimeout(() => {\n      const logScrollPane = document.getElementById('logScrollPane');\n      logScrollPane.scrollTop = logScrollPane.scrollHeight;\n    }, 100);\n  }\n\n  log(text) {\n    this.logColor(text, 'normal');\n  }\n\n  logError(text) {\n    this.logColor(text, 'error');\n  }\n\n  logSuccess(text) {\n    this.logColor(text, 'success');\n  }\n\n  logChanges(text) {\n    this.changesHtml.push({\n      date: new Date(),\n      class: 'normal',\n      text: text\n    });\n\n    setTimeout(() => {\n      const changesScrollPane = document.getElementById('changesScrollPane');\n      changesScrollPane.scrollTop = changesScrollPane.scrollHeight;\n    }, 100);\n  }\n\n\n  timeConversion(millisec) {\n    const seconds: number = (millisec / 1000);\n    const minutes = (millisec / (1000 * 60));\n    const hours = (millisec / (1000 * 60 * 60));\n    const days = (millisec / (1000 * 60 * 60 * 24));\n\n    if (seconds \n    \n\n    \n        \n\n\n  \n\n  \n\n    \n      \n        \n            \n            Clear\n          \n        \n      \n    \n\n    \n\n      \n        \n          {{ item.date | date: 'yyyy-MM-dd HH:mm:ss' }} : {{ item.text }}\n        \n      \n\n    \n\n  \n\n  \n\n  \n\n    \n      \n        \n            \n            Clear\n          \n        \n      \n    \n\n    \n\n      \n        \n          {{ item.date | date: 'yyyy-MM-dd HH:mm:ss' }} : {{ item.text }}\n        \n      \n\n    \n\n  \n\n  \n   --> -->\n\n\n\n    \n\n    \n                \n                    ./project-console.component.scss\n                \n                .logConsole {\n  padding: 10px;\n\n  div {\n    white-space: pre;\n  }\n\n  .normal {\n    color: gray;\n  }\n\n  .error {\n    color: red;\n  }\n\n  .success {\n    color: green;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Clear                                                        {{ item.date | date: \\'yyyy-MM-dd HH:mm:ss\\' }} : {{ item.text }}                                                                  Clear                                                        {{ item.date | date: \\'yyyy-MM-dd HH:mm:ss\\' }} : {{ item.text }}                         --> -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMonitorsComponent.html":{"url":"components/ProjectMonitorsComponent.html","title":"component - ProjectMonitorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectMonitorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-monitors/project-monitors.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-monitors\n            \n\n            \n                styleUrls\n                ./project-monitors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-monitors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accessCpnService\n                            \n                            \n                                boolValues\n                            \n                            \n                                cpnElement\n                            \n                            \n                                createNodeIntent\n                            \n                            \n                                JSON\n                            \n                            \n                                nodeList\n                            \n                            \n                                nodeToArray\n                            \n                            \n                                nodeTypeList\n                            \n                            \n                                optionLogging\n                            \n                            \n                                optionTimed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOption\n                            \n                            \n                                getOptionValue\n                            \n                            \n                                isMonitorsSubnode\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloneMonitor\n                            \n                            \n                                onCreateNode\n                            \n                            \n                                onDeclarationClick\n                            \n                            \n                                onDeclarationDblClick\n                            \n                            \n                                onDeleteMonitor\n                            \n                            \n                                onDeleteNode\n                            \n                            \n                                onDisableMonitor\n                            \n                            \n                                onLoadMonitor\n                            \n                            \n                                onNewNode\n                            \n                            \n                                onSaveDeclaration\n                            \n                            \n                                onUpdateDeclaration\n                            \n                            \n                                setCreateNodeIntent\n                            \n                            \n                                updateChanges\n                            \n                            \n                                updateOptionValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, modelService: ModelService, accessCpnService: AccessCpnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-monitors/project-monitors.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessCpnService\n                                                  \n                                                        \n                                                                        AccessCpnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetOption(name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptionValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptionValue(name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMonitorsSubnode\n                        \n                        \n                    \n                \n            \n            \n                \nisMonitorsSubnode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCloneMonitor\n                        \n                        \n                    \n                \n            \n            \n                \nonCloneMonitor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCreateNode\n                        \n                        \n                    \n                \n            \n            \n                \nonCreateNode(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeclarationClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDeclarationClick(event, declaration)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    declaration\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeclarationDblClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDeclarationDblClick(event, declaration)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    declaration\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteMonitor\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteMonitor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteNode\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteNode(node)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDisableMonitor\n                        \n                        \n                    \n                \n            \n            \n                \nonDisableMonitor(disable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadMonitor\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadMonitor(cpnElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpnElement\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewNode\n                        \n                        \n                    \n                \n            \n            \n                \nonNewNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveDeclaration\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveDeclaration(event, declaration)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    declaration\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateDeclaration\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateDeclaration(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCreateNodeIntent\n                        \n                        \n                    \n                \n            \n            \n                \nsetCreateNodeIntent(enable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enable\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateChanges\n                        \n                        \n                    \n                \n            \n            \n                \nupdateChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOptionValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOptionValue(event, name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-monitors/project-monitors.component.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accessCpnService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccessCpnService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boolValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'true',\n    'false'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpnElement\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNodeIntent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeToArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodeToArray\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeTypeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionLogging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionTimed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-monitors/project-monitors.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../services/event.service';\nimport { Message } from '../common/message';\nimport { ModelService } from '../services/model.service';\nimport { AccessCpnService } from '../services/access-cpn.service';\nimport { nodeToArray } from '../common/utils';\nimport { getMonitorNodeTypeList } from '../common/monitors';\n\nimport {\n  CPN_LABEL,\n  CPN_PLACE,\n  CPN_TRANSITION,\n  is,\n} from '../../lib/cpn-js/util/ModelUtil';\n\n@Component({\n  selector: 'app-project-monitors',\n  templateUrl: './project-monitors.component.html',\n  styleUrls: ['./project-monitors.component.scss']\n})\nexport class ProjectMonitorsComponent implements OnInit {\n\n  JSON = JSON;\n  nodeToArray = nodeToArray;\n\n  cpnElement;\n  optionTimed = false;\n  optionLogging = false;\n\n  nodeList = [];\n  nodeTypeList = [];\n\n  boolValues = [\n    'true',\n    'false'\n  ];\n\n  createNodeIntent = false;\n\n  constructor(private eventService: EventService,\n    private modelService: ModelService,\n    public accessCpnService: AccessCpnService) { }\n\n  ngOnInit() {\n    this.eventService.on(Message.PROJECT_LOAD, () => this.onLoadMonitor(undefined));\n    this.eventService.on(Message.MODEL_RELOAD, () => this.onLoadMonitor(undefined));\n\n    this.eventService.on(Message.MONITOR_OPEN, (event) => this.onLoadMonitor(event.monitorObject));\n    this.eventService.on(Message.SHAPE_SELECT, (event) => { if (this.createNodeIntent) { this.onCreateNode(event); } });\n\n    this.eventService.on(Message.DECLARATION_CHANGED, (event) => this.onUpdateDeclaration(event));\n\n  }\n\n  getOption(name) {\n    if (this.cpnElement && this.cpnElement.option) {\n      // console.log('this.cpnElement.option = ', this.cpnElement.option);\n\n      const options = this.cpnElement.option instanceof Array ? this.cpnElement.option : [this.cpnElement.option];\n      const option = options.find((o) => o._name === name);\n      if (option) {\n        return option;\n      }\n    }\n    return undefined;\n  }\n\n  getOptionValue(name) {\n    const option = this.getOption(name);\n    if (option) {\n      return option._value;\n    }\n    return undefined;\n  }\n\n  setCreateNodeIntent(enable) {\n    this.createNodeIntent = enable;\n    document.body.style.cursor = enable ? 'crosshair' : 'default';\n  }\n\n  onLoadMonitor(cpnElement) {\n    this.cpnElement = cpnElement;\n    this.nodeList = this.modelService.getMonitorNodeNamesList(this.cpnElement);\n\n    this.optionTimed = this.getOption('Timed');\n    this.optionLogging = this.getOption('Logging');\n\n    this.nodeTypeList = this.cpnElement ? getMonitorNodeTypeList(this.cpnElement._type) : [];\n\n    console.log('onLoadMonitor(), this.cpnElement = ', this.cpnElement);\n    console.log('onLoadMonitor(), this.nodeList = ', this.nodeList);\n  }\n\n  onCreateNode(event) {\n    this.setCreateNodeIntent(false);\n\n    const element = event.element.labelTarget ?\n      event.element.labelTarget.labelTarget || event.element.labelTarget :\n      event.element;\n\n    if (element && element.cpnElement) {\n      console.log('onCreateNode(), element.cpnElement = ', element.cpnElement);\n\n      if (is(element, CPN_PLACE)) {\n        if (!this.nodeTypeList.includes('place')) {\n          return;\n        }\n      }\n\n      if (is(element, CPN_TRANSITION)) {\n        if (!this.nodeTypeList.includes('transition')) {\n          return;\n        }\n      }\n\n      // const pages = this.modelService.getAllPages();\n      // for (const page of pages) {\n      //   const instances = this.modelService.getSubInstances(page);\n      //   if (instances) {\n      //     for (const instance of instances) {\n      //       console.log('onCreateNode(), instance = ', instance);\n      //     }\n      //   }\n      // }\n\n      const monitorNodeList = nodeToArray(this.cpnElement.node) || [];\n      monitorNodeList.push({\n        _idref: element.cpnElement._id,\n        _pageinstanceidref: 'id251437332ia'\n      });\n      this.cpnElement.node = monitorNodeList.length === 1 ? monitorNodeList[0] : monitorNodeList;\n      this.onLoadMonitor(this.cpnElement);\n      this.updateChanges();\n    }\n  }\n\n  onUpdateDeclaration(event) {\n    if (event.cpnElement && event.newTextValue) {\n      const result = this.modelService.stringToCpnDeclarationElement(\n        event.cpnElement,\n        event.newTextValue);\n      console.log('Message.DECLARATION_CHANGED, event.cpnElement = ', event.cpnElement);\n      console.log('Message.DECLARATION_CHANGED, result = ', result);\n\n      event.cpnElement.__text = result.cpnElement.__text;\n\n      this.onLoadMonitor(this.cpnElement);\n      this.updateChanges();\n    }\n  }\n\n\n  onDeclarationClick(event, declaration) {\n    // if (this.selectedNode !== node) {\n    //   this.selectedNode = node;\n\n    //   this.goToEditNode(node.id);\n\n    //   if (node.type === 'declaration') {\n    //     this.sendSelectDeclarationNode(node, false);\n    //   }\n    // }\n  }\n\n  onDeclarationDblClick(event, declaration) {\n    console.log('onDeclarationDblClick(), declaration = ', declaration);\n\n    this.onDeclarationClick(event, declaration);\n\n    // if (node.type === 'declaration') {\n    //   this.sendSelectDeclarationNode(node, true);\n    // }\n\n    this.eventService.send(Message.TREE_SELECT_DECLARATION_NODE, {\n      sender: this,\n      openEditorTab: true,\n      cpnType: 'ml',\n      cpnElement: declaration.ml\n    });\n  }\n\n  onSaveDeclaration(event, declaration) {\n    this.updateChanges();\n  }\n\n  onNewNode() {\n    console.log('onNewNode(), this.cpnElement = ', this.cpnElement);\n    console.log('onNewNode(), this.nodeTypeList = ', this.nodeTypeList);\n    this.setCreateNodeIntent(true);\n\n    const availableNodeIds = [];\n\n    if (this.nodeTypeList.includes('place')) {\n      for (const p of this.modelService.getAllPlaces()) {\n        availableNodeIds.push(p._id);\n      }\n    }\n    if (this.nodeTypeList.includes('transition')) {\n      for (const t of this.modelService.getAllTrans()) {\n        availableNodeIds.push(t._id);\n      }\n    }\n    this.eventService.send(Message.MONITOR_SET_AVAILABLE_NODES, { availableNodeIds: availableNodeIds });\n  }\n\n  onDeleteNode(node) {\n    // console.log('onDeleteNode(), node = ', node);\n\n    let monitorNodeList = nodeToArray(this.cpnElement.node);\n    const monitorNode = monitorNodeList.find(n => n._idref === node.element._id);\n\n    // console.log('onDeleteNode(), monitorNode = ', monitorNode);\n\n    if (monitorNode) {\n      monitorNodeList = monitorNodeList.filter(n => n !== monitorNode);\n      this.cpnElement.node = monitorNodeList.length === 1 ? monitorNodeList[0] : monitorNodeList;\n      this.onLoadMonitor(this.cpnElement);\n      this.updateChanges();\n    }\n  }\n\n  updateChanges() {\n    // this.eventService.send(Message.MODEL_UPDATE_DIAGRAM, { cpnElement: this.cpnElement });\n    // this.eventService.send(Message.MODEL_CHANGED);\n    this.eventService.send(Message.MONITOR_SET_AVAILABLE_NODES, { availableNodeIds: [] });\n  }\n\n  updateOptionValue(event, name) {\n    // console.log(this.constructor.name, 'updatePortType(), event = ', event);\n\n    if (!this.cpnElement) {\n      return;\n    }\n\n    const value = event.trim();\n    const option = this.getOption(name);\n    if (option) {\n      option._value = value;\n    }\n    this.updateChanges();\n  }\n\n  onCloneMonitor() {\n  }\n\n  onDisableMonitor(disable: boolean) {\n    this.cpnElement._disabled = disable.toString();\n    this.eventService.send(Message.MONITOR_CHANGED, { monitorCpnElement: this.cpnElement });\n  }\n\n  onDeleteMonitor() {\n    if (this.cpnElement) {\n      this.modelService.deleteFromModel(this.cpnElement);\n      this.onLoadMonitor(undefined);\n      this.eventService.send(Message.MONITOR_DELETED, { monitorCpnElement: this.cpnElement });\n    }\n  }\n\n  isMonitorsSubnode() {\n    return false;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Monitor\n    \n     -->\n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n        Delete\n      \n    \n  \n\n\n\n\n  \n\n    \n      {{ cpnElement._typedescription }}\n    \n\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n\n    \n    Nodes -->\n    \n      \n        \n          Nodes\n        \n      \n\n      \n        \n          \n            \n            New node\n          \n        \n      \n    \n\n    \n      {{ nodeList.length }}\n     -->\n\n    \n      \n        Page\n        Element\n       -->\n\n      \n        \n          {{ node.page.pageattr._name }}\n          {{ node.element.text }} ({{ node.elementType }})\n\n          \n            \n              \n                \n              \n            \n          \n        \n      \n    \n    \n\n    \n    \n\n      \n\n        \n          \n            {{ declaration._name }}\n          \n        \n\n        \n          \n            \n              \n\n                \n                \n\n              \n            \n          \n        \n\n      \n\n    \n    \n\n    \n      {{ JSON.stringify(cpnElement) }}\n     -->\n\n  \n\n\n\n    \n\n    \n                \n                    ./project-monitors.component.scss\n                \n                td.ml {\n  padding: 0 1px;\n}\n\ndiv.editablenode {\n  padding: 5px 10px;\n  white-space: pre;\n}\n\ntd.node-highlight-error {\n  background: #ffcccc;\n  border-bottom: solid red 2px;\n}\n\n.nav-item .header {\n  padding: 2px 7px;\n  font-weight: bold;\n}\n\ntd.tableButton {\n  width: 1px;\n}\na.tableButton {\n  color: gray;\n}\n\n[contenteditable] {\n  border: none !important;\n  overflow: auto !important;\n  outline: none !important;\n\n  -webkit-box-shadow: none !important;\n  -moz-box-shadow: none !important;\n  box-shadow: none ;\n  resize: none ;\n\n  padding: 0;\n  -webkit-padding: 0;\n}\n\n[contenteditable]:focus {\n  // outline: 0px solid transparent;\n  outline: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Monitor         -->                                                                                                                              Delete                        {{ cpnElement._typedescription }}                                                                                            Nodes -->                            Nodes                                                              New node                                      {{ nodeList.length }}     -->                  Page        Element       -->                        {{ node.page.pageattr._name }}          {{ node.element.text }} ({{ node.elementType }})                                                                                                                                                          {{ declaration._name }}                                                                                                                                                                  {{ JSON.stringify(cpnElement) }}     -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMonitorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project.service.ts\n        \n\n            \n                Description\n            \n            \n                Common service for getting access to project data from all application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPageId\n                            \n                            \n                                    Private\n                                currentSelectedElement\n                            \n                            \n                                    Public\n                                modelName\n                            \n                            \n                                    Public\n                                project\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentElement\n                            \n                            \n                                    Public\n                                getProject\n                            \n                            \n                                loadEmptyProject\n                            \n                            \n                                loadProjectFile\n                            \n                            \n                                loadProjectXml\n                            \n                            \n                                parseXml\n                            \n                            \n                                setCurrentElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, http: HttpClient, modelService: ModelService, accessCpnService: AccessCpnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/project.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessCpnService\n                                                  \n                                                        \n                                                                        AccessCpnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEmptyProject\n                        \n                        \n                    \n                \n            \n            \n                \nloadEmptyProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadProjectFile\n                        \n                        \n                    \n                \n            \n            \n                \nloadProjectFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:52\n                \n            \n\n\n            \n                \n                    Load project file to ProjectService instance for getting access from all application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadProjectXml\n                        \n                        \n                    \n                \n            \n            \n                \nloadProjectXml(filename: string, projectXml: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:80\n                \n            \n\n\n            \n                \n                    Loading project data from XML string, parse XML and converting to project JSON object for all application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projectXml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseXml\n                        \n                        \n                    \n                \n            \n            \n                \nparseXml(xml)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xml\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCurrentElement\n                        \n                        \n                    \n                \n            \n            \n                \nsetCurrentElement(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPageId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/project.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentSelectedElement\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/project.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as X2JS from '../../lib/x2js/xml2json.js';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EventService } from './event.service';\nimport { Message } from '../common/message';\n\nimport { AccessCpnService } from './access-cpn.service';\nimport { ModelService } from './model.service';\nimport { CpnServerUrl } from 'src/cpn-server-url.js';\n\n/**\n * Common service for getting access to project data from all application\n */\n@Injectable()\nexport class ProjectService {\n\n  public modelName = '';\n  public project = undefined;\n  private currentSelectedElement;\n  currentPageId;\n\n  constructor(private eventService: EventService,\n    private http: HttpClient,\n    private modelService: ModelService,\n    private accessCpnService: AccessCpnService\n    ) {\n\n    // console.log('ProjectService instance CREATED!');\n\n    this.loadEmptyProject();\n  }\n\n  public getProject() {\n    return this.project;\n  }\n\n  setCurrentElement(element) {\n    console.log('Selected element - ' + element.name);\n    this.currentSelectedElement = element;\n  }\n\n  getCurrentElement() {\n    return this.currentSelectedElement;\n  }\n\n\n  /**\n   * Load project file to ProjectService instance for getting access from all application\n   *\n   * @param {File} file\n   */\n  loadProjectFile(file: File) {\n    const reader: FileReader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = e => {\n      const text: any = reader.result;\n      // console.log('File text : ' + text);\n\n      this.loadProjectXml(file.name, text);\n    };\n  }\n\n  parseXml(xml) {\n    let dom = null;\n    try {\n      dom = (new DOMParser()).parseFromString(xml, 'text/xml');\n    } catch (e) {\n      dom = null;\n    }\n\n    return dom;\n  }\n\n  /**\n   * Loading project data from XML string, parse XML and converting to project JSON object for all application\n   *\n   * @param {string} filename\n   * @param {string} projectXml\n   */\n  loadProjectXml(filename: string, projectXml: string) {\n    this.modelName = filename;\n\n    // const parser = new DOMParser();\n    // const xml = parser.parseFromString(projectXml, 'text/xml');\n\n    const xml = this.parseXml(projectXml);\n\n    if (!xml) {\n      return;\n    }\n\n    // localStorage.setItem('testProjectJson', '');\n    // const testProjectJson = xml2json(xml, '  ');\n    // localStorage.setItem('testProjectJson', testProjectJson);\n\n    const x2js = new X2JS();\n    const json = x2js.xml_str2json(projectXml);\n\n    console.log('ProjectService, first convert -----> ', json);\n    if (!json) {\n      return;\n    }\n\n    localStorage.setItem('projectJson-1', JSON.stringify(json));\n\n    this.project = { data: json, name: filename };\n\n    // reset simulator for new project file\n    this.accessCpnService.resetSim();\n\n    // reset model service\n    this.modelService.markNewModel();\n\n    // load new project\n    this.eventService.send(Message.PROJECT_LOAD, { project: this.project } );\n  }\n\n  loadEmptyProject() {\n    const headers = new HttpHeaders()\n      .set('Access-Control-Allow-Origin', '*')\n      .set('Accept', 'application/xml');\n\n    // const modelFile = 'baseModel_ID1008016.cpn';\n    // const modelFile = 'discretemodel_task1.cpn';\n\n    // const modelFile = 'erdp.cpn';\n    // const modelFile = 'hoponhopoff-color.cpn';\n    // const modelFile = 'mscProtocol.cpn'\n\n    // const modelFile = 'emptynet.cpn';\n\n    // const modelFile = 'test-1.cpn';\n    // const modelFile = 'test-2.cpn';\n\n    // const modelFile = 'mynet.cpn';\n    // const modelFile = 'mynet2.cpn';\n    // const modelFile = 'mynet-sub-1.cpn';\n    const modelFile = 'mynet-colset.cpn';\n\n    // const modelFile = 'mynet-for-sim.cpn';\n\n    // const modelFile = 'fuelstation.cpn';\n\n    // const modelFile = 'monitors.cpn';\n\n    const url = './assets/cpn/' + modelFile;\n    this.http.get(url, { headers: headers, responseType: 'text' })\n      .subscribe(\n        (response: any) => {\n          // console.log('GET ' + url + ', response = ' + JSON.stringify(response));\n          this.loadProjectXml(modelFile, response);\n        },\n        (error) => {\n          console.error('GET ' + url + ', error = ' + JSON.stringify(error));\n        }\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeBlockNodeComponent.html":{"url":"components/ProjectTreeBlockNodeComponent.html","title":"component - ProjectTreeBlockNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeBlockNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-block-node\n            \n\n            \n                styleUrls\n                ./project-tree-block-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-block-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                block\n                            \n                            \n                                expanded\n                            \n                            \n                                mouseover\n                            \n                            \n                                parentBlock\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        block\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseover\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentBlock\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeToArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodeToArray\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { nodeToArray } from '../../common/utils';\n\n@Component({\n  selector: 'app-project-tree-block-node',\n  templateUrl: './project-tree-block-node.component.html',\n  styleUrls: ['./project-tree-block-node.component.scss']\n})\nexport class ProjectTreeBlockNodeComponent implements OnInit {\n\n  public nodeToArray = nodeToArray;\n\n  @Input() public parentBlock: any;\n  @Input() public block: any;\n  @Input() public expanded: any;\n  @Input() public selected: any;\n  @Input() public mouseover: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSelected() {\n    this.selected.parentCpnElement = this.parentBlock;\n    if (this.block) {\n      this.selected.id = this.block._id;\n      this.selected.type = 'block';\n      this.selected.cpnElement = this.block;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./project-tree-block-node.component.scss\n                \n                @import \"../project-tree.component.scss\";\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeBlockNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeComponent.html":{"url":"components/ProjectTreeComponent.html","title":"component - ProjectTreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree\n            \n\n            \n                styleUrls\n                ./project-tree.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                cpnet\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                    Public\n                                expanded\n                            \n                            \n                                    Public\n                                JSON\n                            \n                            \n                                    Public\n                                modelService\n                            \n                            \n                                    Public\n                                mouseover\n                            \n                            \n                                    Public\n                                nodeToArray\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                selectedOld\n                            \n                            \n                                    Public\n                                subpages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contextMenu\n                            \n                            \n                                goToDeclaration\n                            \n                            \n                                hideContextMenu\n                            \n                            \n                                loadPages\n                            \n                            \n                                loadProject\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                onSelectedChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contextMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncontextMenu(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToDeclaration\n                        \n                        \n                    \n                \n            \n            \n                \ngoToDeclaration(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideContextMenu\n                        \n                        \n                    \n                \n            \n            \n                \nhideContextMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPages\n                        \n                        \n                    \n                \n            \n            \n                \nloadPages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \nloadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectedChange\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectedChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alert\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : alert\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cpnet\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            JSON\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mouseover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { id: undefined }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeToArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodeToArray\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedOld\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subpages\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Message } from './../common/message';\nimport { ModelService } from './../services/model.service';\nimport { EventService } from './../services/event.service';\nimport { Component, OnInit, OnChanges, SimpleChanges, DoCheck } from '@angular/core';\nimport { nodeToArray, cloneObject, getNextId, arrayToNode } from '../common/utils';\n\n@Component({\n  selector: 'app-project-tree',\n  templateUrl: './project-tree.component.html',\n  styleUrls: ['./project-tree.component.scss']\n})\nexport class ProjectTreeComponent implements OnInit, DoCheck {\n\n  public nodeToArray = nodeToArray;\n  public JSON = JSON;\n  public alert = alert;\n\n  public project;\n  public cpnet;\n  public expanded;\n  public subpages;\n  public pages;\n\n  public selected;\n  public selectedOld;\n\n  public mouseover = { id: undefined };\n\n  constructor(public eventService: EventService,\n    public modelService: ModelService) {\n  }\n\n  ngOnInit() {\n    this.reset();\n\n    this.eventService.on(Message.PROJECT_LOAD, () => this.loadProject());\n    this.eventService.on(Message.MODEL_RELOAD, () => this.loadProject());\n  }\n\n  ngDoCheck() {\n    if (this.selectedOld.id !== this.selected.id) {\n      this.selectedOld = cloneObject(this.selected);\n      this.onSelectedChange();\n    }\n  }\n\n  reset() {\n    this.expanded = [];\n    this.subpages = [];\n    this.pages = [];\n\n    this.selected = { type: undefined, id: undefined, cpnElement: undefined };\n    this.selectedOld = { id: undefined };\n\n    this.expanded['pages'] = true;\n    this.expanded['project'] = true;\n  }\n\n  loadProject() {\n    this.reset();\n\n    this.cpnet = this.modelService.getCpn();\n    this.project = this.modelService.getProject();\n    this.loadPages();\n\n    setTimeout(() => this.goToDeclaration('id89457845'), 100);\n  }\n\n  loadPages() {\n    this.pages = nodeToArray(this.cpnet.page);\n  }\n\n  onSelectedChange() {\n    console.log(this.constructor.name, 'onSelectedChange(), this.selected = ', JSON.stringify(this.selected));\n\n    switch (this.selected.type) {\n      case 'page':\n        this.eventService.send(Message.PAGE_OPEN, { pageObject: this.selected.cpnElement, subPages: undefined });\n        break;\n      case 'monitor':\n        this.eventService.send(Message.MONITOR_OPEN, { monitorObject: this.selected.cpnElement });\n        break;\n    }\n  }\n\n  onChange(event) {\n    console.log(this.constructor.name, 'onChange(), event = ', event);\n  }\n\n  goToDeclaration(id) {\n    if (this.cpnet && this.cpnet.globbox) {\n      console.log(this.constructor.name, 'goToDeclaration()');\n      const blocksToExpand = [];\n      const blocks = nodeToArray(this.cpnet.globbox.block);\n      for (const block of blocks) {\n        let isBlockExpanded = false;\n        for (const globref of nodeToArray(block.globref)) {\n          if (globref._id === id) {\n            this.selected.id = globref._id;\n            this.selected.type = 'globref';\n            this.selected.cpnElement = globref;\n            isBlockExpanded = true;\n            console.log(this.constructor.name, 'goToDeclaration(), id = ', id);\n          }\n        }\n        if (isBlockExpanded) {\n          this.expanded['declarations'] = true;\n          this.expanded[block._id] = true;\n        }\n      }\n    }\n  }\n\n  contextMenu(event: MouseEvent) {\n    console.log(this.constructor.name, 'contextMenu(), event = ', event);\n\n    const menuElement: HTMLElement = document.getElementById('contextMenu');\n\n    console.log(this.constructor.name, 'contextMenu(), menuElement = ', menuElement);\n\n    menuElement.style.display = 'block';\n    menuElement.style.position = 'absolute';\n    menuElement.style.left = event.x + 'px';\n    menuElement.style.top = (event.y - 60) + 'px';\n  }\n\n  hideContextMenu() {\n    const menuElement: HTMLElement = document.getElementById('contextMenu');\n    menuElement.style.display = 'none';\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // console.log(this.constructor.name, 'onKeyDown(), event = ', event);\n    // console.log(this.constructor.name, 'onKeyDown(), Key.INSERT = ', Key.INSERT);\n    if (event.code === 'Insert') {\n      event.preventDefault();\n\n      console.log(this.constructor.name, 'onKeyDown(), INSERT PRESSED');\n      console.log(this.constructor.name, 'onKeyDown(), this.selected = ', this.selected);\n\n      if (this.selected && this.selected.parentCpnElement) {\n        let newValue;\n        switch (this.selected.type) {\n          case 'globref':\n            newValue = 'globref GLOBREF = 1;';\n            break;\n          case 'color':\n            newValue = 'colset TYPE = int;';\n            break;\n          case 'var':\n            newValue = 'var v:int;';\n            break;\n          case 'ml':\n            newValue = 'fun Function';\n            break;\n        }\n        \n        if (newValue) {\n          const blockCpnElement = this.selected.parentCpnElement;\n          const oldCpnType = this.selected.type;\n          // node.parent.data.cpnElement = this.modelService.removeCpnElement(cpnParentElement, cpnElement, oldCpnType);\n\n          const newCpnElement = { _id: getNextId() };\n          const result = this.modelService.stringToCpnDeclarationElement(newCpnElement, newValue);\n\n          const newCpnType = result.cpnType;\n\n          console.log(this.constructor.name, 'onKeyDown(), result = ', result);\n\n          const declList = nodeToArray(this.selected.parentCpnElement[newCpnType]);\n          declList.push(result.cpnElement);\n          this.selected.parentCpnElement[newCpnType] = arrayToNode(declList);\n\n          setTimeout(() => this.goToDeclaration(newCpnElement._id), 1000);\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n\n  \n\n    \n\n      \n      \n\n        \n        \n\n        \n        \n\n          \n\n        \n\n\n        \n        \n\n          \n            \n              \n              \n            \n          \n\n        \n\n\n        \n        \n        \n\n        \n        \n\n          \n            \n              \n              \n            \n          \n\n        \n\n      \n\n    \n\n\n    \n    \n      New declaration\n      New block\n      \n      New page\n    \n\n    \n      \n        Say hi!\n      \n      \n      \n        Bye, {{item?.name}}\n      \n      \n        Input something: \n      \n     -->\n\n  \n\n    \n\n    \n                \n                    ./project-tree.component.scss\n                \n                @import \"./tree-node/tree-node.scss\";\n\n.tree {\n    padding: 5pt;\n    margin: 0;\n    width: 100%;\n    height: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                        New declaration      New block            New page                      Say hi!                          Bye, {{item?.name}}                    Input something:            -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeDeclarationNodeComponent.html":{"url":"components/ProjectTreeDeclarationNodeComponent.html","title":"component - ProjectTreeDeclarationNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeDeclarationNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-declaration-node\n            \n\n            \n                styleUrls\n                ./project-tree-declaration-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-declaration-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                focused\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onParse\n                            \n                            \n                                onSelected\n                            \n                            \n                                onUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                declaration\n                            \n                            \n                                mouseover\n                            \n                            \n                                parentBlock\n                            \n                            \n                                selected\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        declaration\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseover\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : { id: undefined }\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentBlock\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onParse\n                        \n                        \n                    \n                \n            \n            \n                \nonParse(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModelService } from '../../services/model.service';\n\n@Component({\n  selector: 'app-project-tree-declaration-node',\n  templateUrl: './project-tree-declaration-node.component.html',\n  styleUrls: ['./project-tree-declaration-node.component.scss']\n})\nexport class ProjectTreeDeclarationNodeComponent implements OnInit {\n\n  @Input() public parentBlock: any;\n  @Input() public declaration: any;\n  @Input() public type: string;\n\n  @Input() public selected: any;\n  @Input() public mouseover: any = { id: undefined };\n\n  public focused = false;\n\n  constructor(private modelService: ModelService) { }\n\n  ngOnInit() {\n  }\n\n  getText() {\n    let value = '';\n\n    switch (this.type) {\n      case 'globref':\n        value = this.modelService.cpnGlobrefToString(this.declaration);\n        break;\n      case 'color':\n        value = this.modelService.cpnColorToString(this.declaration);\n        break;\n      case 'var':\n        value = this.modelService.cpnVarToString(this.declaration);\n        break;\n      case 'ml':\n        value = this.modelService.cpnMlToString(this.declaration);\n        break;\n      default:\n        return this.declaration.layout || JSON.stringify(this.declaration);\n    }\n\n    let declarationType = this.modelService.parseDeclarationTypeFromString(value);\n\n    if (this.focused || declarationType === 'ml') {\n      return value;\n    }\n\n    let regex = new RegExp(/[^\\s]+\\s+[^\\s^\\(^\\:]+/);\n    let transformed = regex.exec(value);\n    return transformed && transformed.length > 0 ? transformed[0] : value;\n  }\n\n  onUpdate(value) {\n\n    console.log('onUpdate(), value = ', value);\n\n\n    // remove line break\n    value = value.replace(/\\n/g, '');\n\n    // remove multiple spaces\n    value = value.replace(/\\s{2,}/g, ' ');\n\n    // remove comments\n    value = value.replace(/(\\(\\*\\s*)[^\\*]+(\\s*\\*\\))/g, '');\n\n    console.log('onUpdate(), value (no comments) = ', value);\n\n    let parser = value.match(/^\\w+/g);\n    console.log('onUpdate(), parser = ', parser);\n\n    let declarationType = parser && parser[0] ? parser[0] : undefined;\n\n    switch (declarationType) {\n      case 'colset':\n        try {\n          parser = value.match(/[^=]+/g);\n          console.log('onUpdate(), colset, parser = ', parser);\n          if (parser.length === 2) {\n\n            const leftPart = parser[0].trim();\n            const rightPart = parser[1].trim();\n            console.log('onUpdate(), leftPart = ', leftPart);\n            console.log('onUpdate(), rightPart = ', rightPart);\n\n            // try to parse list, product, record, etc...\n            parser = rightPart.match(/(\\w+){1}\\s+((((\\w+\\s*\\:\\s*\\w+)|(\\w+))((\\s*[\\*\\+]\\s*)((\\w+\\s*\\:\\s*\\w+)|(\\w+)))+)|(\\w+))/g);\n            if (parser) {\n              console.log('onUpdate(), try to parse list, product, record, etc..., parser = ', parser);\n\n              const colsetType = parser[0].match(/^\\w+/g);\n              console.log('onUpdate(), colsetType = ', colsetType);\n            }\n          }\n        } catch (error) {\n          console.error('onUpdate(), error = ', error);\n        }\n        break;\n    }\n\n\n\n    // let cpnElement = this.declaration;\n\n    // const result = this.modelService.stringToCpnDeclarationElement(cpnElement, value);\n\n    // if (result) {\n    //   this.type = result.cpnType;\n\n    //   console.log(this.constructor.name, 'onUpdate(), cpnElement, value, result = ', cpnElement, value, result);\n    //   console.log(this.constructor.name, 'onUpdate(), cpnElement (1) = ', JSON.stringify(cpnElement));\n    //   for (const key in cpnElement) {\n    //     delete cpnElement[key];\n    //   }\n    //   for (const key in result.cpnElement) {\n    //     cpnElement[key] = result.cpnElement[key];\n    //   }\n    //   console.log(this.constructor.name, 'onUpdate(), cpnElement (2) = ', JSON.stringify(cpnElement));\n    // }\n  }\n\n  onSelected() {\n    this.selected.parentCpnElement = this.parentBlock;\n    this.selected.id = this.declaration._id;\n    this.selected.type = this.type;\n    this.selected.cpnElement = this.declaration;\n  }\n\n\n  onParse(value) {\n\n    const parserRegexList = {\n      parseType: /colset\\s+(?\\w+)\\s*=\\s*(?\\w+)/g\n      // unitType:   /colset\\s+(?\\w+)\\s*=\\s*(?unit)\\s*(?with)*\\s*(?\\w+)*\\s*(?timed)*/g,\n      // stringType: /colset\\s+(?\\w+)\\s*=\\s*(?string)\\s*(?with)*\\s*(?\\S+\\.\\.\\S+)*\\s*(?and)*\\s*(?timed)*/g\n    }\n\n    // if (this.declaration.layout) {\n    //   value = this.declaration.layout;\n    // }\n\n    value = this.getText();\n\n    console.log('onParse(), value = ', value);\n\n    // remove line break\n    value = value.replace(/\\n/g, '');\n    // remove multiple spaces\n    value = value.replace(/\\s{2,}/g, ' ');\n    // remove comments\n    value = value.replace(/(\\(\\*\\s*)[^\\*]+(\\s*\\*\\))/g, '');\n\n    console.log('onParse(), value (no comments) = ', value);\n\n    for (const parserKey in parserRegexList) {\n      const regex = parserRegexList[parserKey];\n\n      const str = value;\n      let m;\n  \n      console.log('onParse(), --------------------------------------------------------------------');\n      console.log('onParse(), str, regex = ', str, regex);\n      while ((m = regex.exec(str)) !== null) {\n        console.log('onParse(), m.groups = ', m.groups);\n        if (m.groups) {\n          for (const key in m.groups) {\n            if (m.groups[key]) {\n              console.log(`onParse(), ${key} = ${m.groups[key]}`);\n            }\n          }\n        }\n  \n        // // This is necessary to avoid infinite loops with zero-width matches\n        // if (m.index === regex.lastIndex) {\n        //   regex.lastIndex++;\n        // }\n      }\n      console.log('onParse(), --------------------------------------------------------------------');\n  \n    }\n\n    // let result = new RegExp(/(?record)\\s+(?[^;]+)/g).exec(value);\n\n    // if (result && result.groups) {\n    //   if (result.groups.record && result.groups.recordfield) {\n    //     console.log('onParse(), result.groups.record = ', result.groups.record);\n    //     console.log('onParse(), result.groups.recordfield = ', result.groups.recordfield);\n\n    //     let s = result.groups.recordfield;\n    //     let recordfieldList = s.match(/\\w+\\s*\\:\\s*\\w+/g);\n    //     console.log('onParse(), recordfieldList = ', recordfieldList);\n    //   }\n    // }\n\n\n    // let parser = value.match(/^\\w+/g);\n    // console.log('onParse(), parser = ', parser);\n\n    // let declarationType = parser && parser[0] ? parser[0] : undefined;\n\n    // switch (declarationType) {\n    //   case 'colset':\n    //     try {\n    //       parser = value.match(/[^=]+/g);\n    //       console.log('onParse(), colset, parser = ', parser);\n    //       if (parser.length === 2) {\n\n    //         const leftPart = parser[0].trim();\n    //         const rightPart = parser[1].trim();\n    //         console.log('onParse(), leftPart = ', leftPart);\n    //         console.log('onParse(), rightPart = ', rightPart);\n\n    //         // try to parse list, product, record, etc...\n    //         parser = rightPart.match(/(\\w+){1}\\s+((((\\w+\\s*\\:\\s*\\w+)|(\\w+))((\\s*[\\*\\+]\\s*)((\\w+\\s*\\:\\s*\\w+)|(\\w+)))+)|(\\w+))/g);\n    //         if (parser) {\n    //           console.log('onParse(), try to parse list, product, record, etc..., parser = ', parser);\n\n    //           const colsetType = parser[0].match(/^\\w+/g);\n    //           console.log('onParse(), colsetType = ', colsetType);\n    //         }\n    //       }\n    //     } catch (error) {\n    //       console.error('onParse(), error = ', error);\n    //     }\n    //     break;\n    // }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n    \n\n    \n                \n                    ./project-tree-declaration-node.component.scss\n                \n                @import \"../project-tree.component.scss\";\n\n.editablenode {\n  white-space: pre;\n  overflow-x: visible;\n  font-family: 'Courier New', Courier, monospace;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeDeclarationNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeMonitorNodeComponent.html":{"url":"components/ProjectTreeMonitorNodeComponent.html","title":"component - ProjectTreeMonitorNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeMonitorNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-monitor-node\n            \n\n            \n                styleUrls\n                ./project-tree-monitor-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-monitor-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                differ\n                            \n                            \n                                    Public\n                                modelService\n                            \n                            \n                                    Public\n                                nodeList\n                            \n                            \n                                    Public\n                                nodeToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectedNode\n                            \n                            \n                                onSelectedOption\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expanded\n                            \n                            \n                                monitor\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelService: ModelService, differs: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                        KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        monitor\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectedNode\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectedNode(node)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectedOption\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectedOption(option)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            differ\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeToArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodeToArray\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, OnChanges, SimpleChanges, DoCheck, KeyValueDiffers } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { nodeToArray } from '../../common/utils';\nimport { ModelService } from '../../services/model.service';\n\n@Component({\n  selector: 'app-project-tree-monitor-node',\n  templateUrl: './project-tree-monitor-node.component.html',\n  styleUrls: ['./project-tree-monitor-node.component.scss']\n})\nexport class ProjectTreeMonitorNodeComponent implements OnInit, DoCheck {\n\n  public nodeToArray = nodeToArray;\n\n  @Input() public monitor: any;\n  @Input() public expanded: any;\n  @Input() public selected: any;\n\n  public nodeList = [];\n\n  differ: any;\n\n  constructor(public modelService: ModelService, private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  ngOnInit() {\n    this.nodeList = this.modelService.getMonitorNodeNamesList(this.monitor);\n  }\n\n  ngDoCheck() {\n    // console.log(this.constructor.name, 'ngDoCheck()');\n    const change = this.differ.diff(this.monitor);\n    if (change) {\n      console.log('ngDoCheck(), change = ', change);\n      this.nodeList = this.modelService.getMonitorNodeNamesList(this.monitor);\n    }\n  }\n\n  onSelectedOption(option) {\n    this.selected.id = 'monitorOption_' + option._name;\n    this.selected.type = 'monitorOption';\n    this.selected.cpnElement = option;\n  }\n\n  onSelectedNode(node) {\n    this.selected.id = 'monitorNode_' + node.element._id;\n    this.selected.type = 'monitorNode';\n    this.selected.cpnElement = node;\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        {{option._name}}:\n        \n          {{option._value}}\n        \n      \n    \n  \n\n  \n  \n    \n      \n         {{ node.page.pageattr._name }} :\n         {{ node.element.text }} ({{ node.elementType }}) \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-tree-monitor-node.component.scss\n                \n                @import \"../project-tree.component.scss\";\n\n.option {\n  color: gray;\n}\n\n.true {\n  color: green;\n}\n\n.false {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{option._name}}:                  {{option._value}}                                           {{ node.page.pageattr._name }} :         {{ node.element.text }} ({{ node.elementType }})             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeMonitorNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeMonitorblockNodeComponent.html":{"url":"components/ProjectTreeMonitorblockNodeComponent.html","title":"component - ProjectTreeMonitorblockNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeMonitorblockNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-monitorblock-node\n            \n\n            \n                styleUrls\n                ./project-tree-monitorblock-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-monitorblock-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expanded\n                            \n                            \n                                monitorblock\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        monitorblock\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeToArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodeToArray\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { nodeToArray } from '../../common/utils';\n\n@Component({\n  selector: 'app-project-tree-monitorblock-node',\n  templateUrl: './project-tree-monitorblock-node.component.html',\n  styleUrls: ['./project-tree-monitorblock-node.component.scss']\n})\nexport class ProjectTreeMonitorblockNodeComponent implements OnInit {\n\n  public nodeToArray = nodeToArray;\n\n  @Input() public monitorblock: any;\n  @Input() public expanded: any;\n  @Input() public selected: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n     \n  \n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./project-tree-monitorblock-node.component.scss\n                \n                @import \"../project-tree.component.scss\";\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeMonitorblockNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeOptionNodeComponent.html":{"url":"components/ProjectTreeOptionNodeComponent.html","title":"component - ProjectTreeOptionNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeOptionNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-option-node\n            \n\n            \n                styleUrls\n                ./project-tree-option-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-option-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expanded\n                            \n                            \n                                option\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        option\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-project-tree-option-node',\n  templateUrl: './project-tree-option-node.component.html',\n  styleUrls: ['./project-tree-option-node.component.scss']\n})\nexport class ProjectTreeOptionNodeComponent implements OnInit {\n\n  @Input() public option: any = {};\n  @Input() public expanded: any = [];\n  @Input() public selected: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSelected() {\n    this.selected.id = this.option._name;\n    this.selected.type = 'option';\n    this.selected.cpnElement = this.option;\n  }\n\n}\n\n    \n\n    \n        \n  \n  {{ option._name | optionName }}\n\n\n\n  {{ option._name | optionName }}\n  &nbsp;\n  \n\n    \n\n    \n                \n                    ./project-tree-option-node.component.scss\n                \n                @import \"../project-tree.component.scss\";\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ option._name | optionName }}  {{ option._name | optionName }}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeOptionNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeOptionsNodeComponent.html":{"url":"components/ProjectTreeOptionsNodeComponent.html","title":"component - ProjectTreeOptionsNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeOptionsNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-options-node\n            \n\n            \n                styleUrls\n                ./project-tree-options-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-options-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                console\n                            \n                            \n                                    Public\n                                nodeToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expanded\n                            \n                            \n                                optionList\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionList\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            console\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : console\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeToArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodeToArray\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { nodeToArray } from '../../common/utils';\n\n@Component({\n  selector: 'app-project-tree-options-node',\n  templateUrl: './project-tree-options-node.component.html',\n  styleUrls: ['./project-tree-options-node.component.scss']\n})\nexport class ProjectTreeOptionsNodeComponent implements OnInit {\n\n  public nodeToArray = nodeToArray;\n  public console = console;\n\n  @Input() public optionList: any;\n  @Input() public expanded: any;\n  @Input() public selected: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n\n\n\n\n  \n  \n\n    \n    \n\n      \n        \n          \n          \n        \n      \n\n    \n\n    \n    \n\n      \n        \n          \n          \n        \n      \n\n    \n\n  \n\n  \n  \n\n    \n      \n        \n        \n      \n    \n\n  \n\n\n\n\n\n\n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-tree-options-node.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeOptionsNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreePageNodeComponent.html":{"url":"components/ProjectTreePageNodeComponent.html","title":"component - ProjectTreePageNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreePageNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-page-node\n            \n\n            \n                styleUrls\n                ./project-tree-page-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-page-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modelService\n                            \n                            \n                                    Public\n                                nodeToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasSubpages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expanded\n                            \n                            \n                                isSubpage\n                            \n                            \n                                page\n                            \n                            \n                                selected\n                            \n                            \n                                subpages\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSubpage\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        page\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subpages\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasSubpages\n                        \n                        \n                    \n                \n            \n            \n                \nhasSubpages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeToArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodeToArray\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { nodeToArray } from '../../common/utils';\nimport { ModelService } from '../../services/model.service';\n\n@Component({\n  selector: 'app-project-tree-page-node',\n  templateUrl: './project-tree-page-node.component.html',\n  styleUrls: ['./project-tree-page-node.component.scss']\n})\nexport class ProjectTreePageNodeComponent implements OnInit {\n\n  public nodeToArray = nodeToArray;\n\n  @Input() page: any = {};\n  @Input() isSubpage = false;\n  @Input() subpages: any = [];\n  @Input() expanded: any = [];\n  @Input() selected: any = {};\n\n  constructor(public modelService: ModelService) { }\n\n  ngOnInit() {\n    console.log(this.constructor.name, 'ngOnInit(), this.page.pageattr._name = ', this.page.pageattr._name);\n    console.log(this.constructor.name, 'ngOnInit(), this.isSubpage = ', this.isSubpage);\n    console.log(this.constructor.name, 'ngOnInit(), this.subpages = ', this.subpages);\n\n    if (this.isSubpage) {\n      this.subpages.push(this.page._id);\n    }\n  }\n\n  hasSubpages() {\n    if (this.page) {\n      for (const trans of nodeToArray(this.page.trans)) {\n        if (trans.subst && trans.subst._subpage) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n        \n\n          \n          \n\n        \n      \n    \n\n  \n\n\n\n  \n\n    \n\n    \n                \n                    ./project-tree-page-node.component.scss\n                \n                @import \"../project-tree.component.scss\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreePageNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTreeToolbarComponent.html":{"url":"components/ProjectTreeToolbarComponent.html","title":"component - ProjectTreeToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTreeToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tree-toolbar\n            \n\n            \n                styleUrls\n                ./project-tree-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tree-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteNode\n                            \n                            \n                                onDownNode\n                            \n                            \n                                onNewNode\n                            \n                            \n                                onUpNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchangeFilter(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteNode\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDownNode\n                        \n                        \n                    \n                \n            \n            \n                \nonDownNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewNode\n                        \n                        \n                    \n                \n            \n            \n                \nonNewNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpNode\n                        \n                        \n                    \n                \n            \n            \n                \nonUpNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Constants } from '../../common/constants';\n\n@Component({\n  selector: 'app-project-tree-toolbar',\n  templateUrl: './project-tree-toolbar.component.html',\n  styleUrls: ['./project-tree-toolbar.component.scss']\n})\nexport class ProjectTreeToolbarComponent implements OnInit {\n\n  filterText = '';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onNewNode() {\n  }\n\n  onDeleteNode() {\n  }\n\n  onUpNode() {\n  }\n\n  onDownNode() {\n  }\n\n  changeFilter(value) {\n    this.filterText = value;\n    console.log(this.constructor.name, 'changeFilter(), this.filterText = ', this.filterText);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n    \n\n      \n      \n        \n          \n          New\n        \n      \n\n      \n      \n        \n          \n          Delete\n        \n      \n\n      \n\n      \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n\n      \n    \n  \n\n  \n  \n    \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-tree-toolbar.component.scss\n                \n                .navbar-sm {\n  input {\n    width: 80px;\n    border: none;\n    padding: 2px 4px;\n  }\n\n  .btn-close i {\n    color: gray;\n    margin: 0 !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  New                                                      Delete                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTreeToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RegexPipe.html":{"url":"pipes/RegexPipe.html","title":"pipe - RegexPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RegexPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/regex.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        regex\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/regex.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'regex' })\nexport class RegexPipe implements PipeTransform {\n\n  transform(value: string): string {\n\n    let reg = new RegExp(/[^\\s]+\\s+[^\\s^\\(]+/);\n\n    let transformed = reg.exec(value);\n\n    // console.log('RegexPipe, value, transformed = ', value, transformed);\n\n    return transformed.length > 0 ? transformed[0] : value;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ReplaceSpacesPipe.html":{"url":"pipes/ReplaceSpacesPipe.html","title":"pipe - ReplaceSpacesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ReplaceSpacesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/replace-spaces.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        replaceSpaces\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/replace-spaces.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'replaceSpaces' })\nexport class ReplaceSpacesPipe implements PipeTransform {\n  transform(value: string): string {\n    let transformed;\n    if (value) {\n      transformed = value.toString().replace(' ', '-');\n      transformed = transformed.toLowerCase();\n    }\n    // console.log('ReplaceSpacesPipe.transform(), value = ' + value);\n    // console.log('ReplaceSpacesPipe.transform(), transformed = ' + transformed);\n    return transformed;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/safe-html.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(html)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/safe-html.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    html\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Pipe({name: 'safeHtml'})\nexport class SafeHtmlPipe {\n  constructor(private sanitizer:DomSanitizer){}\n\n  transform(html) {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n    // return this.sanitizer.bypassSecurityTrustStyle(style);\n    // return this.sanitizer.bypassSecurityTrustXxx(style); - see docs\n  }\n}\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveprojectButtonComponent.html":{"url":"components/SaveprojectButtonComponent.html","title":"component - SaveprojectButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SaveprojectButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/saveproject-button/saveproject-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-saveproject-button\n            \n\n            \n                styleUrls\n                ./saveproject-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./saveproject-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileNameModel\n                            \n                            \n                                xmlPrefix\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                saveAsText\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fileName\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: NgbModal, modelService: ModelService, accessCpnService: AccessCpnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/saveproject-button/saveproject-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessCpnService\n                                                  \n                                                        \n                                                                        AccessCpnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/actions/saveproject-button/saveproject-button.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(modalName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/actions/saveproject-button/saveproject-button.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAsText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAsText(charArray: string, fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/actions/saveproject-button/saveproject-button.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    charArray\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileNameModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/saveproject-button/saveproject-button.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xmlPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\n\\n'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/saveproject-button/saveproject-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fileName\n                    \n                \n\n                \n                    \n                        getfileName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/actions/saveproject-button/saveproject-button.component.ts:60\n                                \n                            \n                    \n                        \n                                Полное имя файла с расширением\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport * as FileSaver from 'file-saver';\nimport { ModelService } from '../../services/model.service';\nimport * as X2JS from '../../../lib/x2js/xml2json';\nimport { AccessCpnService } from 'src/app/services/access-cpn.service';\nimport { xmlBeautify } from '../../../lib/xml-beautifier/xml-beautifier.js';\nimport { cloneObject } from 'src/app/common/utils';\n\n@Component({\n  selector: 'app-saveproject-button',\n  templateUrl: './saveproject-button.component.html',\n  styleUrls: ['./saveproject-button.component.scss']\n})\nexport class SaveprojectButtonComponent implements OnInit {\n\n  fileNameModel: string;\n\n  xmlPrefix = '\\n\\n';\n\n  constructor(private modal: NgbModal,\n    private modelService: ModelService,\n    private accessCpnService: AccessCpnService) {\n  }\n\n  ngOnInit() {\n  }\n\n  open(modalName) {\n    console.log('app-saveproject-button', modalName)\n    let idx = this.modelService.projectName.lastIndexOf('.');\n    if (idx > 0) {\n      this.fileNameModel = this.modelService.projectName.substr(0, idx);\n    } else {\n      this.fileNameModel = this.modelService.projectName;\n    }\n\n    this.modal.open(modalName, { ariaLabelledBy: 'modal-basic-title', centered: true }).result.then((result) => {\n      const x2js = new X2JS();\n      let xml = (x2js.json2xml_str(cloneObject(this.modelService.getProjectData()))); /// netJson\n      xml = `${this.xmlPrefix}\\n${xml}`;\n\n      xml = xmlBeautify(xml);\n\n      this.saveAsText(xml, this.fileName);\n\n      // this.accessCpnService.getXmlFromServer().then((data: any) => {\n      //   console.log('AccessCpnService, saveAsText(), data.xml = ', data.xml);\n\n      //   this.saveAsText(data.xml, this.fileName);\n      // });\n\n    }, (reason) => {\n    });\n  }\n\n  /**\n   * Полное имя файла с расширением\n   */\n  private get fileName() {\n    return `${this.fileNameModel}.cpn`;\n  }\n\n  private saveAsText(charArray: string, fileName: string) {\n    const blob = new Blob([charArray], { type: 'application/xml; charset=iso-8859-1' });\n    FileSaver.saveAs(blob, fileName);\n  }\n\n}\n\n    \n\n    \n        \n  \n  Save project\n\n\n\n  \n    File name to save\n    \n      &times;\n    \n  \n  \n    \n      File name: {{fileName}}\n      \n      \n      \n        Only alphanumeric characters, - and _\n      \n    \n  \n  \n    Cancel\n    Save\n  \n\n\n    \n\n    \n                \n                    ./saveproject-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Save project      File name to save          ×                  File name: {{fileName}}                          Only alphanumeric characters, - and _                  Cancel    Save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveprojectButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appSettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAppSettings\n                            \n                            \n                                loadDefaultSettings\n                            \n                            \n                                    Public\n                                saveLocalSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAppSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAppSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadDefaultSettings\n                        \n                        \n                    \n                \n            \n            \n                \nloadDefaultSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveLocalSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveLocalSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appSettings\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { getDefaultSettings } from '../common/default-settings';\n\n@Injectable()\nexport class SettingsService {\n  public appSettings;\n\n  constructor(private http: HttpClient) {\n    const localSettings = localStorage.getItem('applicationSettings');\n\n    console.log(this.constructor.name, 'constructor(), localSettings = ', localSettings);\n\n    if (localSettings) {\n      this.appSettings = localSettings;\n    } else {\n      this.appSettings = getDefaultSettings();\n      // this.loadDefaultSettings();\n    }\n\n    console.log(this.constructor.name, 'constructor(), this.appSettings = ', this.appSettings);\n  }\n\n  public getAppSettings() {\n    return this.appSettings;\n  }\n\n  public saveLocalSettings() {\n    localStorage.setItem('applicationSettings', this.appSettings);\n  }\n\n  loadDefaultSettings() {\n    const headers = new HttpHeaders()\n      .set('Access-Control-Allow-Origin', '*')\n      .set('Accept', 'application/json');\n\n    const url = './assets/app/default_settings.json';\n    this.http.get(url, { headers: headers, responseType: 'text' })\n      .subscribe(\n        (response: any) => {\n          this.appSettings = JSON.parse(response);\n          console.log(this.constructor.name, 'loadDefaultSettings(), this.appSettings = ', this.appSettings);\n        },\n        (error) => {\n          console.error(this.constructor.name, 'loadDefaultSettings(), url, error = ', url, error);\n        }\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationPanelComponent.html":{"url":"components/SimulationPanelComponent.html","title":"component - SimulationPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/simulation-panel/simulation-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simulation-panel\n            \n\n            \n                styleUrls\n                ./simulation-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accessCpnService\n                            \n                            \n                                mode\n                            \n                            \n                                MULTI_STEP\n                            \n                            \n                                MULTI_STEP_FF\n                            \n                            \n                                multiStepCount\n                            \n                            \n                                REPLICATION\n                            \n                            \n                                simulationConfig\n                            \n                            \n                                SINGLE_STEP\n                            \n                            \n                                SINGLE_STEP_CHOOSE_BINDING\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onRewind\n                            \n                            \n                                onRunMultiStep\n                            \n                            \n                                onRunMultiStepFF\n                            \n                            \n                                runMultiStep\n                            \n                            \n                                runMultiStepFF\n                            \n                            \n                                    Public\n                                setMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, accessCpnService: AccessCpnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation-panel/simulation-panel.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessCpnService\n                                                  \n                                                        \n                                                                        AccessCpnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/simulation-panel/simulation-panel.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRewind\n                        \n                        \n                    \n                \n            \n            \n                \nonRewind()\n                \n            \n\n\n            \n                \n                    Defined in src/app/simulation-panel/simulation-panel.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRunMultiStep\n                        \n                        \n                    \n                \n            \n            \n                \nonRunMultiStep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/simulation-panel/simulation-panel.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRunMultiStepFF\n                        \n                        \n                    \n                \n            \n            \n                \nonRunMultiStepFF()\n                \n            \n\n\n            \n                \n                    Defined in src/app/simulation-panel/simulation-panel.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runMultiStep\n                        \n                        \n                    \n                \n            \n            \n                \nrunMultiStep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/simulation-panel/simulation-panel.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runMultiStepFF\n                        \n                        \n                    \n                \n            \n            \n                \nrunMultiStepFF()\n                \n            \n\n\n            \n                \n                    Defined in src/app/simulation-panel/simulation-panel.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMode(mode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/simulation-panel/simulation-panel.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accessCpnService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccessCpnService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.SINGLE_STEP\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MULTI_STEP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MULTI_STEP_FF\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiStepCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REPLICATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulationConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    multi_step: {\n      steps: 50,\n      delay: 1000\n    },\n\n    multi_step_ff: {\n      steps: 50,\n      max_step: 0,\n      time_step: 0,\n      max_time: 0,\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SINGLE_STEP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SINGLE_STEP_CHOOSE_BINDING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation-panel/simulation-panel.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Message } from '../common/message';\nimport { EventService } from '../services/event.service';\nimport { AccessCpnService } from '../services/access-cpn.service';\nimport { delay } from 'q';\n\n@Component({\n  selector: 'app-simulation-panel',\n  templateUrl: './simulation-panel.component.html',\n  styleUrls: ['./simulation-panel.component.scss']\n})\nexport class SimulationPanelComponent implements OnInit {\n\n  SINGLE_STEP = 1;\n  SINGLE_STEP_CHOOSE_BINDING = 2;\n  MULTI_STEP = 3;\n  MULTI_STEP_FF = 4;\n  REPLICATION = 5;\n\n  mode = this.SINGLE_STEP;\n\n  simulationConfig = {\n    multi_step: {\n      steps: 50,\n      delay: 1000\n    },\n\n    multi_step_ff: {\n      steps: 50,\n      max_step: 0,\n      time_step: 0,\n      max_time: 0,\n    }\n  };\n\n  multiStepCount = 0;\n\n  constructor(\n    private eventService: EventService,\n    public accessCpnService: AccessCpnService) { }\n\n  ngOnInit() {\n\n    this.eventService.on(Message.SIMULATION_STARTED, (data) => {\n    });\n\n    this.eventService.on(Message.SIMULATION_STOPED, (data) => {\n      document.body.style.cursor = 'default';\n    });\n\n    // this.eventService.on(Message.SHAPE_HOVER, (data) => {\n    //   const element = data.element;\n\n    //   let setCursor = false;\n\n    //   if (element && element.type && element.type === 'cpn:Transition') {\n\n    //     switch (this.mode) {\n    //       case this.SINGLE_STEP:\n    //       case this.SINGLE_STEP_CHOOSE_BINDING:\n    //         setCursor = true;\n    //         break;\n    //     }\n\n    //   }\n\n    //   document.body.style.cursor = setCursor ? 'crosshair' : 'defualt';\n    // });\n\n    this.eventService.on(Message.SHAPE_SELECT, (event) => {\n\n      if (!this.accessCpnService.isSimulation) {\n        return;\n      }\n\n      const element = event.element;\n      console.log(this.constructor.name, 'Message.SHAPE_SELECT, element = ', element);\n\n      if (element && element.type && element.type === 'cpn:Transition') {\n        switch (this.mode) {\n          case this.SINGLE_STEP:\n            this.accessCpnService.doStep(element.cpnElement._id);\n            break;\n          case this.SINGLE_STEP_CHOOSE_BINDING:\n            this.accessCpnService.getBindings(element.cpnElement._id);\n            break;\n        }\n      }\n\n    });\n\n\n    this.eventService.on(Message.SIMULATION_SELECT_BINDING, (event) => {\n      if (!this.accessCpnService.isSimulation) {\n        return;\n      }\n\n      console.log(this.constructor.name, 'Message.SIMULATION_SELECT_BINDING, event = ', event);\n\n      const element = event.element;\n\n      if (element &&\n        element.type &&\n        element.type === 'cpn:Transition' &&\n        event.binding) {\n\n        switch (this.mode) {\n          case this.SINGLE_STEP_CHOOSE_BINDING:\n            this.accessCpnService.doStepWithBinding(element.cpnElement._id, event.binding.bind_id);\n            break;\n        }\n      }\n    });\n\n    this.setMode(this.SINGLE_STEP);\n  }\n\n  public setMode(mode) {\n    this.mode = mode;\n\n    switch (this.mode) {\n      case this.SINGLE_STEP:\n        document.body.style.cursor = 'crosshair';\n        break;\n      case this.SINGLE_STEP_CHOOSE_BINDING:\n        document.body.style.cursor = 'crosshair';\n        break;\n      default:\n        document.body.style.cursor = 'default';\n    }\n  }\n\n  onRunMultiStep() {\n    console.log(this.constructor.name, 'runMultiStep(), simulationConfig = ', this.simulationConfig);\n\n    this.multiStepCount = this.simulationConfig.multi_step.steps;\n    this.runMultiStep();\n  }\n\n  onRunMultiStepFF() {\n    console.log(this.constructor.name, 'onRunMultiStepFF(), simulationConfig = ', this.simulationConfig);\n    this.runMultiStepFF();\n  }\n\n  runMultiStep() {\n    console.log(this.constructor.name, 'runMultiStep(), this.multiStepCount = ', this.multiStepCount);\n\n    if (this.multiStepCount > 0) {\n      const readyData: any = this.accessCpnService.getReadyData();\n      if (readyData && Object.keys(readyData).length > 0) {\n        // const transId = Object.keys(readyData)[0];\n        // this.accessCpnService.doStep(transId);\n        this.accessCpnService.doStep('multistep');\n        this.multiStepCount--;\n\n        setTimeout(() => { this.runMultiStep(); }, +this.simulationConfig.multi_step.delay);\n      }\n    }\n  }\n\n  runMultiStepFF() {\n    console.log(this.constructor.name, 'runMultiStepFF(), this.multiStepCount = ', this.multiStepCount);\n\n    const config = this.simulationConfig.multi_step_ff;\n    const options = {\n      addStep: config.steps,\n      untilStep: config.max_step,\n      untilTime: config.max_time,\n      addTime: config.time_step,\n      amount: config.steps\n    };\n    this.accessCpnService.doMultiStepFF(options);\n  }\n\n\n  onRewind() {\n    this.accessCpnService.initSim();\n  }\n}\n\n    \n\n    \n        \n  Simulation\n\n\n\n\n  \n    \n    Rewind\n  \n  \n\n  \n    \n    Single Step\n  \n  \n  \n    Click on a marked (enabled) transition\n  \n\n  \n    \n    Single Step Choose Binding\n  \n  \n  \n    Click on a marked (enabled) transition and select one binding\n  \n\n  \n    \n    Multi-Step (Animated)\n  \n  \n  \n    \n      \n        Steps\n        \n        \n      \n      \n        Delay\n        \n        ms\n      \n      \n        \n        \n          \n            \n            Run\n          \n        \n        \n      \n    \n  \n\n  \n    \n    Multi-Step (Fast Forward)\n  \n  \n  \n    \n      \n        Steps\n        \n      \n      \n        Max Step\n        \n      \n      \n        Time Step\n        \n      \n      \n        Max Time\n        \n      \n      \n        \n        \n          \n            \n            Run\n          \n        \n        \n      \n    \n  \n\n  \n    \n    Replication\n  \n  \n  \n    \n      \n        Repeat\n        \n      \n      \n        \n        \n          \n            \n            Run\n          \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./simulation-panel.component.scss\n                \n                .panel {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n.panel span {\n  padding-left: 10px;\n}\n\n.panel button.enabled {\n  background: lightgreen;\n}\n\n.panel table {\n  margin-top: 0px;\n}\n\n.panel td {\n  padding: 5px;\n  white-space: nowrap;\n}\n\n.panel input {\n  padding: 5px;\n  text-align: left;\n}\n\n.panel .btn-light {\n  width: 100%;\n  text-align: left;\n  margin-top: 10px;\n}\n\n.panel .note {\n  padding: 10px;\n  background: #eeffee;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.text-right {\n  text-align: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Simulation          Rewind              Single Step          Click on a marked (enabled) transition            Single Step Choose Binding          Click on a marked (enabled) transition and select one binding            Multi-Step (Animated)                        Steps                                    Delay                ms                                                              Run                                                Multi-Step (Fast Forward)                        Steps                            Max Step                            Time Step                            Max Time                                                                      Run                                                Replication                        Repeat                                                                      Run                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/tabs/tabs/tab.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                tab\n            \n\n            \n                styleUrls\n                ./tab.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTabTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                id\n                            \n                            \n                                isHidden\n                            \n                            \n                                tabTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tabs: TabsContainer)\n                    \n                \n                        \n                            \n                                Defined in src/lib/tabs/tabs/tab.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabs\n                                                  \n                                                        \n                                                                        TabsContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/tabs/tabs/tab.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/tabs/tabs/tab.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isHidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/tabs/tabs/tab.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/tabs/tabs/tab.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTabTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTabTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs/tab.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/tabs/tabs/tab.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {TabsContainer} from '../tabs-container/tabs.container';\n\n@Component({\n  selector: 'tab',\n  host: {\n    '[class.hidden]': '!active'\n  },\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent {\n  @Input() active: boolean = false;\n  @Input() tabTitle: string;\n  @Input() id: string;\n  @Input() isHidden: boolean = false;\n\n  public viewContainerRef;\n\n  constructor(tabs: TabsContainer) {\n    tabs.addTab(this);\n  }\n\n  // constructor(private viewContainer: ViewContainerRef) {\n  //   this.viewContainerRef = viewContainer;\n  // }\n\n  getTabTitle() {\n    return this.tabTitle;\n  }\n\n  // getRef() {\n  //   return this.ref;\n  // }\n}\n\n    \n\n    \n        \n  \n   -->\n  Page 1 -->\n\n\n    \n\n    \n                \n                    ./tab.component.scss\n                \n                * {\n  margin: 0px;\n  padding: 0px;\n}\n\n:host {\n  display: flex;\n  height: 100%;\n}\n\n:host(.hidden) {\n  display: none;\n}\n\n.tabs__panel {\n  background-color: #d7d7d7;\n  width: 100%;\n  box-shadow: inset 0px 0px 0px 1px #c9c9c9;\n  border-radius: 6px;\n  padding: 30px 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     -->  Page 1 -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabModule.html":{"url":"modules/TabModule.html","title":"module - TabModule","body":"\n                   \n\n\n\n\n    Modules\n    TabModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabModule\n\n\n\ncluster_TabModule_declarations\n\n\n\ncluster_TabModule_exports\n\n\n\n\nTabComponent\n\nTabComponent\n\n\n\nTabModule\n\nTabModule\n\nTabModule -->\n\nTabComponent->TabModule\n\n\n\n\n\nTabsContainer\n\nTabsContainer\n\nTabModule -->\n\nTabsContainer->TabModule\n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nTabModule->TabComponent \n\n\n\n\n\nTabsContainer \n\nTabsContainer \n\nTabsContainer  -->\n\nTabModule->TabsContainer \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/tabs/tabs-component.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabComponent\n                        \n                        \n                            TabsContainer\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TabComponent\n                        \n                        \n                            TabsContainer\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular imports\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {TabComponent} from './tabs/tab.component';\nimport {TabsContainer} from './tabs-container/tabs.container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [\n    TabComponent,\n    TabsContainer\n  ],\n  exports: [\n    TabComponent,\n    TabsContainer\n  ]\n})\nexport class TabModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsContainer.html":{"url":"components/TabsContainer.html","title":"component - TabsContainer","body":"\n                   \n\n\n\n\n\n  Components\n  TabsContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/tabs/tabs-container/tabs.container.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabs\n            \n\n            \n                styleUrls\n                ./tabs.container.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.container.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ifTabSelected\n                            \n                            \n                                selectedTab\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTab\n                            \n                            \n                                clear\n                            \n                            \n                                deleteTabById\n                            \n                            \n                                getSelectedTab\n                            \n                            \n                                getTabByID\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentTabChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        currentTabChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTab\n                        \n                        \n                    \n                \n            \n            \n                \naddTab(tab: TabComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                TabComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTabById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTabById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedTab\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedTab()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTabByID\n                        \n                        \n                    \n                \n            \n            \n                \ngetTabByID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"block\" | \"none\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTab\n                        \n                        \n                    \n                \n            \n            \n                \nselectTab(tab: TabComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                TabComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ifTabSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/tabs/tabs-container/tabs.container.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {TabComponent} from '../tabs/tab.component';\n\n@Component({\n  selector: 'tabs',\n  templateUrl: './tabs.container.html',\n  styleUrls: ['./tabs.container.scss']\n})\nexport class TabsContainer {\n  @Input() disabled: boolean;\n  @Output() currentTabChange = new EventEmitter();\n\n  ifTabSelected: boolean = false;\n  tabs: TabComponent[] = [];\n\n  selectedTab: TabComponent;\n\n  addTab(tab: TabComponent) {\n    this.tabs.push(tab);\n  }\n\n  selectTab(tab: TabComponent) {\n    // console.log('TabsContainer, this.tabs = ', this.tabs);\n    // console.log('TabsContainer, tab = ', tab);\n\n    this.selectedTab = undefined;\n\n    this.tabs.forEach(tab => {\n      tab.active = false;\n    });\n    tab.active = true;\n    this.selectedTab = tab;\n    this.currentTabChange.emit(tab);\n  }\n\n  isDisabled() {\n    if (this.disabled) {\n      return 'block';\n    } else return 'none';\n  }\n\n  ngAfterViewInit() {\n    this.tabs.forEach(tab => {\n      if (tab.active) {\n        this.selectTab(tab);\n        this.ifTabSelected = true;\n      }\n    });\n    if (!this.ifTabSelected && this.tabs.length > 0) {\n      this.selectTab(this.tabs[0]);\n    }\n  }\n\n  getTabByID(id: string) {\n    var result = undefined;\n    this.tabs.forEach(tab => {\n      // console.log('getTabByID(), tab.id, id = ', tab.id, id);\n      if (tab.id === id) {\n        result = tab;\n      }\n    });\n    return result;\n  }\n\n  deleteTabById(id: string) {\n    // @ts-ignore\n    this.tabs = this.tabs.filter(tab => tab.id !== id);\n  }\n\n  getSelectedTab() {\n    return this.selectedTab;\n  }\n\n  clear() {\n    this.tabs = [];\n  }\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      {{ tab.tabTitle }}\n    \n  \n\n\n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./tabs.container.scss\n                \n                * {\n  margin: 0px;\n  padding: 0px;\n}\n\n:host {\n  padding: 10px 10px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  // min-height: calc(100vh - 20px);\n  height: 100%;\n}\n\n.tabs__tab-bar {\n  align-self: center;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: -12px;\n  z-index: 1000;\n  border: 1px solid #c9c9c9;\n  white-space: nowrap;  \n}\n\n.tabs__tab {\n  padding: 4px 10px;\n  display: inline-block;\n  background-color: white;\n  cursor: pointer;\n}\n\n.tabs__tab.active {\n  background-color: #6fbbff;\n  color: white;\n}\n\n.overlay {\n  background: #e0e0e0;\n  opacity: 0.5;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 1000;\n}\n\n// ------------------------------------------------------------------------------\n\n::ng-deep {\n  .cpn-tabs {\n    padding: 0 !important;\n    background: #eee !important;\n\n    .tabs__panel {\n      background: white !important;\n      border-radius: 0 !important;\n      border: none !important;\n      box-shadow: none !important;\n\n      top: 0px !important;\n      padding: 0px !important;\n    }\n\n    .tabs__tab-bar {\n      background: #f3f3f3 !important;\n      align-self: flex-start !important;\n      border-radius: 0 !important;\n      border: none !important;\n      margin: 0 !important;\n    }\n\n    div.tabs__tab-bar {\n      border-bottom: 1px solid lightgrey !important;\n    }\n\n    .tabs__tab {\n      background-color: #ddd !important;\n      color: #999 !important;\n      border-right: 1px solid #eee;\n    }\n\n    .tabs__tab.active {\n      background-color: white !important;\n      color: black !important;\n      font-weight: bold !important;\n\n      margin-left: -1px;\n      border-left: 1px solid lightgrey;\n      border-right: 1px solid lightgrey;\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ tab.tabTitle }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsContainer'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextEditRowComponent.html":{"url":"components/TextEditRowComponent.html","title":"component - TextEditRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextEditRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/properties-panel/components/text-edit-row.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-edit-row\n            \n\n            \n                styleUrls\n                ./text-edit-row.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-edit-row.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorNames\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                color2name\n                            \n                            \n                                name2color\n                            \n                            \n                                onChange\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                parseInt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bordered\n                            \n                            \n                                colors\n                            \n                            \n                                field\n                            \n                            \n                                name\n                            \n                            \n                                object\n                            \n                            \n                                options\n                            \n                            \n                                pre\n                            \n                            \n                                readonly\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bordered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colors\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        object\n                    \n                \n                \n                    \n                        Type :         object\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pre\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            color2name\n                        \n                        \n                    \n                \n            \n            \n                \ncolor2name(color)\n                \n            \n\n\n            \n                \n                    Defined in src/app/properties-panel/components/text-edit-row.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            name2color\n                        \n                        \n                    \n                \n            \n            \n                \nname2color(name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/properties-panel/components/text-edit-row.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/properties-panel/components/text-edit-row.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/properties-panel/components/text-edit-row.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseInt\n                        \n                        \n                    \n                \n            \n            \n                \nparseInt(x, base)\n                \n            \n\n\n            \n                \n                    Defined in src/app/properties-panel/components/text-edit-row.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    base\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            colorNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'Fucia': '#ff00ff',\n    'Maroon': '#800000',\n    'Yellow': '#ffff00',\n    'White': '#ffffff',\n    'Red': '#ff0000',\n    'Silver': '#c0c0c0',\n    'Teal': '#008080',\n    'Navy': '#000080',\n    'Aqua': '#00ffff',\n    'Black': '#000000',\n    'Olive': '#808000',\n    'Lime': '#00ff00',\n    'Gray': '#808080',\n    'Purple': '#800080',\n    'Green': '#008000',\n    'Blue': '#0000ff'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/properties-panel/components/text-edit-row.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-text-edit-row',\n  templateUrl: './text-edit-row.html',\n  styleUrls: ['./text-edit-row.scss']\n})\nexport class TextEditRowComponent {\n  @Input() type = 'text';\n  @Input() name: string;\n  @Input() object: object;\n  @Input() field: string;\n  @Input() colors = [];\n  @Input() options = [];\n  @Input() readonly = false;\n  @Input() pre = true;\n  @Input() bordered = true;\n\n  @Output() changed = new EventEmitter();\n  // @Output() dblclick = new EventEmitter();\n\n  private colorNames = {\n    'Fucia': '#ff00ff',\n    'Maroon': '#800000',\n    'Yellow': '#ffff00',\n    'White': '#ffffff',\n    'Red': '#ff0000',\n    'Silver': '#c0c0c0',\n    'Teal': '#008080',\n    'Navy': '#000080',\n    'Aqua': '#00ffff',\n    'Black': '#000000',\n    'Olive': '#808000',\n    'Lime': '#00ff00',\n    'Gray': '#808080',\n    'Purple': '#800080',\n    'Green': '#008000',\n    'Blue': '#0000ff'\n  };\n\n  color2name(color) {\n    for (const name of Object.keys(this.colorNames)) {\n      if (this.colorNames[name] && this.colorNames[name].toLowerCase() === color.toLowerCase()) {\n        return name;\n      }\n    }\n    return color;\n  }\n\n  name2color(name) {\n    return this.colorNames[name] || name;\n  }\n\n  onKeyDown(e) {\n    if (!e) {\n      e = window.event;\n    }\n\n    console.log('keydown, e = ', e);\n\n    const keyCode = e.which || e.keyCode,\n      target = e.target || e.srcElement;\n\n    if (keyCode === 13 && !e.shiftKey) {\n      // console.log('keydown. Just enter without shift key');\n\n      if (e.preventDefault) {\n        e.preventDefault();\n      } else {\n        e.returnValue = false;\n      }\n\n      this.onChange(e);\n    }\n  }\n\n  onChange(event) {\n    if (this.type === 'text') {\n      this.object[this.field] = event.target.textContent;\n    }\n    if (this.type === 'ml') {\n      this.object[this.field] = event.target.textContent;\n    }\n    if (this.type === 'int') {\n      this.object[this.field] = parseInt(event.target.textContent, 0);\n    }\n    if (this.type === 'color') {\n      this.object[this.field] = this.color2name(event.target.value);\n    }\n    if (this.type === 'select') {\n      this.object[this.field] = event;\n    }\n    this.changed.emit(this.object[this.field]);\n  }\n\n  // onDblClick(event) {\n  //   this.dblclick.emit(this.object[this.field]);\n  // }\n\n  parseInt(x, base) {\n    const parsed = parseInt(x, base);\n    if (isNaN(parsed)) { return base; }\n    return parsed;\n  }\n\n\n  // getPortObject(cpnElement, text) {\n  //   const port = {\n  //     fillattr: { _colour: 'White', _pattern: 'Solid', _filled: 'false' },\n  //     lineattr: { _colour: 'Black', _thick: '0', _type: 'Solid' },\n  //     posattr: { _x: cpnElement.posattr._x, _y: cpnElement.posattr._y - cpnElement.ellipse._h },\n  //     _text: text,\n  //     textattr: { _colour: 'Black', _bold: 'false' },\n  //     _id: cpnElement._id + 'e',\n  //     _type: text === 'In/Out' ? 'I/O' : text\n  //   };\n  //   return port;\n  // }\n\n  // getSubPage(cpnElement, name, pageId) {\n  //   cpnElement['subst'] = {\n  //     subpageinfo: {\n  //       fillattr: { _colour: 'White', _pattern: 'Solid', _filled: 'false' },\n  //       lineattr: { _colour: 'Black', _thick: '0', _type: 'Solid' },\n  //       posattr: { _x: cpnElement.posattr._x, _y: cpnElement.posattr._y - cpnElement.box._h / 2 },\n  //       textattr: { _colour: 'Black', _bold: 'false' },\n  //       _id: cpnElement._id + 'e',\n  //       _name: name\n  //     },\n  //     _portsock: '',\n  //     _subpage: pageId\n  //   };\n\n  //   return cpnElement;\n  // }\n\n}\n\n    \n\n    \n        \n\n  {{name}}\n  \n  \n\n\n\n\n  {{name}}\n  \n  \n\n\n\n\n  {{name}}\n  \n    \n    \n      {{color}}\n    \n  \n\n\n\n\n  {{name}}\n  \n    \n      {{option}}\n    \n  \n\n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./text-edit-row.scss\n                \n                div.valueRow {\n  display: table;\n  width: 100%;\n  padding-right: 2px;\n}\n\ndiv.bordered {\n  border-bottom: 1px solid lightgrey;\n}\n\ndiv.valueRow:hover {\n  background: #efefef;\n}\n\ndiv.valueName {\n  display: table-cell;\n  vertical-align: middle;\n  width: 49%;\n  padding: 5px 10px;\n  border-right: 1px solid lightgrey;\n  font-size: 0.9em;\n  color: #999;\n}\n\ndiv.value {\n  display: table-cell;\n  vertical-align: middle;\n  width: 50%;\n  padding: 5px 10px;\n}\n\ndiv.value-readonly {\n  color: grey;\n}\n\n.typeSelector {\n  border: none;\n  // background: none;\n  width: 100%;\n}\n\n.colorSelector {\n  border: none;\n  // background: none;\n  width: 100%;\n}\n\n[contenteditable] {\n  font-family: 'Courier New', Courier, monospace;\n}\n\n.pre {\n  white-space: pre;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{name}}      {{name}}      {{name}}                {{color}}        {{name}}            {{option}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextEditRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionEnabledBreakPointMonitorTemplate.html":{"url":"classes/TransitionEnabledBreakPointMonitorTemplate.html","title":"class - TransitionEnabledBreakPointMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionEnabledBreakPointMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeComponent.html":{"url":"components/TreeNodeComponent.html","title":"component - TreeNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tree/tree-node/tree-node.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree-node\n            \n\n            \n                styleUrls\n                ./tree-node.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bold\n                            \n                            \n                                color\n                            \n                            \n                                cpnElement\n                            \n                            \n                                expanded\n                            \n                            \n                                id\n                            \n                            \n                                selected\n                            \n                            \n                                showBullet\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bold\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 'black'\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cpnElement\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBullet\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tree/tree-node/tree-node.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tree/tree-node/tree-node.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'app-tree-node',\n    templateUrl: './tree-node.html',\n    styleUrls: ['./tree-node.scss']\n})\nexport class TreeNodeComponent {\n    @Input() public expanded = [];\n    @Input() public selected:any = {};\n    @Input() id = '';\n    @Input() title = '';\n    @Input() type = '';\n    @Input() cpnElement: any;\n    @Input() bold = true;\n    @Input() color = 'black';\n    @Input() showBullet = true;\n\n    onClick() {\n        this.expanded[this.id] = !this.expanded[this.id];\n        this.selected.type = this.type;\n        this.selected.id = this.id;\n        this.selected.cpnElement = this.cpnElement;\n\n        console.log(this.constructor.name, 'onClick(), this.selected = ', this.selected);\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{ title }}\n    \n\n\n\n\n    \n\n    \n\n    \n                \n                    ./tree-node.scss\n                \n                .node {\n  cursor: pointer;\n  padding: 1px 2px;\n}\n\n.caret {\n  width: 12px;\n  float: left;\n  margin-left: -15px;\n}\n\n.title {\n  float: none;\n}\n\n.bold {\n  font-weight: bold;\n}\n\n.selected {\n  background-color: rgb(217, 242, 250);\n}\n\ndiv.child {\n  padding-left: 15px;\n\n  // display: none;\n  transition: opacity 0.3s ease-out;\n  opacity: 0;\n  height: 0;\n  overflow: hidden;\n}\n\n// display: block;\ndiv.child.expanded {\n  opacity: 1;\n  height: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ title }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'BlockHeaderComponent', 'selector': 'app-block-header'},{'name': 'EditorPanelComponent', 'selector': 'app-editor-panel'},{'name': 'MainFrameComponent', 'selector': 'app-main-frame'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MlEditorComponent', 'selector': 'app-ml-editor'},{'name': 'ModelEditorComponent', 'selector': 'app-model-editor'},{'name': 'ModelEditorToolbarComponent', 'selector': 'app-model-editor-toolbar'},{'name': 'OpenprojectButtonComponent', 'selector': 'app-openproject-button'},{'name': 'ProjectConsoleComponent', 'selector': 'app-project-console'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectExplorerComponent', 'selector': 'app-project-explorer'},{'name': 'ProjectMonitorsComponent', 'selector': 'app-project-monitors'},{'name': 'ProjectTreeBlockNodeComponent', 'selector': 'app-project-tree-block-node'},{'name': 'ProjectTreeComponent', 'selector': 'app-project-tree'},{'name': 'ProjectTreeDeclarationNodeComponent', 'selector': 'app-project-tree-declaration-node'},{'name': 'ProjectTreeMonitorblockNodeComponent', 'selector': 'app-project-tree-monitorblock-node'},{'name': 'ProjectTreeMonitorNodeComponent', 'selector': 'app-project-tree-monitor-node'},{'name': 'ProjectTreeOptionNodeComponent', 'selector': 'app-project-tree-option-node'},{'name': 'ProjectTreeOptionsNodeComponent', 'selector': 'app-project-tree-options-node'},{'name': 'ProjectTreePageNodeComponent', 'selector': 'app-project-tree-page-node'},{'name': 'ProjectTreeToolbarComponent', 'selector': 'app-project-tree-toolbar'},{'name': 'PropertiesPanelComponent', 'selector': 'app-properties-panel'},{'name': 'SaveprojectButtonComponent', 'selector': 'app-saveproject-button'},{'name': 'SimulationPanelComponent', 'selector': 'app-simulation-panel'},{'name': 'TabComponent', 'selector': 'tab'},{'name': 'TabsContainer', 'selector': 'tabs'},{'name': 'TextEditRowComponent', 'selector': 'app-text-edit-row'},{'name': 'TreeNodeComponent', 'selector': 'app-tree-node'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDefinedMonitorTemplate.html":{"url":"classes/UserDefinedMonitorTemplate.html","title":"class - UserDefinedMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDefinedMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationService.html":{"url":"injectables/ValidationService.html","title":"injectable - ValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/validation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkValidationBusy\n                            \n                            \n                                checkValidationScheduled\n                            \n                            \n                                geometryKeyList\n                            \n                            \n                                lastProjectData\n                            \n                            \n                                needCheckValidation\n                            \n                            \n                                needValidation\n                            \n                            \n                                nobackupKeyList\n                            \n                            \n                                timeTimer\n                            \n                            \n                                timeTimerSubscribtion\n                            \n                            \n                                VALIDATION_TIMEOUT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkValidation\n                            \n                            \n                                filterDifferences\n                            \n                            \n                                init\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, modelService: ModelService, accessCpnService: AccessCpnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/validation.service.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessCpnService\n                                                  \n                                                        \n                                                                        AccessCpnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkValidation\n                        \n                        \n                    \n                \n            \n            \n                \ncheckValidation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validation.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterDifferences\n                        \n                        \n                    \n                \n            \n            \n                \nfilterDifferences(differences, wordList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validation.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    differences\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    wordList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validation.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validation.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validation.service.ts:82\n                \n            \n\n\n            \n                \n                    public method for setting validation flag\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkValidationBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkValidationScheduled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geometryKeyList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'aux',\n    'token',\n    'marking',\n    'posattr',\n    'fillattr',\n    'lineattr',\n    'textattr',\n    'box',\n    'ellipse',\n    'bendpoint'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastProjectData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            needCheckValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            needValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nobackupKeyList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'bendpoint',\n    'bendpoint.0._id',\n    'bendpoint.1._id',\n    'bendpoint.2._id',\n    'bendpoint.3._id',\n    'bendpoint.4._id',\n    'bendpoint.5._id',\n    'bendpoint.6._id',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeTimerSubscribtion\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VALIDATION_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/validation.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnInit, OnDestroy } from '@angular/core';\nimport { EventService } from './event.service';\nimport { ModelService } from './model.service';\nimport { Message } from '../common/message';\nimport { AccessCpnService } from '../services/access-cpn.service';\nimport { initDomAdapter } from '@angular/platform-browser/src/browser';\nimport { cloneObject, objectsEqual } from '../common/utils';\nimport { Observable, timer } from 'rxjs';\n\nconst deepEqual = require('deep-equal');\nconst diff = require('deep-diff').diff;\n\n@Injectable()\nexport class ValidationService implements OnDestroy {\n\n  VALIDATION_TIMEOUT = 1000;\n  timeTimer: Observable;\n  timeTimerSubscribtion;\n\n  geometryKeyList = [\n    'aux',\n    'token',\n    'marking',\n    'posattr',\n    'fillattr',\n    'lineattr',\n    'textattr',\n    'box',\n    'ellipse',\n    'bendpoint'\n  ];\n\n  // workspaceElements.cpnet.page.pageattr._name.\n\n  nobackupKeyList = [\n    'bendpoint',\n    'bendpoint.0._id',\n    'bendpoint.1._id',\n    'bendpoint.2._id',\n    'bendpoint.3._id',\n    'bendpoint.4._id',\n    'bendpoint.5._id',\n    'bendpoint.6._id',\n  ];\n\n  needValidation = false;\n  needCheckValidation = false;\n  lastProjectData = {};\n  checkValidationBusy = false;\n  checkValidationScheduled = false;\n\n  constructor(\n    private eventService: EventService,\n    private modelService: ModelService,\n    private accessCpnService: AccessCpnService) {\n\n    this.eventService.on(Message.PROJECT_LOAD, (event) => {\n      this.init();\n      this.validate();\n    });\n    this.eventService.on(Message.MODEL_RELOAD, () => {\n      this.init();\n    });\n\n    this.timeTimer = timer(this.VALIDATION_TIMEOUT, this.VALIDATION_TIMEOUT);\n    this.timeTimerSubscribtion = this.timeTimer.subscribe(() => this.checkValidation());\n  }\n\n  ngOnDestroy() {\n    console.log(this.constructor.name, 'ngOnDestroy()');\n    this.timeTimerSubscribtion.unsubscribe();\n  }\n\n  init() {\n    this.needValidation = false;\n    this.lastProjectData = {};\n  }\n\n  /**\n   * public method for setting validation flag\n   */\n  public validate() {\n    if (!this.accessCpnService.isSimulation) {\n      this.needValidation = true;\n    }\n  }\n\n  filterDifferences(differences, wordList) {\n    return differences.filter((d) => {\n      if (!d.path) {\n        return false;\n      }\n      for (const key of d.path) {\n        if (wordList.includes(key)) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n\n  checkValidation() {\n    // console.log('checkValidation()');\n\n    if (this.checkValidationBusy) {\n      return;\n    }\n    this.checkValidationBusy = true;\n\n    const startTime = new Date().getTime();\n    // console.log('START checkValidation(), startTime = ', startTime);\n\n    // ------------------------------------------------------------------------------------------------------------\n\n    const projectData = cloneObject(this.modelService.getProjectData()) || {};\n    const deepEqualResult = objectsEqual(this.lastProjectData, projectData);\n\n    if (!deepEqualResult) {\n      const differences = diff(this.lastProjectData, projectData);\n      console.log(this.constructor.name, 'differences = ', differences);\n\n      if (differences && differences.length > 0) {\n        const noGeometryChangeList = this.filterDifferences(differences, this.geometryKeyList);\n        const backupChangeList = this.filterDifferences(differences, this.nobackupKeyList);\n\n        console.log(this.constructor.name, 'differences, noGeometryChangeList = ', noGeometryChangeList);\n        console.log(this.constructor.name, 'differences, backupChangeList = ', backupChangeList);\n\n        if (noGeometryChangeList.length > 0) {\n          this.validate();\n        }\n\n        if (backupChangeList.length > 0) {\n          this.eventService.send(Message.MODEL_SAVE_BACKUP, { lastProjectData: this.lastProjectData });\n        }\n\n        for (const dif of differences) {\n          this.eventService.send(Message.MODEL_CHANGED_DETAILS, { changesPath: JSON.stringify(dif.path) });\n        }\n\n        this.lastProjectData = cloneObject(projectData);\n      }\n    }\n\n    // ------------------------------------------------------------------------------------------------------------\n\n    const validationTime = new Date().getTime() - startTime;\n    if (validationTime > 10) {\n      console.log('END checkValidation(), validationTime = ', validationTime);\n    }\n\n    if (this.needValidation) {\n      this.needValidation = false;\n      this.eventService.send(Message.SERVER_INIT_NET, { projectData: this.modelService.getProjectData(), complexVerify: false });\n    }\n\n    this.checkValidationBusy = false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WriteInFileMonitorTemplate.html":{"url":"classes/WriteInFileMonitorTemplate.html","title":"class - WriteInFileMonitorTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WriteInFileMonitorTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/monitors.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            MonitorTemplate\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultInit\n                            \n                            \n                                    Public\n                                defaultLogging\n                            \n                            \n                                    Public\n                                defaultObserver\n                            \n                            \n                                    Public\n                                defaultPredicate\n                            \n                            \n                                    Public\n                                defaultStop\n                            \n                            \n                                    Public\n                                defaultTimed\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                typeDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultObserver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultPredicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultPredicate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultTimed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultTimed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            type\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/monitors.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const MonitorType = {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n};\n\nexport const MonitorTypeId = {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n};\n\n/**\n * Returns monitor type list for given element type\n * @param elementType - one of string values:\n *    - 'transition' :          element is a transition\n *    - 'place' :               element is a place\n *    - 'placeWithListColor' :  element is a place with List colorset\n *    - 'group' :               element is group of elements\n */\nexport function getMonitorTypeList(elementType) {\n  switch (elementType) {\n    case 'transition':\n      return [MonitorType.CTODC, MonitorType.TEBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'place':\n      return [MonitorType.MS, MonitorType.PCBP, MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n    case 'placeWithListColor':\n      return [MonitorType.LLDC];\n    case 'group':\n      return [MonitorType.DC, MonitorType.BP, MonitorType.UD, MonitorType.WIF];\n  }\n  return [];\n}\n\nexport function getMonitorNodeTypeList(monitorTypeId) {\n  const shapeTypeList = [];\n\n  if ([MonitorTypeId.CTODC, MonitorTypeId.TEBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('transition');\n  }\n  if ([MonitorTypeId.MS, MonitorTypeId.PCBP, MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('place');\n  }\n  if ([MonitorTypeId.LLDC].includes(monitorTypeId)) {\n    shapeTypeList.push('placeWithListColor');\n  }\n  if ([MonitorTypeId.DC, MonitorTypeId.BP, MonitorTypeId.UD, MonitorTypeId.WIF].includes(monitorTypeId)) {\n    shapeTypeList.push('group');\n  }\n\n  return shapeTypeList;\n}\n\n\ninterface MonitorTemplate {\n  typeDescription(): string;\n  type(): number;\n  defaultTimed(): boolean;\n  defaultLogging(): boolean;\n  defaultPredicate(): string;\n  defaultObserver(): string;\n  defaultInit(): string;\n  defaultStop(): string;\n}\n\nexport class DataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 3; }\n  public typeDescription(): string { return 'Data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class BreakpointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 1; }\n  public typeDescription(): string { return 'Breakpoint'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class UserDefinedMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 2; }\n  public typeDescription(): string { return 'User-defined'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class WriteInFileMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 4; }\n  public typeDescription(): string { return 'Write-in-file'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n\n  public defaultPredicate(): string {\n    return 'fun pred (bindelem) =\\nlet\\n  fun predBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = (length its = 1)\\n'\n      + '      | predBindElem _ = false\\nin\\n  predBindElem bindelem\\nend';\n  }\n  public defaultObserver(): string {\n    return 'fun obs (bindelem) =\\nlet\\n'\n      + '  fun obsBindElem (PAGE\\'ELEMENT (1, {its,oid,s})) = time()-Option.valOf(ModelTime.fromString s)\\n'\n      + '      | obsBindElem _ = 0.0\\nin\\n  obsBindElem bindelem\\nend';\n  }\n  public defaultInit(): string {\n    return 'fun init () =\\n  NONE';\n  }\n  public defaultStop(): string {\n    return 'fun stop () =\\n  NONE';\n  }\n}\n\nexport class MarkingSizeMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 0; }\n  public typeDescription(): string { return 'Marking Size'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class ListLengthDataCollectionMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 5; }\n  public typeDescription(): string { return 'List length data collection'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class CountTransitionOccurrencesMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 6; }\n  public typeDescription(): string { return 'Count transition occurrences'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class PlaceContentBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 7; }\n  public typeDescription(): string { return 'Place content break point'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\nexport class TransitionEnabledBreakPointMonitorTemplate implements MonitorTemplate {\n  public type(): number { return 8; }\n  public typeDescription(): string { return 'Transition enabled'; }\n  public defaultTimed(): boolean { return false; }\n  public defaultLogging(): boolean { return true; }\n  public defaultPredicate(): string { return ''; }\n  public defaultObserver(): string { return ''; }\n  public defaultInit(): string { return ''; }\n  public defaultStop(): string { return ''; }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                electron/main.ts\n            \n            function\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                electron/main.ts\n            \n            function\n            initCpnServerUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                electron/main.ts\n            \n            variable\n            win\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/actions/openproject-button/openproject-button.component.ts\n            \n            component\n            OpenprojectButtonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/actions/saveproject-button/saveproject-button.component.ts\n            \n            component\n            SaveprojectButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.version.ts\n            \n            class\n            AppVersion\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/application-settings/application-settings.component.ts\n            \n            component\n            ApplicationSettingsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/common/block-header.ts\n            \n            component\n            BlockHeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/constants.ts\n            \n            class\n            Constants\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/common/default-settings.ts\n            \n            function\n            getDefaultSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/message.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            BreakpointMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            CountTransitionOccurrencesMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            DataCollectionMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            ListLengthDataCollectionMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            MarkingSizeMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            PlaceContentBreakPointMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            TransitionEnabledBreakPointMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            UserDefinedMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            class\n            WriteInFileMonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            interface\n            MonitorTemplate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            function\n            getMonitorNodeTypeList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            function\n            getMonitorTypeList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            variable\n            MonitorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/monitors.ts\n            \n            variable\n            MonitorTypeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/utils.ts\n            \n            function\n            addNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/utils.ts\n            \n            function\n            arrayToNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/utils.ts\n            \n            function\n            cloneObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/utils.ts\n            \n            function\n            getNextId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/utils.ts\n            \n            function\n            nodeToArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/common/utils.ts\n            \n            function\n            objectsEqual\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/utils.ts\n            \n            variable\n            lastId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/editor-panel/editor-panel.component.ts\n            \n            component\n            EditorPanelComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/main-frame/main-frame.component.ts\n            \n            component\n            MainFrameComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/main-toolbar/main-toolbar.component.ts\n            \n            component\n            MainToolbarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/ml-editor/ml-editor.component.ts\n            \n            component\n            MlEditorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/model-editor/model-editor-toolbar/model-editor-toolbar.component.ts\n            \n            component\n            ModelEditorToolbarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/model-editor/model-editor.component.ts\n            \n            component\n            ModelEditorComponent\n            \n                4 %\n                (2/47)\n            \n        \n        \n            \n                \n                src/app/pipes/color-declarations.pipe.ts\n            \n            pipe\n            ColorDeclarationsPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/monitor-name.pipe.ts\n            \n            pipe\n            MonitorNamePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/options-name.pipe.ts\n            \n            pipe\n            OptionsNamePipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/regex.pipe.ts\n            \n            pipe\n            RegexPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/replace-spaces.pipe.ts\n            \n            pipe\n            ReplaceSpacesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/safe-html.pipe.ts\n            \n            pipe\n            SafeHtmlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/project-console/project-console.component.ts\n            \n            component\n            ProjectConsoleComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/project-details/project-details.component.ts\n            \n            component\n            ProjectDetailsComponent\n            \n                20 %\n                (9/44)\n            \n        \n        \n            \n                \n                src/app/project-explorer/project-explorer.component.ts\n            \n            component\n            ProjectExplorerComponent\n            \n                23 %\n                (35/147)\n            \n        \n        \n            \n                \n                src/app/project-monitors/project-monitors.component.ts\n            \n            component\n            ProjectMonitorsComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-block-node/project-tree-block-node.component.ts\n            \n            component\n            ProjectTreeBlockNodeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-declaration-node/project-tree-declaration-node.component.ts\n            \n            component\n            ProjectTreeDeclarationNodeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-monitor-node/project-tree-monitor-node.component.ts\n            \n            component\n            ProjectTreeMonitorNodeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-monitorblock-node/project-tree-monitorblock-node.component.ts\n            \n            component\n            ProjectTreeMonitorblockNodeComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-option-node/project-tree-option-node.component.ts\n            \n            component\n            ProjectTreeOptionNodeComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-options-node/project-tree-options-node.component.ts\n            \n            component\n            ProjectTreeOptionsNodeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-page-node/project-tree-page-node.component.ts\n            \n            component\n            ProjectTreePageNodeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree-toolbar/project-tree-toolbar.component.ts\n            \n            component\n            ProjectTreeToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/project-tree/project-tree.component.ts\n            \n            component\n            ProjectTreeComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/project-tree/tree-node/tree-node.ts\n            \n            component\n            TreeNodeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/properties-panel/components/text-edit-row.ts\n            \n            component\n            TextEditRowComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/properties-panel/properties-panel.component.ts\n            \n            component\n            PropertiesPanelComponent\n            \n                8 %\n                (3/37)\n            \n        \n        \n            \n                \n                src/app/services/access-cpn.service.ts\n            \n            injectable\n            AccessCpnService\n            \n                31 %\n                (10/32)\n            \n        \n        \n            \n                \n                src/app/services/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/model.service.ts\n            \n            injectable\n            ModelService\n            \n                44 %\n                (41/93)\n            \n        \n        \n            \n                \n                src/app/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/services/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/validation.service.ts\n            \n            injectable\n            ValidationService\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/services/validation.service.ts\n            \n            variable\n            deepEqual\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/validation.service.ts\n            \n            variable\n            diff\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/simulation-panel/simulation-panel.component.ts\n            \n            component\n            SimulationPanelComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/cpn-server-url.ts\n            \n            class\n            CpnServerUrl\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/tabs/tabs-container/tabs.container.ts\n            \n            component\n            TabsContainer\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/lib/tabs/tabs/tab.component.ts\n            \n            component\n            TabComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/material : ^8.0.1\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ~7.0.0\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.8\n        \n            @fortawesome/free-solid-svg-icons : ^5.5.0\n        \n            @ng-bootstrap/ng-bootstrap : ^4.1.0\n        \n            @progress/kendo-angular-l10n : ^1.3.0\n        \n            @progress/kendo-angular-scrollview : ^2.1.0\n        \n            @types/file-saver : ^1.3.0\n        \n            angular-fontawesome : ^1.0.0\n        \n            angular-split : ^2.0.0-beta.8\n        \n            angular-tree-component : ^8.0.0\n        \n            circular-json : ^0.5.9\n        \n            core-js : ^2.5.4\n        \n            dateformat : ^3.0.3\n        \n            deep-diff : ^1.0.2\n        \n            deep-equal : ^1.1.0\n        \n            diagram-js : ^3.3.1\n        \n            file-saver : ^1.3.8\n        \n            flex-layout : ^1.0.1\n        \n            golden-layout : ^1.5.9\n        \n            ids : ^1.0.0\n        \n            jquery : ^3.4.1\n        \n            mat-icon-import : ^0.1.1\n        \n            moddle : ^4.1.0\n        \n            moddle-xml : ^7.2.3\n        \n            ng-bootstrap : ^1.6.3\n        \n            ng2-json-editor : ^0.25.5\n        \n            ng2-json-view : ^4.0.2\n        \n            ngx-electron : ^1.0.4\n        \n            ngx-json-viewer-scrolling : ^2.3.1\n        \n            ngx-xml2json : ^1.0.2\n        \n            popper.js : ^1.15.0\n        \n            rxjs : ^6.3.3\n        \n            rxjs-compat : ^6.3.3\n        \n            rxjs-observe : ^2.1.4\n        \n            ts-helpers : ^1.1.2\n        \n            typeface-droid-sans-mono : 0.0.44\n        \n            xml-js : ^1.6.8\n        \n            xmldom : ^0.1.27\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addNode   (src/.../utils.ts)\n                        \n                        \n                            arrayToNode   (src/.../utils.ts)\n                        \n                        \n                            cloneObject   (src/.../utils.ts)\n                        \n                        \n                            createWindow   (electron/.../main.ts)\n                        \n                        \n                            getDefaultSettings   (src/.../default-settings.ts)\n                        \n                        \n                            getMonitorNodeTypeList   (src/.../monitors.ts)\n                        \n                        \n                            getMonitorTypeList   (src/.../monitors.ts)\n                        \n                        \n                            getNextId   (src/.../utils.ts)\n                        \n                        \n                            initCpnServerUrl   (electron/.../main.ts)\n                        \n                        \n                            nodeToArray   (src/.../utils.ts)\n                        \n                        \n                            objectsEqual   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/common/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \naddNode(parent, type, node)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arrayToNode\n                        \n                        \n                    \n                \n            \n            \n                \narrayToNode(array)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cloneObject\n                        \n                        \n                    \n                \n            \n            \n                \ncloneObject(object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNextId\n                        \n                        \n                    \n                \n            \n            \n                \ngetNextId()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nodeToArray\n                        \n                        \n                    \n                \n            \n            \n                \nnodeToArray(node)\n                \n            \n\n\n\n\n            \n                \n                    Convert json node to array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \njson node\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            objectsEqual\n                        \n                        \n                    \n                \n            \n            \n                \nobjectsEqual(a, b)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    electron/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createWindow\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWindow()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initCpnServerUrl\n                        \n                        \n                    \n                \n            \n            \n                \ninitCpnServerUrl()\n                \n            \n\n\n\n\n        \n    \n    src/app/common/default-settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getDefaultSettings\n                        \n                        \n                    \n                \n            \n            \n                \ngetDefaultSettings()\n                \n            \n\n\n\n\n        \n    \n    src/app/common/monitors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getMonitorNodeTypeList\n                        \n                        \n                    \n                \n            \n            \n                \ngetMonitorNodeTypeList(monitorTypeId)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitorTypeId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMonitorTypeList\n                        \n                        \n                    \n                \n            \n            \n                \ngetMonitorTypeList(elementType)\n                \n            \n\n\n\n\n            \n                \n                    Returns monitor type list for given element type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elementType\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \none of string values:\n'transition' :          element is a transition\n'place' :               element is a place\n'placeWithListColor' :  element is a place with List colorset\n'group' :               element is group of elements\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCpnIde\nThis project was generated with Angular CLI version 7.0.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_TabModule\n\n\n\ncluster_TabModule_declarations\n\n\n\ncluster_TabModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationSettingsComponent\n\nApplicationSettingsComponent\n\nAppModule -->\n\nApplicationSettingsComponent->AppModule\n\n\n\n\n\nBlockHeaderComponent\n\nBlockHeaderComponent\n\nAppModule -->\n\nBlockHeaderComponent->AppModule\n\n\n\n\n\nColorDeclarationsPipe\n\nColorDeclarationsPipe\n\nAppModule -->\n\nColorDeclarationsPipe->AppModule\n\n\n\n\n\nEditorPanelComponent\n\nEditorPanelComponent\n\nAppModule -->\n\nEditorPanelComponent->AppModule\n\n\n\n\n\nMainFrameComponent\n\nMainFrameComponent\n\nAppModule -->\n\nMainFrameComponent->AppModule\n\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\nAppModule -->\n\nMainToolbarComponent->AppModule\n\n\n\n\n\nMlEditorComponent\n\nMlEditorComponent\n\nAppModule -->\n\nMlEditorComponent->AppModule\n\n\n\n\n\nModelEditorComponent\n\nModelEditorComponent\n\nAppModule -->\n\nModelEditorComponent->AppModule\n\n\n\n\n\nModelEditorToolbarComponent\n\nModelEditorToolbarComponent\n\nAppModule -->\n\nModelEditorToolbarComponent->AppModule\n\n\n\n\n\nMonitorNamePipe\n\nMonitorNamePipe\n\nAppModule -->\n\nMonitorNamePipe->AppModule\n\n\n\n\n\nOpenprojectButtonComponent\n\nOpenprojectButtonComponent\n\nAppModule -->\n\nOpenprojectButtonComponent->AppModule\n\n\n\n\n\nOptionsNamePipePipe\n\nOptionsNamePipePipe\n\nAppModule -->\n\nOptionsNamePipePipe->AppModule\n\n\n\n\n\nProjectConsoleComponent\n\nProjectConsoleComponent\n\nAppModule -->\n\nProjectConsoleComponent->AppModule\n\n\n\n\n\nProjectDetailsComponent\n\nProjectDetailsComponent\n\nAppModule -->\n\nProjectDetailsComponent->AppModule\n\n\n\n\n\nProjectExplorerComponent\n\nProjectExplorerComponent\n\nAppModule -->\n\nProjectExplorerComponent->AppModule\n\n\n\n\n\nProjectMonitorsComponent\n\nProjectMonitorsComponent\n\nAppModule -->\n\nProjectMonitorsComponent->AppModule\n\n\n\n\n\nProjectTreeBlockNodeComponent\n\nProjectTreeBlockNodeComponent\n\nAppModule -->\n\nProjectTreeBlockNodeComponent->AppModule\n\n\n\n\n\nProjectTreeComponent\n\nProjectTreeComponent\n\nAppModule -->\n\nProjectTreeComponent->AppModule\n\n\n\n\n\nProjectTreeDeclarationNodeComponent\n\nProjectTreeDeclarationNodeComponent\n\nAppModule -->\n\nProjectTreeDeclarationNodeComponent->AppModule\n\n\n\n\n\nProjectTreeMonitorNodeComponent\n\nProjectTreeMonitorNodeComponent\n\nAppModule -->\n\nProjectTreeMonitorNodeComponent->AppModule\n\n\n\n\n\nProjectTreeMonitorblockNodeComponent\n\nProjectTreeMonitorblockNodeComponent\n\nAppModule -->\n\nProjectTreeMonitorblockNodeComponent->AppModule\n\n\n\n\n\nProjectTreeOptionNodeComponent\n\nProjectTreeOptionNodeComponent\n\nAppModule -->\n\nProjectTreeOptionNodeComponent->AppModule\n\n\n\n\n\nProjectTreeOptionsNodeComponent\n\nProjectTreeOptionsNodeComponent\n\nAppModule -->\n\nProjectTreeOptionsNodeComponent->AppModule\n\n\n\n\n\nProjectTreePageNodeComponent\n\nProjectTreePageNodeComponent\n\nAppModule -->\n\nProjectTreePageNodeComponent->AppModule\n\n\n\n\n\nProjectTreeToolbarComponent\n\nProjectTreeToolbarComponent\n\nAppModule -->\n\nProjectTreeToolbarComponent->AppModule\n\n\n\n\n\nPropertiesPanelComponent\n\nPropertiesPanelComponent\n\nAppModule -->\n\nPropertiesPanelComponent->AppModule\n\n\n\n\n\nRegexPipe\n\nRegexPipe\n\nAppModule -->\n\nRegexPipe->AppModule\n\n\n\n\n\nReplaceSpacesPipe\n\nReplaceSpacesPipe\n\nAppModule -->\n\nReplaceSpacesPipe->AppModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nAppModule -->\n\nSafeHtmlPipe->AppModule\n\n\n\n\n\nSaveprojectButtonComponent\n\nSaveprojectButtonComponent\n\nAppModule -->\n\nSaveprojectButtonComponent->AppModule\n\n\n\n\n\nSimulationPanelComponent\n\nSimulationPanelComponent\n\nAppModule -->\n\nSimulationPanelComponent->AppModule\n\n\n\n\n\nTextEditRowComponent\n\nTextEditRowComponent\n\nAppModule -->\n\nTextEditRowComponent->AppModule\n\n\n\n\n\nTreeNodeComponent\n\nTreeNodeComponent\n\nAppModule -->\n\nTreeNodeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nTabModule\n\nTabModule\n\nAppModule -->\n\nTabModule->AppModule\n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nTabModule->TabComponent \n\n\n\n\n\nTabsContainer \n\nTabsContainer \n\nTabsContainer  -->\n\nTabModule->TabsContainer \n\n\n\n\n\nAccessCpnService\n\nAccessCpnService\n\nAppModule -->\n\nAccessCpnService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nModelService\n\nModelService\n\nAppModule -->\n\nModelService->AppModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nAppModule -->\n\nProjectService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nAppModule -->\n\nValidationService->AppModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nTabModule -->\n\nTabComponent->TabModule\n\n\n\n\n\nTabsContainer\n\nTabsContainer\n\nTabModule -->\n\nTabsContainer->TabModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            deepEqual   (src/.../validation.service.ts)\n                        \n                        \n                            diff   (src/.../validation.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            lastId   (src/.../utils.ts)\n                        \n                        \n                            MonitorType   (src/.../monitors.ts)\n                        \n                        \n                            MonitorTypeId   (src/.../monitors.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            win   (electron/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/services/validation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            deepEqual\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('deep-equal')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diff\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('deep-diff').diff\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/common/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            lastId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/app/common/monitors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MonitorType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  DC: 'Data collection',\n  MS: 'Marking size',\n  BP: 'Breakpoint',\n  UD: 'User-defined',\n  WIF: 'Write-in-file',\n  LLDC: 'List length data collection',\n  CTODC: 'Count transition occurence',\n  PCBP: 'Place content break point',\n  TEBP: 'Transition enabled'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MonitorTypeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  DC: '3',\n  MS: '0',\n  BP: '1',\n  UD: '2',\n  WIF: '4',\n  LLDC: '5',\n  CTODC: '6',\n  PCBP: '7',\n  TEBP: '8'\n}\n                        \n                    \n\n\n            \n        \n\n    electron/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            win\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BrowserWindow\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
