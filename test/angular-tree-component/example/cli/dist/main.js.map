{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions/actions.component.ts.ActionsComponent.html","webpack:///./src/app/actions/actions.component.ts","webpack:///./src/app/api/api.component.ts.ApiComponent.html","webpack:///./src/app/api/api.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts.AppComponent.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/async/async.component.ts.AsyncTreeComponent.html","webpack:///./src/app/async/async.component.ts","webpack:///./src/app/basictree/basictree.component.ts.BasicTreeComponent.html","webpack:///./src/app/basictree/basictree.component.ts","webpack:///./src/app/checkboxes/checkboxes.component.ts.CheckboxesComponent.html","webpack:///./src/app/checkboxes/checkboxes.component.ts","webpack:///./src/app/contextmenu/contextmenu.component.ts.ContextmenuComponent.html","webpack:///./src/app/contextmenu/contextmenu.component.ts","webpack:///./src/app/drag/drag.component.ts.DragComponent.html","webpack:///./src/app/drag/drag.component.ts","webpack:///./src/app/dragover-styling/dragover-styling-full-tree.component.ts.DragOverStylingFullTreeComponent.html","webpack:///./src/app/dragover-styling/dragover-styling-full-tree.component.ts","webpack:///./src/app/dragover-styling/dragover-styling.component.ts.DragOverStylingComponent.html","webpack:///./src/app/dragover-styling/dragover-styling.component.ts","webpack:///./src/app/empty/empty.component.ts.EmptyComponent.html","webpack:///./src/app/empty/empty.component.ts","webpack:///./src/app/fields/fields.component.ts.FieldsComponent.html","webpack:///./src/app/fields/fields.component.ts","webpack:///./src/app/filter/filter.component.ts.FilterComponent.html","webpack:///./src/app/filter/filter.component.ts","webpack:///./src/app/fulltree/fulltree.component.ts.FullTreeComponent.html","webpack:///./src/app/fulltree/fulltree.component.ts","webpack:///./src/app/rtl/rtl-tree.component.ts.RtlTreeComponent.html","webpack:///./src/app/rtl/rtl-tree.component.ts","webpack:///./src/app/save-restore/save-restore.component.ts.SaveRestoreComponent.html","webpack:///./src/app/save-restore/save-restore.component.ts","webpack:///./src/app/scrollcontainer/scrollcontainer.component.ts.ScrollContainerComponent.html","webpack:///./src/app/scrollcontainer/scrollcontainer.component.ts","webpack:///./src/app/templates/templates.component.ts.TemplatesComponent.html","webpack:///./src/app/templates/templates.component.ts","webpack:///./src/app/virtualscroll/virtualscroll.component.ts.VirtualscrollComponent.html","webpack:///./src/app/virtualscroll/virtualscroll.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"options\"\n      [focused]=\"true\"\n    >\n    </tree-root>\n    <br>\n    <b>Custom Keys:</b><br>\n    enter - show alert<br>\n    <br>\n    <b>Custom Mouse Actions:</b><br>\n    shift+click - select multi<br>\n    double click - expand / collapse<br>\n    right-click - show alert\n  ","import { Component, Input } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from 'angular-tree-component';\n\nconst actionMapping:IActionMapping = {\n  mouse: {\n    contextMenu: (tree, node, $event) => {\n      $event.preventDefault();\n      alert(`context menu for ${node.data.name}`);\n    },\n    dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    },\n    click: (tree, node, $event) => {\n      $event.shiftKey\n        ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n        : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n    }\n  },\n  keys: {\n    [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\n  }\n};\n\n@Component({\n  selector: 'app-actions',\n  styles: [\n  ],\n  template: `\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"options\"\n      [focused]=\"true\"\n    >\n    </tree-root>\n    <br>\n    <b>Custom Keys:</b><br>\n    enter - show alert<br>\n    <br>\n    <b>Custom Mouse Actions:</b><br>\n    shift+click - select multi<br>\n    double click - expand / collapse<br>\n    right-click - show alert\n  `\n})\nexport class ActionsComponent {\n  nodes = [\n    {\n      name: 'root1',\n      children: [\n        {\n          name: 'child1'\n        }, {\n          name: 'child2'\n        }\n      ]\n    },\n    {\n      name: 'root2',\n      children: [\n        {\n          name: 'child2.1'\n        }, {\n          name: 'child2.2',\n          children: [\n            {\n              id: 1001,\n              name: 'subsub'\n            }\n          ]\n        }\n      ]\n    }\n  ];\n\n  options: ITreeOptions = {\n    actionMapping\n  };\n}\n","\n  <tree-root\n    #tree\n    [nodes]=\"nodes\"\n    [options]=\"options\"\n    [focused]=\"true\"\n  >\n  </tree-root>\n  <p>API:</p>\n  <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n  <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n  <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n  <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n  <button (click)=\"options.allowDrag = true\">allowDrag</button>\n  <p></p>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\">\n    {{ tree.treeModel.getFocusedNode()?.isActive ? 'deactivate' : 'activate' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\">\n    {{ tree.treeModel.getFocusedNode()?.isExpanded ? 'collapse' : 'expand' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().blur()\">\n    blur\n  </button>\n  <button\n    (click)=\"addNode(tree)\">\n    Add Node\n  </button>\n  <button\n    (click)=\"activateSubSub(tree)\">\n    Activate inner node\n  </button>\n  <button\n    (click)=\"tree.treeModel.expandAll()\">\n    Expand All\n  </button>\n  <button\n    (click)=\"tree.treeModel.collapseAll()\">\n    Collapse All\n  </button>\n  <button\n    (click)=\"activeNodes(tree.treeModel)\">\n    getActiveNodes()\n  </button>\n  ","import { Component, Input } from '@angular/core';\nimport { TreeNode, TreeModel, ITreeOptions } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-api',\n  styles: [\n  ],\n  template: `\n  <tree-root\n    #tree\n    [nodes]=\"nodes\"\n    [options]=\"options\"\n    [focused]=\"true\"\n  >\n  </tree-root>\n  <p>API:</p>\n  <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n  <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n  <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n  <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n  <button (click)=\"options.allowDrag = true\">allowDrag</button>\n  <p></p>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\">\n    {{ tree.treeModel.getFocusedNode()?.isActive ? 'deactivate' : 'activate' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\">\n    {{ tree.treeModel.getFocusedNode()?.isExpanded ? 'collapse' : 'expand' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().blur()\">\n    blur\n  </button>\n  <button\n    (click)=\"addNode(tree)\">\n    Add Node\n  </button>\n  <button\n    (click)=\"activateSubSub(tree)\">\n    Activate inner node\n  </button>\n  <button\n    (click)=\"tree.treeModel.expandAll()\">\n    Expand All\n  </button>\n  <button\n    (click)=\"tree.treeModel.collapseAll()\">\n    Collapse All\n  </button>\n  <button\n    (click)=\"activeNodes(tree.treeModel)\">\n    getActiveNodes()\n  </button>\n  `\n})\nexport class ApiComponent {\n  options: ITreeOptions = {\n\n  };\n  nodes = [\n    {\n      name: 'root1',\n      children: [\n        {\n          name: 'child1'\n        }, {\n          name: 'child2'\n        }\n      ]\n    },\n    {\n      name: 'root2',\n      children: [\n        {\n          name: 'child2.1'\n        }, {\n          name: 'child2.2',\n          children: [\n            {\n              id: 1001,\n              name: 'subsub'\n            }\n          ]\n        }\n      ]\n    }\n  ];\n\n  addNode(tree: any) {\n    this.nodes[0].children.push({\n      name: 'a new child'\n    });\n    tree.treeModel.update();\n  }\n\n  activateSubSub(tree: any) {\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\n    tree.treeModel.getNodeById(1001)\n      .setActiveAndVisible();\n  }\n\n  activeNodes(treeModel: any) {\n    console.log(treeModel.activeNodes);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BasicTreeComponent } from './basictree/basictree.component';\nimport { FullTreeComponent } from './fulltree/fulltree.component';\nimport { TemplatesComponent } from './templates/templates.component';\nimport { FieldsComponent } from './fields/fields.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { EmptyComponent } from './empty/empty.component';\nimport { RtlTreeComponent } from './rtl/rtl-tree.component';\nimport { AsyncTreeComponent } from './async/async.component';\nimport { SaveRestoreComponent } from './save-restore/save-restore.component';\nimport { CheckboxesComponent } from './checkboxes/checkboxes.component';\nimport { DragComponent } from './drag/drag.component';\nimport { VirtualscrollComponent } from './virtualscroll/virtualscroll.component';\nimport { ApiComponent } from './api/api.component';\nimport { ActionsComponent } from './actions/actions.component';\nimport { ScrollContainerComponent } from './scrollcontainer/scrollcontainer.component';\nimport { ContextmenuComponent } from './contextmenu/contextmenu.component';\nimport { DragOverStylingComponent } from './dragover-styling/dragover-styling.component';\nimport { DragOverStylingFullTreeComponent } from './dragover-styling/dragover-styling-full-tree.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FullTreeComponent\n  },\n  {\n    path: 'basic',\n    component: BasicTreeComponent\n  },\n  {\n    path: 'fields',\n    component: FieldsComponent\n  },\n  {\n    path: 'templates',\n    component: TemplatesComponent\n  },\n  {\n    path: 'filter',\n    component: FilterComponent\n  },\n  {\n    path: 'empty',\n    component: EmptyComponent\n  },\n  {\n    path: 'rtl',\n    component: RtlTreeComponent\n  },\n  {\n    path: 'async',\n    component: AsyncTreeComponent\n  },\n  {\n    path: 'save-restore',\n    component: SaveRestoreComponent\n  },\n  {\n    path: 'checkboxes',\n    component: CheckboxesComponent\n  },\n  {\n    path: 'drag',\n    component: DragComponent\n  },\n  {\n    path: 'dragover-styling',\n    component: DragOverStylingComponent\n  },\n  {\n    path: 'dragover-styling-full-tree',\n    component: DragOverStylingFullTreeComponent\n  },\n  {\n    path: 'virtual',\n    component: VirtualscrollComponent\n  },\n  {\n    path: 'api',\n    component: ApiComponent\n  },\n  {\n    path: 'actions',\n    component: ActionsComponent\n  },\n  {\n    path: 'scroll-container',\n    component: ScrollContainerComponent\n  },\n  {\n    path: 'context-menu',\n    component: ContextmenuComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","\n    <router-outlet></router-outlet>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TreeModule } from 'angular-tree-component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BasicTreeComponent } from './basictree/basictree.component';\nimport { FullTreeComponent } from './fulltree/fulltree.component';\nimport { TemplatesComponent } from './templates/templates.component';\nimport { FieldsComponent } from './fields/fields.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { EmptyComponent } from './empty/empty.component';\nimport { RtlTreeComponent } from './rtl/rtl-tree.component';\nimport { AsyncTreeComponent } from './async/async.component';\nimport { SaveRestoreComponent } from './save-restore/save-restore.component';\nimport { CheckboxesComponent } from './checkboxes/checkboxes.component';\nimport { DragComponent } from './drag/drag.component';\nimport { VirtualscrollComponent } from './virtualscroll/virtualscroll.component';\nimport { ApiComponent } from './api/api.component';\nimport { ActionsComponent } from './actions/actions.component';\nimport { ScrollContainerComponent } from './scrollcontainer/scrollcontainer.component';\nimport { ContextmenuComponent } from './contextmenu/contextmenu.component';\nimport { DragOverStylingComponent } from './dragover-styling/dragover-styling.component';\nimport { DragOverStylingFullTreeComponent } from './dragover-styling/dragover-styling-full-tree.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BasicTreeComponent,\n    FullTreeComponent,\n    TemplatesComponent,\n    FieldsComponent,\n    FilterComponent,\n    EmptyComponent,\n    RtlTreeComponent,\n    AsyncTreeComponent,\n    SaveRestoreComponent,\n    CheckboxesComponent,\n    DragComponent,\n    DragOverStylingComponent,\n    DragOverStylingFullTreeComponent,\n    VirtualscrollComponent,\n    ApiComponent,\n    ActionsComponent,\n    ScrollContainerComponent,\n    ContextmenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    TreeModule.forRoot(),\n    CommonModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","\n    <tree-root #tree [options]=\"options\" [nodes]=\"nodes\"></tree-root>\n ","import { Component } from '@angular/core';\nimport { ITreeOptions, TreeNode} from 'angular-tree-component';\n\n@Component({\n  selector: 'app-async',\n  template: `\n    <tree-root #tree [options]=\"options\" [nodes]=\"nodes\"></tree-root>\n `,\n  styles: []\n})\nexport class AsyncTreeComponent {\n  options: ITreeOptions = {\n    getChildren: this.getChildren.bind(this),\n    useCheckbox: true\n  };\n\n  nodes: any[] = [];\n\n  asyncChildren = [\n    {\n      name: 'child1',\n      hasChildren: true\n    }, {\n      name: 'child2'\n    }\n  ];\n\n  constructor() {\n    this.nodes = [\n      {\n        name: 'root1',\n        children: [\n          { name: 'child1' }\n        ]\n      },\n      {\n        name: 'root2',\n        hasChildren: true\n      },\n      {\n        name: 'root3'\n      }\n    ];\n  }\n\n  getChildren(node: any) {\n    const newNodes = this.asyncChildren.map((c) => Object.assign({}, c));\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(newNodes), 1000);\n    });\n  }\n}\n","\n    <tree-root [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n    <br>\n    <p>Keys:</p>\n    down | up | left | right | space | enter\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-basictree',\n  template: `\n    <tree-root [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n    <br>\n    <p>Keys:</p>\n    down | up | left | right | space | enter\n  `,\n  styles: []\n})\nexport class BasicTreeComponent {\n  nodes = [\n    {\n      name: 'root1',\n      children: [\n        { name: 'child1' },\n        { name: 'child2' }\n      ]\n    },\n    {\n      name: 'root2',\n      children: [\n        { name: 'child2.1', children: [] },\n        { name: 'child2.2', children: [\n          {name: 'grandchild2.2.1'}\n        ] }\n      ]\n    },\n    { name: 'root3' },\n    { name: 'root4', children: [] },\n    { name: 'root5', children: null }\n  ];\n}\n","\n    <h3>tri-state checkboxes</h3>\n    <tree-root\n      id=\"tree1\"\n      [nodes]=\"nodes\"\n      [options]=\"options\">\n    </tree-root>\n    <h3>The tree is using flexbox.<br>\n    Switch expander and checkbox with CSS 'order' attribute:</h3>\n    <tree-root\n      class=\"reverse\"\n      id=\"tree2\"\n      [nodes]=\"nodes\"\n      [options]=\"options\">\n    </tree-root>\n    <h3>Disable tri-state checkboxes</h3>\n    <tree-root\n      id=\"tree3\"\n      [nodes]=\"nodes\"\n      [options]=\"optionsDisabled\">\n    </tree-root>\n  ","import { ITreeOptions } from 'angular-tree-component';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-checkboxes',\n  template: `\n    <h3>tri-state checkboxes</h3>\n    <tree-root\n      id=\"tree1\"\n      [nodes]=\"nodes\"\n      [options]=\"options\">\n    </tree-root>\n    <h3>The tree is using flexbox.<br>\n    Switch expander and checkbox with CSS 'order' attribute:</h3>\n    <tree-root\n      class=\"reverse\"\n      id=\"tree2\"\n      [nodes]=\"nodes\"\n      [options]=\"options\">\n    </tree-root>\n    <h3>Disable tri-state checkboxes</h3>\n    <tree-root\n      id=\"tree3\"\n      [nodes]=\"nodes\"\n      [options]=\"optionsDisabled\">\n    </tree-root>\n  `,\n  styles: [\n  ]\n})\nexport class CheckboxesComponent {\n  nodes = [\n    {\n      name: 'root1',\n    },\n    {\n      name: 'root2',\n      children: [\n        { name: 'child1' },\n        { name: 'child2', children: [\n          { name: 'grandchild1' },\n          { name: 'grandchild2' }\n        ] }\n      ]\n    },\n    {\n      name: 'asyncroot',\n      hasChildren: true\n    }\n  ];\n\n  options: ITreeOptions = {\n    useCheckbox: true,\n    getChildren: this.getChildren.bind(this)\n  };\n\n  optionsDisabled: ITreeOptions = {\n    useCheckbox: true,\n    getChildren: this.getChildren.bind(this),\n    useTriState: false\n  };\n\n  getChildren(node: any) {\n    const newNodes = [\n      {\n        name: 'child1'\n      }, {\n        name: 'child2'\n      }\n    ];\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(newNodes), 1000);\n    });\n  }\n\n}\n","\n    <tree-root [focused]=\"true\" [options]=\"options\" [nodes]=\"nodes\">\n      <ng-template #treeNodeTemplate let-node=\"node\">\n        <span *ngIf=\"node === editNode\">\n          <input\n            autofocus\n            [(ngModel)]=\"node.data.name\"\n            (blur)=\"stopEdit()\"\n            (keyup.enter)=\"stopEdit()\"/>\n        </span>\n        <span *ngIf=\"node !== editNode\">{{ node.data.name }}</span>\n      </ng-template>\n    </tree-root>\n    <div class=\"menu\" *ngIf=\"contextMenu\" [style.left.px]=\"contextMenu.x\" [style.top.px]=\"contextMenu.y\">\n      <div>Menu for {{ contextMenu.node.data.name }}</div>\n      <hr>\n      <ul>\n        <li (click)=\"edit()\"><a>Edit</a></li>\n        <li (click)=\"copy()\"><a>Copy</a></li>\n        <li (click)=\"cut()\"><a>Cut</a></li>\n        <li (click)=\"paste()\"><a [style.opacity]=\"canPaste() && 1 || 0.3\">Paste</a></li>\n      </ul>\n    </div>\n    <br>\n    <p>Keys:</p>\n    down | up | left | right | space | enter\n  ","import { Component, HostListener } from '@angular/core';\nimport { ITreeOptions, TREE_ACTIONS, TreeNode, TreeModel } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-contextmenu',\n  template: `\n    <tree-root [focused]=\"true\" [options]=\"options\" [nodes]=\"nodes\">\n      <ng-template #treeNodeTemplate let-node=\"node\">\n        <span *ngIf=\"node === editNode\">\n          <input\n            autofocus\n            [(ngModel)]=\"node.data.name\"\n            (blur)=\"stopEdit()\"\n            (keyup.enter)=\"stopEdit()\"/>\n        </span>\n        <span *ngIf=\"node !== editNode\">{{ node.data.name }}</span>\n      </ng-template>\n    </tree-root>\n    <div class=\"menu\" *ngIf=\"contextMenu\" [style.left.px]=\"contextMenu.x\" [style.top.px]=\"contextMenu.y\">\n      <div>Menu for {{ contextMenu.node.data.name }}</div>\n      <hr>\n      <ul>\n        <li (click)=\"edit()\"><a>Edit</a></li>\n        <li (click)=\"copy()\"><a>Copy</a></li>\n        <li (click)=\"cut()\"><a>Cut</a></li>\n        <li (click)=\"paste()\"><a [style.opacity]=\"canPaste() && 1 || 0.3\">Paste</a></li>\n      </ul>\n    </div>\n    <br>\n    <p>Keys:</p>\n    down | up | left | right | space | enter\n  `,\n  styles: [\n    `.menu {\n      position: absolute;\n      background: rgba(255, 255, 255, 0.9);\n      padding: 7px;\n      border-radius: 5px;\n      box-shadow: 0 0 2px 2px rgba(0,0,0,0.2);\n    }`,\n    `ul {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n    }`,\n    `li {\n      padding: 7px;\n      border-radius: 3px;\n      cursor: pointer;\n    }`,\n    `li:hover {\n      background-color: aliceblue;\n    }`,\n  ]\n})\nexport class ContextmenuComponent {\n  contextMenu: {node: TreeNode, x: number, y: number} = null;\n  sourceNode: TreeNode = null;\n  editNode: TreeNode = null;\n  doCut = false;\n  nodes = [\n    {\n      name: 'root1',\n      children: [\n        { name: 'child1' },\n        { name: 'child2' }\n      ]\n    },\n    {\n      name: 'root2',\n      children: [\n        { name: 'child2.1', children: [] },\n        { name: 'child2.2', children: [\n          {name: 'grandchild2.2.1'}\n        ] }\n      ]\n    },\n    { name: 'root3' },\n    { name: 'root4', children: [] },\n    { name: 'root5', children: null }\n  ];\n\n  options: ITreeOptions = {\n    actionMapping: {\n      mouse: {\n        contextMenu: (treeModel: TreeModel, treeNode: TreeNode, e: MouseEvent) => {\n          e.preventDefault();\n          if (this.contextMenu && treeNode === this.contextMenu.node) {\n            return this.closeMenu();\n          }\n          this.contextMenu = {\n            node: treeNode,\n            x: e.pageX,\n            y: e.pageY\n          };\n        },\n        click: (treeModel: TreeModel, treeNode: TreeNode, e: MouseEvent) => {\n          this.closeMenu();\n          TREE_ACTIONS.TOGGLE_ACTIVE(treeModel, treeNode, e);\n        }\n      }\n    }\n  };\n\n  closeMenu = () => {\n    this.contextMenu = null;\n  }\n\n  edit = () => {\n    this.editNode = this.contextMenu.node;\n    this.closeMenu();\n  }\n\n  stopEdit = () => {\n    this.editNode = null;\n  }\n\n  copy = () => {\n    this.sourceNode = this.contextMenu.node;\n    this.doCut = false;\n    this.closeMenu();\n  }\n\n  cut = () => {\n    this.sourceNode = this.contextMenu.node;\n    this.doCut = true;\n    this.closeMenu();\n  }\n\n  paste = () => {\n    if (!this.canPaste()) {\n      return;\n    }\n    this.doCut\n      ? this.sourceNode.treeModel.moveNode(this.sourceNode, { parent: this.contextMenu.node, index: 0 })\n      : this.sourceNode.treeModel.copyNode(this.sourceNode, { parent: this.contextMenu.node, index: 0 });\n\n    this.sourceNode = null;\n    this.closeMenu();\n  }\n\n  canPaste = () => {\n    if (!this.sourceNode) {\n      return false;\n    }\n    return this.sourceNode.treeModel.canMoveNode(this.sourceNode, { parent: this.contextMenu.node, index: 0 });\n  }\n}\n\nfunction uuid() {\n  return Math.floor(Math.random() * 10000000000000);\n}\n","\n    <h4>Allowing to drag only leaf nodes; ctrl-drag to copy</h4>\n    <tree-root [state]=\"state\" [options]=\"options\" [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n  ","import { Component } from '@angular/core';\nimport { ITreeState, ITreeOptions } from 'angular-tree-component';\nimport { v4 } from 'uuid';\n\n@Component({\n  selector: 'app-drag',\n  template: `\n    <h4>Allowing to drag only leaf nodes; ctrl-drag to copy</h4>\n    <tree-root [state]=\"state\" [options]=\"options\" [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n  `,\n  styles: []\n})\nexport class DragComponent {\n  state: ITreeState = {\n    expandedNodeIds: {\n      1: true,\n      2: true\n    },\n    hiddenNodeIds: {},\n    activeNodeIds: {}\n  };\n\n  options: ITreeOptions = {\n    allowDrag: (node) => node.isLeaf,\n    getNodeClone: (node) => ({\n      ...node.data,\n      id: v4(),\n      name: `copy of ${node.data.name}`\n    })\n  };\n\n  nodes = [\n    {\n      id: 1,\n      name: 'root1',\n      children: [\n        { name: 'child1' },\n        { name: 'child2' }\n      ]\n    },\n    {\n      name: 'root2',\n      id: 2,\n      children: [\n        { name: 'child2.1', children: [] },\n        { name: 'child2.2', children: [\n          {name: 'grandchild2.2.1'}\n        ] }\n      ]\n    },\n    { name: 'root3' },\n    { name: 'root4', children: [] },\n    { name: 'root5', children: null }\n  ];\n}\n","\n    <form>\n      <input\n        #filter\n        (keyup)=\"filterNodes(filter.value, tree)\"\n        placeholder=\"filter nodes\"\n      />\n    </form>\n    <div style=\"height: 400px; width: 400px; overflow: hidden;\">\n      <tree-root\n        #tree\n        [nodes]=\"nodes\"\n        [options]=\"customTemplateStringOptions\"\n        [focused]=\"true\"\n        (event)=\"onEvent($event)\"\n        (initialized)=\"onInitialized(tree)\"\n      >\n        <ng-template #treeNodeTemplate let-node>\n          <span title=\"{{ node.data.subTitle }}\">{{ node.data.name }}</span>\n          <span class=\"pull-right\">{{ childrenCount(node) }}</span>\n          <button (click)=\"go($event)\">Custom Action</button>\n        </ng-template>\n        <ng-template #loadingTemplate>Loading, please hold....</ng-template>\n      </tree-root>\n    </div>\n    <br />\n    <p>Keys:</p>\n    down | up | left | right | space | enter\n    <p>Mouse:</p>\n    click to select | shift+click to select multi\n    <p>API:</p>\n    <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n    <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n    <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n    <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n    <button (click)=\"customTemplateStringOptions.allowDrag = true\">\n      allowDrag\n    </button>\n    <p></p>\n    <button\n      [disabled]=\"!tree.treeModel.getFocusedNode()\"\n      (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\"\n    >\n      {{\n        tree.treeModel.getFocusedNode()?.isActive ? \"deactivate\" : \"activate\"\n      }}\n    </button>\n    <button\n      [disabled]=\"!tree.treeModel.getFocusedNode()\"\n      (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\"\n    >\n      {{ tree.treeModel.getFocusedNode()?.isExpanded ? \"collapse\" : \"expand\" }}\n    </button>\n    <button\n      [disabled]=\"!tree.treeModel.getFocusedNode()\"\n      (click)=\"tree.treeModel.getFocusedNode().blur()\"\n    >\n      blur\n    </button>\n    <button (click)=\"addNode(tree)\">Add Node</button>\n    <button (click)=\"activateSubSub(tree)\">Activate inner node</button>\n    <button (click)=\"tree.treeModel.expandAll()\">Expand All</button>\n    <button (click)=\"tree.treeModel.collapseAll()\">Collapse All</button>\n    <button (click)=\"activeNodes(tree.treeModel)\">getActiveNodes()</button>\n  ","import { Component, OnInit } from '@angular/core';\nimport {\n  TreeNode,\n  TreeModel,\n  TREE_ACTIONS,\n  KEYS,\n  IActionMapping,\n  ITreeOptions\n} from 'angular-tree-component';\n\nconst actionMapping: IActionMapping = {\n  mouse: {\n    contextMenu: (tree, node, $event) => {\n      $event.preventDefault();\n      alert(`context menu for ${node.data.name}`);\n    },\n    dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    },\n    click: (tree, node, $event) => {\n      $event.shiftKey\n        ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n        : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n    }\n  },\n  keys: {\n    [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\n  }\n};\n\n@Component({\n  selector: 'app-dragover-styling-fulltree',\n  styles: [\n    `\n      button: {\n        line-height: 24px;\n        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.5);\n        border: none;\n        border-radius: 2px;\n        background: #a3d9f5;\n        cursor: pointer;\n        margin: 0 3px;\n      }\n    `\n  ],\n  template: `\n    <form>\n      <input\n        #filter\n        (keyup)=\"filterNodes(filter.value, tree)\"\n        placeholder=\"filter nodes\"\n      />\n    </form>\n    <div style=\"height: 400px; width: 400px; overflow: hidden;\">\n      <tree-root\n        #tree\n        [nodes]=\"nodes\"\n        [options]=\"customTemplateStringOptions\"\n        [focused]=\"true\"\n        (event)=\"onEvent($event)\"\n        (initialized)=\"onInitialized(tree)\"\n      >\n        <ng-template #treeNodeTemplate let-node>\n          <span title=\"{{ node.data.subTitle }}\">{{ node.data.name }}</span>\n          <span class=\"pull-right\">{{ childrenCount(node) }}</span>\n          <button (click)=\"go($event)\">Custom Action</button>\n        </ng-template>\n        <ng-template #loadingTemplate>Loading, please hold....</ng-template>\n      </tree-root>\n    </div>\n    <br />\n    <p>Keys:</p>\n    down | up | left | right | space | enter\n    <p>Mouse:</p>\n    click to select | shift+click to select multi\n    <p>API:</p>\n    <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n    <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n    <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n    <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n    <button (click)=\"customTemplateStringOptions.allowDrag = true\">\n      allowDrag\n    </button>\n    <p></p>\n    <button\n      [disabled]=\"!tree.treeModel.getFocusedNode()\"\n      (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\"\n    >\n      {{\n        tree.treeModel.getFocusedNode()?.isActive ? \"deactivate\" : \"activate\"\n      }}\n    </button>\n    <button\n      [disabled]=\"!tree.treeModel.getFocusedNode()\"\n      (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\"\n    >\n      {{ tree.treeModel.getFocusedNode()?.isExpanded ? \"collapse\" : \"expand\" }}\n    </button>\n    <button\n      [disabled]=\"!tree.treeModel.getFocusedNode()\"\n      (click)=\"tree.treeModel.getFocusedNode().blur()\"\n    >\n      blur\n    </button>\n    <button (click)=\"addNode(tree)\">Add Node</button>\n    <button (click)=\"activateSubSub(tree)\">Activate inner node</button>\n    <button (click)=\"tree.treeModel.expandAll()\">Expand All</button>\n    <button (click)=\"tree.treeModel.collapseAll()\">Collapse All</button>\n    <button (click)=\"activeNodes(tree.treeModel)\">getActiveNodes()</button>\n  `\n})\nexport class DragOverStylingFullTreeComponent implements OnInit {\n  nodes: any[];\n  nodes2 = [{ name: 'root' }, { name: 'root2' }];\n  asyncChildren = new Array(4).fill(null).map((item, n) => ({\n    name: 'async child2.' + n,\n    subTitle: 'async child ' + n,\n    hasChildren: n < 5\n  }));\n  customTemplateStringOptions: ITreeOptions = {\n    // displayField: 'subTitle',\n    isExpandedField: 'expanded',\n    idField: 'uuid',\n    getChildren: this.getChildren.bind(this),\n    actionMapping,\n    nodeHeight: 23,\n    allowDrag: node => {\n      // console.log('allowDrag?');\n      return true;\n    },\n    allowDrop: node => {\n      // console.log('allowDrop?');\n      return true;\n    },\n    allowDragoverStyling: false,\n    useVirtualScroll: true,\n    animateExpand: true\n  };\n  constructor() {}\n  ngOnInit() {\n    setTimeout(() => {\n      this.nodes = [\n        {\n          expanded: true,\n          name: 'root expanded',\n          subTitle: 'the root',\n          children: [\n            {\n              name: 'child2',\n              subTitle: 'a bad child',\n              hasChildren: false\n            },\n            {\n              name: 'child2',\n              subTitle: 'a bad child',\n              hasChildren: false\n            }\n          ]\n        },\n        {\n          name: 'root2',\n          subTitle: 'the second root',\n          children: [\n            {\n              name: 'child2.1',\n              subTitle: 'new and improved',\n              uuid: '11',\n              hasChildren: false\n            },\n            {\n              name: 'child2.2',\n              subTitle: 'new and improved2',\n              children: [\n                {\n                  uuid: 1001,\n                  name: 'subsub',\n                  subTitle: 'subsub',\n                  hasChildren: false\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'asyncroot',\n          hasChildren: true\n        }\n      ];\n\n      for (let i = 0; i < 1000; i++) {\n        this.nodes.push({\n          name: `rootDynamic${i}`,\n          subTitle: `root created dynamically ${i}`,\n          children: new Array(10).fill(null).map((item, n) => ({\n            name: `rootChildDynamic${i}.${n}`,\n            subTitle: `rootChildDynamicTitle${i}.${n}`\n          }))\n        });\n      }\n    }, 1);\n  }\n\n  getChildren(node: TreeNode) {\n    return new Promise((resolve, reject) => {\n      setTimeout(\n        () =>\n          resolve(\n            this.asyncChildren.map(c => {\n              return Object.assign({}, c, {\n                hasChildren: node.level < 5\n              });\n            })\n          ),\n        2000\n      );\n    });\n  }\n\n  addNode(tree: any) {\n    this.nodes[0].children.push({\n      name: 'a new child'\n    });\n    tree.treeModel.update();\n  }\n\n  childrenCount(node: TreeNode): string {\n    return node && node.children ? `(${node.children.length})` : '';\n  }\n\n  filterNodes(text: string, tree: any) {\n    tree.treeModel.filterNodes(text);\n  }\n\n  activateSubSub(tree: any) {\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\n    tree.treeModel.getNodeById(1001).setActiveAndVisible();\n  }\n\n  onEvent(event: any) {\n    console.log(event);\n  }\n\n  onInitialized(tree: any) {\n    // tree.treeModel.getNodeById('11').setActiveAndVisible();\n  }\n\n  go($event: any) {\n    $event.stopPropagation();\n    alert('this method is on the app component');\n  }\n\n  activeNodes(treeModel: TreeModel) {\n    console.log(treeModel.activeNodes);\n  }\n}\n","\n    <h4>Disabled styling of nodes on dragover</h4>\n    <tree-root\n      [state]=\"state\"\n      [options]=\"options\"\n      [focused]=\"true\"\n      [nodes]=\"nodes\"\n    ></tree-root>\n  ","import { Component } from '@angular/core';\nimport { ITreeState, ITreeOptions } from 'angular-tree-component';\nimport { v4 } from 'uuid';\n\n@Component({\n  selector: 'app-dragover-styling',\n  template: `\n    <h4>Disabled styling of nodes on dragover</h4>\n    <tree-root\n      [state]=\"state\"\n      [options]=\"options\"\n      [focused]=\"true\"\n      [nodes]=\"nodes\"\n    ></tree-root>\n  `,\n  styles: []\n})\nexport class DragOverStylingComponent {\n  state: ITreeState = {\n    expandedNodeIds: {\n      1: true,\n      2: true\n    },\n    hiddenNodeIds: {},\n    activeNodeIds: {}\n  };\n\n  options: ITreeOptions = {\n    allowDrag: node => true,\n    allowDragoverStyling: false,\n    getNodeClone: node => ({\n      ...node.data,\n      id: v4(),\n      name: `copy of ${node.data.name}`\n    })\n  };\n\n  nodes = [\n    {\n      id: 1,\n      name: 'root1',\n      children: [{ name: 'child1' }, { name: 'child2' }]\n    },\n    {\n      name: 'root2',\n      id: 2,\n      children: [\n        { name: 'child2.1', children: [] },\n        { name: 'child2.2', children: [{ name: 'grandchild2.2.1' }] }\n      ]\n    },\n    { name: 'root3' },\n    { name: 'root4', children: [] },\n    { name: 'root5', children: null }\n  ];\n}\n","\n    <tree-root #tree1 id=\"tree1\" [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n    <tree-root #tree2 id=\"tree2\" [focused]=\"true\" [nodes]=\"nodes2\"></tree-root>\n    <button (click)=\"loadNodes()\">loadNodes 1</button>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-empty',\n  template: `\n    <tree-root #tree1 id=\"tree1\" [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n    <tree-root #tree2 id=\"tree2\" [focused]=\"true\" [nodes]=\"nodes2\"></tree-root>\n    <button (click)=\"loadNodes()\">loadNodes 1</button>\n  `,\n  styles: []\n})\nexport class EmptyComponent {\n  nodes: any[] = [];\n  nodes2: any[] | null = null;\n\n  loadNodes() {\n    this.nodes = [{ name: 'node' }];\n    this.nodes2 = [{ name: 'node' }];\n  }\n}\n","\n    <h3>Overriding displayField & nodeClass</h3>\n    <tree-root id=\"tree1\" [focused]=\"true\" [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n  ","import { Component } from '@angular/core';\nimport { ITreeOptions } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-fields',\n  template: `\n    <h3>Overriding displayField & nodeClass</h3>\n    <tree-root id=\"tree1\" [focused]=\"true\" [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n  `,\n  styles: [\n  ]\n})\nexport class FieldsComponent {\n  nodes = [\n    {\n      _id: '1',\n      title: 'root1',\n      className: 'root1Class',\n      nodes: [{_id: '3', title: 'child1', className: 'root1Class'}]\n    },\n    {\n      _id: '2',\n      title: 'root2',\n      className: 'root2Class'\n    }\n  ];\n\n  options: ITreeOptions = {\n    displayField: 'title',\n    idField: '_id',\n    childrenField: 'nodes',\n    nodeClass: (node) => node.data.className\n  };\n}\n","\n    <h2>Filter</h2>\n    <input id=\"filter\" #filter (keyup)=\"tree.treeModel.filterNodes(filter.value)\" placeholder=\"filter nodes\"/>\n    <button (click)=\"tree.treeModel.clearFilter()\">Clear Filter</button>\n    <tree-root #tree [focused]=\"true\" [options]=\"options\" [nodes]=\"nodes\"></tree-root>\n\n    <input id=\"filter2\" #filter2 (keyup)=\"tree.treeModel.filterNodes(filter2.value, false)\" placeholder=\"filter nodes\"/>\n\n    <h3>Filter By Function (Fuzzy Search)</h3>\n    <input id=\"filter3\" #filter3 (keyup)=\"filterFn(filter3.value, tree.treeModel)\" placeholder=\"filter nodes by fuzzy search\"/>\n ","import { Component } from '@angular/core';\nimport { TreeModel, TreeNode } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-filter',\n  template: `\n    <h2>Filter</h2>\n    <input id=\"filter\" #filter (keyup)=\"tree.treeModel.filterNodes(filter.value)\" placeholder=\"filter nodes\"/>\n    <button (click)=\"tree.treeModel.clearFilter()\">Clear Filter</button>\n    <tree-root #tree [focused]=\"true\" [options]=\"options\" [nodes]=\"nodes\"></tree-root>\n\n    <input id=\"filter2\" #filter2 (keyup)=\"tree.treeModel.filterNodes(filter2.value, false)\" placeholder=\"filter nodes\"/>\n\n    <h3>Filter By Function (Fuzzy Search)</h3>\n    <input id=\"filter3\" #filter3 (keyup)=\"filterFn(filter3.value, tree.treeModel)\" placeholder=\"filter nodes by fuzzy search\"/>\n `,\n  styles: []\n})\nexport class FilterComponent {\n  options = {\n    useCheckbox: true\n  };\n  nodes = [\n    {\n      name: 'North America',\n      children: [\n        { name: 'United States', children: [\n          {name: 'New York'},\n          {name: 'California'},\n          {name: 'Florida'}\n        ] },\n        { name: 'Canada' }\n      ]\n    },\n    {\n      name: 'South America',\n      children: [\n        { name: 'Argentina', children: [] },\n        { name: 'Brazil' }\n      ]\n    },\n    {\n      name: 'Europe',\n      children: [\n        { name: 'England' },\n        { name: 'Germany' },\n        { name: 'France' },\n        { name: 'Italy' },\n        { name: 'Spain' }\n      ]\n    }\n  ];\n\n  filterFn(value: string, treeModel: TreeModel) {\n    treeModel.filterNodes((node: TreeNode) => fuzzysearch(value, node.data.name));\n  }\n}\n\n\nfunction fuzzysearch (needle: string, haystack: string) {\n  const haystackLC = haystack.toLowerCase();\n  const needleLC = needle.toLowerCase();\n\n  const hlen = haystack.length;\n  const nlen = needleLC.length;\n\n  if (nlen > hlen) {\n    return false;\n  }\n  if (nlen === hlen) {\n    return needleLC === haystackLC;\n  }\n  outer: for (let i = 0, j = 0; i < nlen; i++) {\n    const nch = needleLC.charCodeAt(i);\n\n    while (j < hlen) {\n      if (haystackLC.charCodeAt(j++) === nch) {\n        continue outer;\n      }\n    }\n    return false;\n  }\n  return true;\n}\n","\n  <form>\n    <input #filter (keyup)=\"filterNodes(filter.value, tree)\" placeholder=\"filter nodes\"/>\n  </form>\n  <div style=\"height: 400px; width: 400px; overflow: hidden;\">\n\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"customTemplateStringOptions\"\n      [focused]=\"true\"\n      (event)=\"onEvent($event)\"\n      (initialized)=\"onInitialized(tree)\"\n    >\n      <ng-template #treeNodeTemplate let-node>\n        <span title=\"{{node.data.subTitle}}\">{{ node.data.name }}</span>\n        <span class=\"pull-right\">{{ childrenCount(node) }}</span>\n        <button (click)=\"go($event)\">Custom Action</button>\n      </ng-template>\n      <ng-template #loadingTemplate>Loading, please hold....</ng-template>\n    </tree-root>\n  </div>\n  <br>\n  <p>Keys:</p>\n  down | up | left | right | space | enter\n  <p>Mouse:</p>\n  click to select | shift+click to select multi\n  <p>API:</p>\n  <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n  <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n  <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n  <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n  <button (click)=\"customTemplateStringOptions.allowDrag = true\">allowDrag</button>\n  <p></p>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\">\n    {{ tree.treeModel.getFocusedNode()?.isActive ? 'deactivate' : 'activate' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\">\n    {{ tree.treeModel.getFocusedNode()?.isExpanded ? 'collapse' : 'expand' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().blur()\">\n    blur\n  </button>\n  <button\n    (click)=\"addNode(tree)\">\n    Add Node\n  </button>\n  <button\n    (click)=\"activateSubSub(tree)\">\n    Activate inner node\n  </button>\n  <button\n    (click)=\"tree.treeModel.expandAll()\">\n    Expand All\n  </button>\n  <button\n    (click)=\"tree.treeModel.collapseAll()\">\n    Collapse All\n  </button>\n  <button\n    (click)=\"activeNodes(tree.treeModel)\">\n    getActiveNodes()\n  </button>\n  ","import { Component, Input, OnInit } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from 'angular-tree-component';\n\nconst actionMapping: IActionMapping = {\n  mouse: {\n    contextMenu: (tree, node, $event) => {\n      $event.preventDefault();\n      alert(`context menu for ${node.data.name}`);\n    },\n    dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    },\n    click: (tree, node, $event) => {\n      $event.shiftKey\n        ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n        : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event)\n    }\n  },\n  keys: {\n    [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\n  }\n};\n\n@Component({\n  selector: 'app-fulltree',\n  styles: [\n    `button: {\n        line - height: 24px;\n        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.5);\n        border: none;\n        border-radius: 2px;\n        background: #A3D9F5;\n        cursor: pointer;\n        margin: 0 3px;\n      }`\n  ],\n  template: `\n  <form>\n    <input #filter (keyup)=\"filterNodes(filter.value, tree)\" placeholder=\"filter nodes\"/>\n  </form>\n  <div style=\"height: 400px; width: 400px; overflow: hidden;\">\n\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"customTemplateStringOptions\"\n      [focused]=\"true\"\n      (event)=\"onEvent($event)\"\n      (initialized)=\"onInitialized(tree)\"\n    >\n      <ng-template #treeNodeTemplate let-node>\n        <span title=\"{{node.data.subTitle}}\">{{ node.data.name }}</span>\n        <span class=\"pull-right\">{{ childrenCount(node) }}</span>\n        <button (click)=\"go($event)\">Custom Action</button>\n      </ng-template>\n      <ng-template #loadingTemplate>Loading, please hold....</ng-template>\n    </tree-root>\n  </div>\n  <br>\n  <p>Keys:</p>\n  down | up | left | right | space | enter\n  <p>Mouse:</p>\n  click to select | shift+click to select multi\n  <p>API:</p>\n  <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n  <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n  <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n  <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n  <button (click)=\"customTemplateStringOptions.allowDrag = true\">allowDrag</button>\n  <p></p>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\">\n    {{ tree.treeModel.getFocusedNode()?.isActive ? 'deactivate' : 'activate' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\">\n    {{ tree.treeModel.getFocusedNode()?.isExpanded ? 'collapse' : 'expand' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().blur()\">\n    blur\n  </button>\n  <button\n    (click)=\"addNode(tree)\">\n    Add Node\n  </button>\n  <button\n    (click)=\"activateSubSub(tree)\">\n    Activate inner node\n  </button>\n  <button\n    (click)=\"tree.treeModel.expandAll()\">\n    Expand All\n  </button>\n  <button\n    (click)=\"tree.treeModel.collapseAll()\">\n    Collapse All\n  </button>\n  <button\n    (click)=\"activeNodes(tree.treeModel)\">\n    getActiveNodes()\n  </button>\n  `\n})\nexport class FullTreeComponent implements OnInit {\n  nodes: any[];\n  nodes2 = [{name: 'root'}, {name: 'root2'}];\n  asyncChildren = new Array(4).fill(null).map((item, n) => ({\n    name: 'async child2.' + n,\n    subTitle: 'async child ' + n,\n    hasChildren: n < 5\n  }));\n  customTemplateStringOptions: ITreeOptions = {\n    // displayField: 'subTitle',\n    isExpandedField: 'expanded',\n    idField: 'uuid',\n    getChildren: this.getChildren.bind(this),\n    actionMapping,\n    nodeHeight: 23,\n    allowDrag: (node) => {\n      // console.log('allowDrag?');\n      return true;\n    },\n    allowDrop: (node) => {\n      // console.log('allowDrop?');\n      return true;\n    },\n    useVirtualScroll: true,\n    animateExpand: true\n  };\n  constructor() {\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      this.nodes = [\n        {\n          expanded: true,\n          name: 'root expanded',\n          subTitle: 'the root',\n          children: [\n            {\n              name: 'child2',\n              subTitle: 'a bad child',\n              hasChildren: false\n            },\n            {\n              name: 'child2',\n              subTitle: 'a bad child',\n              hasChildren: false\n            }\n          ]\n        },\n        {\n          name: 'root2',\n          subTitle: 'the second root',\n          children: [\n            {\n              name: 'child2.1',\n              subTitle: 'new and improved',\n              uuid: '11',\n              hasChildren: false\n            }, {\n              name: 'child2.2',\n              subTitle: 'new and improved2',\n              children: [\n                {\n                  uuid: 1001,\n                  name: 'subsub',\n                  subTitle: 'subsub',\n                  hasChildren: false\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'asyncroot',\n          hasChildren: true\n        }\n      ];\n\n      for (let i = 0; i < 1000; i++) {\n        this.nodes.push({\n          name: `rootDynamic${i}`,\n          subTitle: `root created dynamically ${i}`,\n          children: new Array(10).fill(null).map((item, n) => ({\n            name: `rootChildDynamic${i}.${n}`,\n            subTitle: `rootChildDynamicTitle${i}.${n}`\n          }))\n        });\n      }\n    }, 1);\n  }\n\n  getChildren(node: TreeNode) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.asyncChildren.map((c) => {\n        return Object.assign({}, c, {\n          hasChildren: node.level < 5\n        });\n      })), 2000);\n    });\n  }\n\n  addNode(tree: any) {\n    this.nodes[0].children.push({\n\n      name: 'a new child'\n    });\n    tree.treeModel.update();\n  }\n\n  childrenCount(node: TreeNode): string {\n    return node && node.children ? `(${node.children.length})` : '';\n  }\n\n  filterNodes(text: string, tree: any) {\n    tree.treeModel.filterNodes(text);\n  }\n\n  activateSubSub(tree: any) {\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\n    tree.treeModel.getNodeById(1001)\n      .setActiveAndVisible();\n  }\n\n  onEvent(event: any) {\n    console.log(event);\n  }\n\n  onInitialized(tree: any) {\n    // tree.treeModel.getNodeById('11').setActiveAndVisible();\n  }\n\n  go($event: any) {\n    $event.stopPropagation();\n    alert('this method is on the app component');\n  }\n\n  activeNodes(treeModel: TreeModel) {\n    console.log(treeModel.activeNodes);\n  }\n}\n","\n    <tree-root [focused]=\"true\" [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n  ","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-basictree',\n  template: `\n    <tree-root [focused]=\"true\" [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: []\n})\nexport class RtlTreeComponent {\n  options = {\n    rtl: true\n  };\n\n  nodes = [\n    {\n      name: 'עץ תיקיות',\n      children: [\n        { name: 'קובץ 1' },\n        { name: 'קובץ 2' }\n      ]\n    },\n    {\n      name: 'עוד עץ',\n      children: [\n        { name: 'עלה', children: [] },\n        { name: 'ענף', children: [\n          {name: 'בן של ענף'}\n        ] }\n      ]\n    }\n  ];\n}\n","\n    <input id=\"filter\" #filter (keyup)=\"tree.treeModel.filterNodes(filter.value)\" placeholder=\"filter nodes\"/>\n    <tree-root [options]=\"options\" [(state)]=\"state\" #tree [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n  ","import { Component } from '@angular/core';\nimport { ITreeState } from 'angular-tree-component';\n\nconst getChildren = () => new Promise((resolve) => {\n  setTimeout(() => resolve([\n    { id: 5, name: 'child2.1', children: [] },\n    { id: 6, name: 'child2.2', children: [\n      { id: 7, name: 'grandchild2.2.1' }\n    ] }\n  ]), 2000);\n});\n\n@Component({\n  selector: 'app-saverestore',\n  template: `\n    <input id=\"filter\" #filter (keyup)=\"tree.treeModel.filterNodes(filter.value)\" placeholder=\"filter nodes\"/>\n    <tree-root [options]=\"options\" [(state)]=\"state\" #tree [focused]=\"true\" [nodes]=\"nodes\"></tree-root>\n  `,\n  styles: []\n})\nexport class SaveRestoreComponent {\n  get state(): ITreeState {\n    return localStorage.treeState && JSON.parse(localStorage.treeState);\n  }\n  set state(state: ITreeState) {\n    localStorage.treeState = JSON.stringify(state);\n  }\n\n  options = {\n    getChildren\n  };\n\n  nodes = [\n    {\n      id: 1,\n      name: 'root1',\n      children: [\n        { id: 2, name: 'child1' },\n        { id: 3, name: 'child2' }\n      ]\n    },\n    {\n      id: 4,\n      name: 'root2',\n      hasChildren: true\n    }\n  ];\n\n}\n","\n  <div style=\"height: 300px; width: 200px;border: 1px solid grey\">Padding</div>\n  <div>\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"options\"\n      [focused]=\"true\"\n    ></tree-root>\n  </div>\n  ","import { Component, Input, OnInit } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-scrollcontainer',\n  styles: [\n  ],\n  template: `\n  <div style=\"height: 300px; width: 200px;border: 1px solid grey\">Padding</div>\n  <div>\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"options\"\n      [focused]=\"true\"\n    ></tree-root>\n  </div>\n  `\n})\nexport class ScrollContainerComponent implements OnInit {\n  nodes: any[] = [];\n  options: ITreeOptions = {\n    scrollContainer: <HTMLElement>document.body.parentElement\n  };\n  constructor() {\n  }\n  ngOnInit() {\n    for (let i = 0; i < 200; i++) {\n      this.nodes.push({\n        name: `rootDynamic${i}`,\n        subTitle: `root created dynamically ${i}`\n      });\n    }\n  }\n\n}\n","\n    <h3>treeNodeTemplate and loadingTemplate</h3>\n    <tree-root id=\"tree1\" [focused]=\"true\" [nodes]=\"nodes1\" [options]=\"options1\">\n      <ng-template #treeNodeTemplate let-node let-index=\"index\">\n        <span [class]=\"node.data.className + 'Index'\">{{ index }}</span>\n        <span [class]=\"node.data.className\" [class.title]=\"true\">{{ node.data.title }}</span>\n      </ng-template>\n      <ng-template #loadingTemplate let-node>\n        <div [class]=\"node.data.className + 'Loading'\">Loading {{ node.data.title }}...</div>\n      </ng-template>\n    </tree-root>\n    \n    <h3>treeNodeWrapper</h3>\n    <tree-root id=\"tree3\" [focused]=\"true\" [nodes]=\"nodes2\" [options]=\"options1\">\n      <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\n        <span [class]=\"node.data.className + 'Index'\">{{ index }}</span>      \n         <input type=\"checkbox\"><span>&rarr;</span>\n         <span [class]=\"node.data.className\" [class.title]=\"true\">{{ node.data.title }}</span>\n      </ng-template>\n    </tree-root>\n\n    <h3>treeNodeFullTemplate</h3>\n    <tree-root id=\"tree2\" [focused]=\"true\" [nodes]=\"nodes2\">\n      <ng-template #treeNodeFullTemplate let-node let-index=\"index\" let-templates=\"templates\">\n        <div class=\"tree-node\">\n          <input type=\"checkbox\" [checked]=\"node.isActive\" (change)=\"node.toggleActivated(true)\" />\n          <tree-node-expander [node]=\"node\"></tree-node-expander>\n          <div\n            class=\"node-content-wrapper\"\n            [class.node-content-wrapper-active]=\"node.isActive\"\n            [class.node-content-wrapper-focused]=\"node.isFocused\"\n            (click)=\"node.toggleActivated(true)\">\n            <span [class]=\"node.data.className + 'Index'\">{{ index }}</span>\n            <span [class]=\"node.data.className\" [class.title]=\"true\">{{ node.data.title }}</span>\n          </div>\n          <tree-node-children [node]=\"node\" [templates]=\"templates\"></tree-node-children>\n        </div>\n      </ng-template>\n    </tree-root>\n  ","import { Component } from '@angular/core';\nimport { ITreeOptions } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-templates',\n  template: `\n    <h3>treeNodeTemplate and loadingTemplate</h3>\n    <tree-root id=\"tree1\" [focused]=\"true\" [nodes]=\"nodes1\" [options]=\"options1\">\n      <ng-template #treeNodeTemplate let-node let-index=\"index\">\n        <span [class]=\"node.data.className + 'Index'\">{{ index }}</span>\n        <span [class]=\"node.data.className\" [class.title]=\"true\">{{ node.data.title }}</span>\n      </ng-template>\n      <ng-template #loadingTemplate let-node>\n        <div [class]=\"node.data.className + 'Loading'\">Loading {{ node.data.title }}...</div>\n      </ng-template>\n    </tree-root>\n    \n    <h3>treeNodeWrapper</h3>\n    <tree-root id=\"tree3\" [focused]=\"true\" [nodes]=\"nodes2\" [options]=\"options1\">\n      <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\n        <span [class]=\"node.data.className + 'Index'\">{{ index }}</span>      \n         <input type=\"checkbox\"><span>&rarr;</span>\n         <span [class]=\"node.data.className\" [class.title]=\"true\">{{ node.data.title }}</span>\n      </ng-template>\n    </tree-root>\n\n    <h3>treeNodeFullTemplate</h3>\n    <tree-root id=\"tree2\" [focused]=\"true\" [nodes]=\"nodes2\">\n      <ng-template #treeNodeFullTemplate let-node let-index=\"index\" let-templates=\"templates\">\n        <div class=\"tree-node\">\n          <input type=\"checkbox\" [checked]=\"node.isActive\" (change)=\"node.toggleActivated(true)\" />\n          <tree-node-expander [node]=\"node\"></tree-node-expander>\n          <div\n            class=\"node-content-wrapper\"\n            [class.node-content-wrapper-active]=\"node.isActive\"\n            [class.node-content-wrapper-focused]=\"node.isFocused\"\n            (click)=\"node.toggleActivated(true)\">\n            <span [class]=\"node.data.className + 'Index'\">{{ index }}</span>\n            <span [class]=\"node.data.className\" [class.title]=\"true\">{{ node.data.title }}</span>\n          </div>\n          <tree-node-children [node]=\"node\" [templates]=\"templates\"></tree-node-children>\n        </div>\n      </ng-template>\n    </tree-root>\n  `,\n  styles: [\n    '.root1Class { color: blue }',\n    '.root2Class { color: red }'\n  ]\n})\nexport class TemplatesComponent {\n  nodes1 = [\n    {\n      title: 'root1',\n      className: 'root1Class'\n    },\n    {\n      title: 'root2',\n      className: 'root2Class',\n      hasChildren: true\n    }\n  ];\n\n  nodes2 = [\n    {\n      title: 'root1',\n      className: 'root1Class'\n    },\n    {\n      title: 'root2',\n      className: 'root2Class',\n      children: [\n        { title: 'child1', className: 'child1Class' }\n      ]\n    }\n  ];\n\n  options1: ITreeOptions = {\n    getChildren: () => new Promise((resolve, reject) => { })\n  };\n\n  options0: ITreeOptions = {\n    displayField: 'title',\n    nodeClass: (node) => `${node.data.title}Class`\n  };\n}\n","\n  <div style=\"height: 800px; width: 500px; overflow: hidden;\">\n\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"options\"\n      [focused]=\"true\"\n    >\n    </tree-root>\n  </div>\n  ","import { Component, Input } from '@angular/core';\nimport { TreeNode, TreeModel, ITreeOptions } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-virtualscroll',\n  styles: [\n  ],\n  template: `\n  <div style=\"height: 800px; width: 500px; overflow: hidden;\">\n\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"options\"\n      [focused]=\"true\"\n    >\n    </tree-root>\n  </div>\n  `\n})\nexport class VirtualscrollComponent {\n  nodes: any[];\n\n  options: ITreeOptions = {\n    nodeHeight: 23,\n    useVirtualScroll: true\n  };\n\n  constructor() {\n    this.nodes = new Array(1000).fill(null).map((item, i) => ({\n      id: `${i}`,\n      name: `rootDynamic${i}`,\n      children: new Array(100).fill(null).map((item, n) => ({\n        id: `${i}.${n}`,\n        name: `rootChildDynamic${i}.${n}`\n      }))\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}